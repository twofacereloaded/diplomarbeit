var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/modules/AngularMaterialModule.html",[0,0.8,1,1.539]],["body/modules/AngularMaterialModule.html",[0,1.106,1,2.595,2,0.351,3,0.299,4,0.2,5,4.393,6,4.393,7,0.937,8,0.031,9,2.595,10,0.712,11,5.358,12,5.358,13,5.358,14,5.358,15,5.358,16,5.358,17,5.358,18,5.358,19,2.564,20,3.674,21,2.564,22,0.364,23,0.2,24,0.025,25,0.025]],["title/components/AppComponent.html",[26,0.566,27,1.104]],["body/components/AppComponent.html",[2,0.253,3,0.215,4,0.144,7,0.801,8,0.031,10,0.514,22,0.215,23,0.144,24,0.021,25,0.021,26,0.992,27,1.846,28,1.535,29,1.535,30,1.535,31,2.651,32,1.184,33,2.394,34,1.535,35,2.978,36,2.512,37,2.531,38,2.1,39,4.337,40,2.1,41,4.337,42,0.419,43,1.005,44,3.445,45,1.184,46,2.575,47,0.798,48,1.68,49,1.997,50,1.145,51,4.337,52,0.798,53,1.145,54,0.637,55,0.734,56,3.17,57,0.798,58,1.193,59,1.184,60,1.016,61,1.016,62,4.337,63,4.337,64,1.35,65,3.17,66,2.054,67,1.193,68,3.17,69,1.101,70,2.1,71,1.926,72,2.1,73,2.575,74,1.535,75,1.535,76,1.016,77,1.535,78,1.101,79,1.535,80,1.016,81,1.535,82,1.101,83,1.535,84,1.016,85,1.535,86,1.016,87,1.535,88,1.016,89,1.295,90,1.535]],["title/modules/AppModule.html",[0,0.8,91,2.059]],["body/modules/AppModule.html",[0,0.969,1,2.636,2,0.213,3,0.182,4,0.122,7,1.028,8,0.032,9,1.864,10,0.433,21,1.56,22,0.262,23,0.122,24,0.018,25,0.018,27,2.109,36,1.092,69,0.929,76,1.841,78,1.891,82,1.891,91,4.165,92,1.417,93,2.922,94,2.922,95,3.051,96,2.236,97,2.236,98,2.236,99,2.236,100,2.236,101,3.177,102,3.177,103,3.527,104,3.527,105,2.494,106,1.732,107,1.56,108,2.673,109,3.848,110,3.848,111,3.218,112,1.732,113,3.848,114,2.673,115,3.848,116,4.509,117,1.56,118,3.218,119,1.295,120,1.417,121,1.732,122,2.673,123,2.236,124,3.848,125,2.236,126,2.673,127,2.673,128,2.673,129,2.673,130,2.246,131,2.673,132,2.236,133,1.947,134,2.673,135,2.236,136,2.673,137,3.848,138,3.848,139,1.864]],["title/classes/AppPage.html",[23,0.145,140,2.315]],["body/classes/AppPage.html",[2,0.35,3,0.298,4,0.199,7,0.71,8,0.031,22,0.298,23,0.243,24,0.025,25,0.025,37,2.556,42,0.579,45,1.46,50,1.239,57,1.513,71,1.945,112,2.837,140,3.895,141,3.662,142,6.012,143,6.012,144,4.378,145,4.378,146,3.662,147,4.378,148,4.378,149,4.378]],["title/modules/AppRoutingModule.html",[0,0.8,101,1.855]],["body/modules/AppRoutingModule.html",[0,0.952,2,0.302,3,0.257,4,0.172,7,0.997,8,0.032,9,2.362,10,0.613,22,0.332,23,0.172,24,0.023,25,0.023,26,1.016,82,1.694,84,1.731,86,1.564,95,2.207,101,2.847,135,3.163,150,3.782,151,3.163,152,3.553,153,2.614,154,1.68,155,4.877,156,2.45,157,3.163,158,2.45,159,3.163,160,4.155,161,3.782,162,1.68,163,4.937,164,3.163,165,3.163,166,4.079,167,3.782,168,2.755,169,3.782,170,3.782,171,2.45,172,3.782]],["title/interfaces/AuthData.html",[173,1.019,174,2.059]],["body/interfaces/AuthData.html",[2,0.365,3,0.311,4,0.208,8,0.03,22,0.311,24,0.026,25,0.026,42,0.605,43,1.272,54,0.806,59,1.73,173,1.76,174,3.558,175,2.964,176,3.825,177,3.954,178,3.954]],["title/guards/AuthGuard.html",[160,2.315,179,2.315]],["body/guards/AuthGuard.html",[2,0.289,3,0.246,4,0.165,7,0.909,8,0.032,10,0.586,22,0.246,23,0.165,24,0.022,25,0.022,32,0.988,42,0.479,45,1.294,47,0.91,48,1.918,49,2.074,50,1.098,52,1.193,53,1.098,54,0.696,55,1.098,57,1.193,67,1.362,153,2.295,154,1.607,160,3.452,162,1.607,166,4.868,179,2.635,180,3.617,181,4.433,182,3.617,183,3.617,184,5.607,185,5.284,186,5.607,187,3.617,188,3.963,189,3.849,190,3.963,191,1.519,192,1.256,193,2.344,194,1.478,195,3.849,196,2.635,197,3.617]],["title/interceptors/AuthInterceptor.html",[103,2.059,130,1.855]],["body/interceptors/AuthInterceptor.html",[2,0.301,3,0.256,4,0.172,7,0.874,8,0.031,10,0.611,22,0.256,23,0.172,24,0.023,25,0.023,32,1.03,42,0.499,45,1.329,47,0.949,48,1.999,49,2.098,50,1.128,52,1.225,53,1.128,54,0.715,55,1.128,57,1.225,67,1.42,103,3.154,117,2.201,130,2.201,162,2.162,175,3.493,191,1.561,193,2.443,198,3.154,199,4.071,200,3.771,201,4.071,202,4.765,203,4.509,204,4.765,205,3.771,206,3.154,207,4.071,208,4.868,209,3.771,210,3.771,211,3.771,212,2.747,213,3.771,214,3.771,215,3.771]],["title/modules/AuthModule.html",[0,0.8,216,2.059]],["body/modules/AuthModule.html",[0,1.205,1,2.905,2,0.294,3,0.25,4,0.167,7,1.015,8,0.031,9,2.319,10,0.596,21,2.146,22,0.326,23,0.167,24,0.023,25,0.023,69,1.277,80,1.923,88,1.923,92,1.949,93,3.451,94,2.383,95,2.146,105,3.103,106,2.383,107,2.146,118,4.005,119,1.781,132,3.075,133,2.679,168,2.679,216,4.149,217,3.075,218,3.075,219,3.075,220,3.501,221,3.677,222,4.005,223,2.679,224,3.075,225,3.075]],["title/modules/AuthRoutingModule.html",[0,0.8,220,1.855]],["body/modules/AuthRoutingModule.html",[0,1.057,2,0.335,3,0.285,4,0.191,7,0.988,8,0.032,9,2.524,10,0.681,22,0.354,23,0.191,24,0.025,25,0.025,26,0.928,80,1.671,88,1.671,89,1.716,151,3.512,152,3.796,153,2.744,154,1.865,162,1.865,163,4.358,175,2.721,220,3.042,224,3.512,225,3.512,226,2.721,227,4.199]],["title/injectables/AuthService.html",[49,1.104,191,1.019]],["body/injectables/AuthService.html",[2,0.126,3,0.107,4,0.072,7,0.715,8,0.032,10,0.256,22,0.107,23,0.072,24,0.012,25,0.012,37,0.923,42,0.209,43,0.595,45,0.702,47,0.398,49,0.893,50,1.342,52,1.036,53,0.953,54,0.711,55,0.953,57,1.47,58,1.75,59,1.661,60,0.824,61,0.824,64,0.432,67,0.595,89,0.646,117,0.923,120,0.838,121,1.025,139,1.245,154,0.702,162,2.462,168,1.873,174,2.857,177,2.857,178,3.335,181,3.385,188,1.322,191,1.041,192,0.549,194,2.506,226,2.104,228,1.152,229,3.741,230,2.725,231,5.543,232,3.741,233,4.491,234,3.741,235,3.741,236,2.57,237,3.741,238,2.424,239,3.741,240,3.741,241,3.741,242,3.128,243,2.57,244,2.57,245,1.322,246,3.128,247,2.57,248,2.15,249,1.581,250,1.581,251,2.57,252,1.581,253,1.581,254,5.007,255,1.581,256,1.581,257,1.581,258,1.581,259,2.57,260,1.581,261,1.581,262,2.57,263,4.41,264,1.581,265,2.57,266,1.573,267,1.581,268,3.248,269,1.959,270,2.716,271,1.573,272,1.581,273,1.581,274,1.581,275,1.581,276,1.581,277,1.666,278,1.152,279,1.322,280,1.152,281,3.741,282,3.741,283,3.442,284,1.581,285,1.581,286,1.581,287,2.716,288,1.666,289,3.248,290,1.322,291,1.581,292,2.57,293,1.581,294,2.57,295,1.581,296,1.581,297,1.581,298,2.57,299,2.57,300,2.57,301,3.248,302,1.581,303,1.581,304,2.57,305,1.581,306,2.57,307,1.581,308,1.025,309,1.581,310,1.322,311,1.581,312,1.581,313,1.581,314,1.581,315,1.581,316,1.581,317,1.581,318,2.57,319,1.873,320,1.581,321,1.581,322,1.581,323,1.581,324,1.581,325,1.581,326,1.581,327,1.581,328,1.581,329,1.581,330,1.581,331,1.581,332,1.581,333,1.581,334,1.581,335,1.581,336,1.581]],["title/components/ErrorComponent.html",[26,0.566,76,1.019]],["body/components/ErrorComponent.html",[2,0.248,3,0.211,4,0.141,7,0.694,8,0.031,10,0.504,19,1.815,22,0.211,23,0.141,24,0.02,25,0.02,26,0.985,27,1.08,28,1.506,29,1.506,30,1.506,32,1.169,33,2.371,34,1.506,35,2.967,36,2.503,38,2.073,40,2.073,42,0.411,43,0.992,45,1.169,46,2.554,47,0.783,50,1.134,52,0.783,53,1.134,54,0.839,55,0.721,57,0.783,58,1.171,59,0.849,64,1.169,69,1.08,70,2.073,71,1.902,72,2.073,73,2.554,74,1.506,75,1.506,76,1.691,77,1.506,78,1.08,79,1.506,80,0.997,81,1.506,82,1.08,83,1.506,84,0.997,85,1.506,86,0.997,87,1.506,88,0.997,89,1.271,90,1.506,191,1.373,288,3.417,337,2.601,338,4.281,339,4.281,340,2.371,341,4.029,342,3.11,343,5.274,344,3.11,345,3.11,346,3.11,347,3.11,348,3.11,349,3.11,350,2.601,351,3.58,352,4.281,353,4.281]],["title/interceptors/ErrorInterceptor.html",[104,2.059,130,1.855]],["body/interceptors/ErrorInterceptor.html",[2,0.279,3,0.238,4,0.159,7,0.959,8,0.032,10,0.566,19,2.039,22,0.238,23,0.159,24,0.022,25,0.022,32,0.954,42,0.462,45,1.265,47,0.879,50,1.073,52,1.166,53,1.073,54,0.68,55,1.073,57,1.307,67,1.315,76,1.12,104,3.001,117,2.039,130,2.039,191,1.485,192,1.214,198,2.922,199,3.873,201,3.873,202,4.626,203,4.344,204,4.626,206,2.922,207,3.873,288,2.264,341,2.545,350,2.922,351,2.922,354,5.195,355,3.494,356,5.531,357,3.494,358,4.631,359,3.494,360,4.631,361,3.494,362,2.922,363,3.494,364,3.494,365,3.494,366,3.494,367,5.195,368,4.631,369,3.494,370,3.494]],["title/classes/FeatureCollection.html",[23,0.145,371,1.685]],["body/classes/FeatureCollection.html",[2,0.296,3,0.252,4,0.169,8,0.031,22,0.385,23,0.243,24,0.023,25,0.023,32,1.013,42,0.49,43,1.311,47,0.933,50,1.239,52,0.933,53,0.859,54,0.936,55,0.859,59,1.546,60,1.189,61,1.189,173,1.544,266,1.796,340,2.59,371,3.001,372,2.164,373,3.896,374,3.708,375,3.801,376,4.815,377,3.708,378,2.835,379,3.121,380,2.553,381,3.12,382,1.796,383,2.403,384,2.403,385,2.403,386,1.966]],["title/classes/GeoJson.html",[23,0.145,382,1.539]],["body/classes/GeoJson.html",[2,0.287,3,0.245,4,0.164,8,0.031,22,0.38,23,0.24,24,0.022,25,0.022,32,1.289,42,0.476,43,1.445,47,0.906,50,1.296,52,0.906,53,0.833,54,0.924,55,1.221,59,1.528,60,1.154,61,1.154,173,1.514,266,1.742,340,2.552,371,2.503,372,2.1,373,3.415,375,2.331,378,3.08,379,3.266,380,2.794,381,3.765,382,2.287,383,3.059,384,2.331,385,2.331,386,1.907,387,4.721,388,3.009,389,3.598,390,3.598]],["title/components/HeaderComponent.html",[26,0.566,78,1.104]],["body/components/HeaderComponent.html",[2,0.221,3,0.188,4,0.126,7,0.745,8,0.031,10,0.449,22,0.188,23,0.126,24,0.019,25,0.019,26,0.944,27,0.961,28,1.34,29,1.34,30,1.34,32,1.077,33,2.226,34,1.34,35,2.896,36,2.443,38,1.911,40,1.911,42,0.366,43,0.914,45,1.077,46,2.427,47,0.697,48,1.467,49,1.913,50,1.276,52,0.697,53,1.065,54,0.579,55,0.641,57,1.157,58,1.731,60,0.887,61,0.887,64,1.504,66,1.793,67,1.042,69,0.961,70,1.911,71,1.752,72,1.911,73,2.427,74,1.34,75,1.34,76,0.887,77,1.34,78,1.741,79,1.34,80,0.887,81,1.34,82,0.961,83,1.34,84,0.887,85,1.34,86,0.887,87,1.34,88,0.887,89,1.878,90,1.34,171,2.556,192,0.961,194,1.878,195,3.651,196,2.016,212,2.874,226,2.556,230,2.016,242,3.299,269,1.752,271,1.911,391,2.315,392,2.683,393,3.945,394,3.945,395,5.011,396,2.925,397,5.011,398,3.945,399,2.768,400,2.768,401,2.768,402,2.925,403,2.768,404,3.299,405,2.768,406,2.315,407,2.315,408,2.768,409,2.768]],["title/interfaces/IGeoJson.html",[173,1.019,380,1.685]],["body/interfaces/IGeoJson.html",[2,0.309,3,0.263,4,0.176,8,0.031,22,0.391,23,0.225,24,0.023,25,0.023,32,1.057,42,0.512,43,1.432,54,0.942,55,1.147,59,1.571,173,1.75,266,1.874,340,1.874,371,2.624,372,2.259,373,3.207,375,2.507,378,3.152,379,3.185,380,2.893,381,3.852,382,1.874,383,2.507,384,2.507,385,2.507,386,2.051]],["title/interfaces/IGeometry.html",[173,1.019,378,1.685]],["body/interfaces/IGeometry.html",[2,0.315,3,0.269,4,0.18,8,0.031,22,0.394,23,0.228,24,0.024,25,0.024,32,1.079,42,0.523,43,1.343,54,0.939,59,1.583,173,1.767,266,2.669,340,1.913,371,2.659,372,2.305,373,3.25,375,2.559,378,3.073,379,3.568,380,2.659,381,3.25,382,1.913,383,2.559,384,2.559,385,2.559,386,2.094]],["title/components/LoginComponent.html",[26,0.566,80,1.019]],["body/components/LoginComponent.html",[2,0.211,3,0.18,4,0.12,7,0.795,8,0.031,10,0.428,22,0.18,23,0.12,24,0.018,25,0.018,26,0.927,27,0.917,28,1.279,29,1.279,30,1.279,32,1.042,33,2.169,34,1.279,35,2.867,36,2.418,38,1.848,40,1.848,42,0.349,43,0.884,45,1.042,46,2.375,47,0.665,48,1.4,49,1.883,50,1.256,52,0.96,53,1.136,54,0.658,55,0.884,57,1.235,58,1.686,60,0.847,61,0.847,64,1.042,67,0.994,69,0.917,70,1.848,71,1.695,72,1.848,73,2.375,74,1.279,75,1.279,76,0.847,77,1.279,78,0.917,79,1.279,80,1.573,81,1.279,82,0.917,83,1.279,84,0.847,85,1.279,86,0.847,87,1.279,88,0.847,89,1.079,90,1.279,119,1.279,139,1.279,177,2.472,178,2.472,192,0.917,193,1.712,194,1.83,226,3.178,238,1.712,271,2.169,392,2.614,396,2.863,402,2.863,410,2.209,411,3.815,412,3.815,413,3.178,414,3.178,415,3.815,416,3.815,417,2.641,418,2.641,419,3.815,420,4.102,421,2.641,422,1.712,423,2.641,424,1.712,425,1.924,426,1.924,427,2.472,428,2.209,429,2.641,430,2.209,431,1.712,432,3.573,433,3.573,434,3.178]],["title/injectables/MapService.html",[191,1.019,435,2.315]],["body/injectables/MapService.html",[2,0.195,3,0.166,4,0.111,7,0.884,8,0.032,10,0.395,22,0.166,23,0.111,24,0.017,25,0.017,37,1.423,42,0.323,43,0.834,45,0.983,47,0.614,50,1.396,52,1.268,53,1.167,54,0.822,55,1.167,57,1.516,58,0.918,59,1.489,60,1.154,61,1.154,67,0.918,120,1.293,121,1.58,125,2.039,171,1.58,189,3.44,191,1.371,192,0.847,194,2.334,269,1.083,280,1.776,288,1.58,341,1.776,379,1.423,382,2.287,435,2.622,436,2.039,437,5.271,438,4.722,439,5.271,440,4.722,441,5.271,442,3.599,443,4.722,444,4.722,445,4.722,446,3.599,447,3.599,448,3.599,449,2.438,450,4.722,451,3.599,452,3.599,453,3.599,454,2.438,455,2.438,456,2.438,457,2.438,458,3.599,459,2.438,460,3.599,461,2.438,462,3.599,463,2.438,464,5.452,465,2.438,466,2.438,467,2.438,468,2.438,469,2.438,470,1.776,471,2.039,472,2.438,473,2.438,474,2.438,475,2.438,476,2.438,477,4.277,478,2.438,479,3.599,480,2.438,481,2.438,482,2.438,483,2.438,484,3.599,485,2.438,486,2.438,487,2.438,488,2.438,489,2.438,490,2.438]],["title/interfaces/Post.html",[64,0.868,173,1.019]],["body/interfaces/Post.html",[2,0.335,3,0.285,4,0.191,8,0.03,22,0.285,24,0.025,25,0.025,42,0.555,43,1.207,44,3.839,54,0.895,59,1.799,64,1.423,173,1.671,491,3.512,492,4.317,493,4.317,494,4.317,495,4.317]],["title/components/PostCreateComponent.html",[26,0.566,84,1.019]],["body/components/PostCreateComponent.html",[2,0.132,3,0.112,4,0.152,7,0.824,8,0.032,9,0.801,10,0.432,22,0.112,23,0.075,24,0.013,25,0.013,26,0.75,27,0.574,28,0.801,29,0.801,30,0.801,32,0.728,33,1.622,34,0.801,35,2.528,36,2.133,38,1.291,40,1.291,42,0.219,43,0.618,44,2.729,45,0.728,46,1.86,47,0.416,49,1.644,50,1.298,52,0.671,53,0.89,54,0.747,55,0.618,57,1.06,58,1.446,59,1.15,60,0.855,61,0.855,64,1.64,66,1.072,69,0.574,70,1.291,71,1.184,72,1.291,73,1.86,74,0.801,75,0.801,76,0.53,77,0.801,78,0.574,79,0.801,80,0.53,81,0.801,82,0.574,83,0.801,84,1.231,85,0.801,86,0.53,87,0.801,88,0.53,89,0.676,90,0.801,119,0.801,139,1.291,153,2.18,154,0.735,158,3.677,162,1.184,165,3.765,192,0.574,194,2.133,238,1.072,269,1.871,271,1.86,319,1.205,340,2.04,386,0.877,392,1.954,396,2.242,402,2.242,413,2.488,414,2.488,422,2.488,424,1.072,425,1.205,426,1.205,427,2.488,431,1.072,432,2.798,433,2.798,434,2.488,492,3.068,493,1.205,494,1.205,495,1.205,496,3.677,497,1.383,498,2.666,499,2.666,500,3.84,501,3.84,502,2.798,503,3.115,504,2.666,505,3.84,506,1.383,507,4.502,508,2.666,509,1.654,510,1.654,511,2.666,512,3.84,513,1.654,514,1.654,515,1.654,516,4.212,517,1.654,518,1.654,519,1.654,520,1.654,521,1.654,522,2.666,523,1.654,524,2.666,525,1.205,526,1.383,527,1.942,528,1.654,529,1.654,530,1.654,531,3.348,532,3.348,533,1.654,534,3.212,535,1.654,536,1.654,537,1.654,538,3.348,539,1.383,540,3.348,541,1.654,542,1.654,543,1.205,544,1.654,545,1.654,546,1.654,547,1.654,548,1.654,549,1.654,550,1.654,551,1.654,552,1.654,553,1.654,554,1.654,555,1.654,556,1.654,557,1.654,558,1.383,559,1.654,560,1.654,561,1.654,562,1.654,563,1.654,564,1.654,565,2.666,566,2.666,567,2.666,568,1.654,569,1.654,570,2.666,571,2.666]],["title/components/PostListComponent.html",[26,0.566,86,1.019]],["body/components/PostListComponent.html",[2,0.136,3,0.116,4,0.077,7,0.739,8,0.032,10,0.276,19,0.992,22,0.116,23,0.077,24,0.013,25,0.013,26,0.761,27,0.591,28,0.823,29,0.823,30,0.823,32,0.744,33,1.652,34,0.823,35,2.55,36,2.152,38,1.32,40,1.32,42,0.225,43,0.631,45,0.744,46,1.89,47,0.428,49,1.663,50,1.337,52,0.859,53,0.989,54,0.805,55,0.79,57,0.982,58,1.469,59,1.245,60,1.535,61,1.535,64,1.628,66,1.102,69,0.591,70,1.32,71,1.211,72,1.32,73,1.89,74,0.823,75,0.823,76,0.545,77,0.823,78,0.591,79,0.823,80,0.545,81,0.823,82,0.591,83,0.823,84,0.545,85,0.823,86,1.251,87,0.823,88,0.545,89,0.695,90,0.823,139,1.652,156,3.775,164,2.28,192,0.591,194,1.956,195,2.843,196,1.239,230,1.239,233,3.264,238,1.102,266,2.319,271,2.207,283,2.28,308,2.954,340,1.32,386,0.901,388,2.28,392,1.991,396,2.278,402,2.795,404,2.28,407,1.422,413,2.529,414,2.954,424,1.102,425,1.239,427,2.768,431,1.102,496,3.775,502,1.239,503,3.14,506,1.422,525,1.239,526,1.422,539,2.28,543,1.239,572,1.422,573,2.726,574,2.726,575,3.264,576,3.902,577,3.264,578,3.902,579,3.902,580,2.726,581,2.726,582,2.726,583,1.7,584,1.7,585,2.726,586,3.902,587,1.7,588,1.7,589,2.726,590,1.7,591,3.572,592,1.7,593,1.7,594,2.726,595,3.902,596,2.726,597,1.7,598,1.7,599,1.7,600,1.7,601,1.7,602,1.7,603,1.7,604,1.7,605,3.411,606,3.902,607,1.7,608,1.7,609,1.422,610,1.7,611,1.422,612,1.7,613,1.7,614,1.7,615,2.726,616,1.7,617,1.7,618,1.7,619,1.7,620,1.7,621,2.28,622,2.28,623,2.726]],["title/modules/PostsModule.html",[0,0.8,102,1.855]],["body/modules/PostsModule.html",[0,1.199,1,2.899,2,0.291,3,0.248,4,0.166,7,1.014,8,0.032,9,2.307,10,0.591,21,2.129,22,0.324,23,0.166,24,0.023,25,0.023,64,1.301,69,1.267,84,1.919,86,1.919,92,1.933,93,3.438,94,2.363,95,2.129,102,3.683,105,3.087,106,2.363,107,2.129,119,1.766,133,2.657,152,3.47,154,1.62,156,2.363,157,3.05,158,2.363,159,3.05,222,3.984,223,2.657,422,2.363,624,3.05,625,3.05,626,3.647,627,3.647,628,4.764,629,3.647]],["title/injectables/PostsService.html",[191,1.019,503,1.855]],["body/injectables/PostsService.html",[2,0.161,3,0.137,4,0.232,7,0.828,8,0.032,10,0.326,22,0.137,23,0.091,24,0.015,25,0.015,37,1.174,42,0.266,43,0.721,44,3.648,45,0.849,47,0.506,50,1.254,52,1.232,53,1.134,54,0.75,55,1.134,57,1.417,58,1.432,59,1.704,60,0.997,61,0.997,64,1.581,67,0.757,117,1.174,120,1.066,121,1.303,154,0.893,162,1.69,171,1.303,181,3.719,191,1.22,192,0.699,194,2.086,245,1.682,246,3.581,248,2.602,266,2.371,269,1.902,270,3.182,277,2.465,278,1.465,280,1.465,287,2.602,290,3.182,310,1.682,319,1.465,362,1.682,492,4.102,493,2.266,494,3.842,495,2.266,502,2.266,503,1.816,525,1.465,534,4.626,543,2.266,575,3.182,577,1.682,609,3.581,611,1.682,621,1.682,622,1.682,630,1.465,631,4.282,632,3.111,633,3.111,634,4.282,635,3.111,636,3.111,637,3.111,638,2.011,639,3.111,640,2.011,641,3.111,642,2.011,643,3.111,644,2.011,645,2.011,646,3.111,647,2.011,648,2.011,649,3.111,650,2.011,651,2.011,652,2.011,653,2.011,654,2.011,655,2.011,656,2.011,657,2.011,658,2.011,659,2.011,660,2.011,661,2.011,662,2.011,663,2.011,664,4.896,665,3.805,666,3.111,667,3.111,668,3.111,669,2.011,670,2.011,671,1.682,672,2.011,673,2.011,674,2.011,675,2.011]],["title/components/SignupComponent.html",[26,0.566,88,1.019]],["body/components/SignupComponent.html",[2,0.211,3,0.179,4,0.12,7,0.794,8,0.031,10,0.427,22,0.179,23,0.12,24,0.018,25,0.018,26,0.926,27,0.916,28,1.277,29,1.277,30,1.277,32,1.04,33,2.166,34,1.277,35,2.865,36,2.417,38,1.845,40,1.845,42,0.349,43,0.883,45,1.04,46,2.373,47,0.664,48,1.398,49,1.882,50,1.255,52,0.959,53,1.135,54,0.657,55,0.883,57,1.233,58,1.684,60,0.845,61,0.845,64,1.04,67,0.992,69,0.916,70,1.845,71,1.692,72,1.845,73,2.373,74,1.277,75,1.277,76,0.845,77,1.277,78,0.916,79,1.277,80,0.845,81,1.277,82,0.916,83,1.277,84,0.845,85,1.277,86,0.845,87,1.277,88,1.571,89,1.828,90,1.277,119,1.277,139,1.277,177,2.469,178,2.469,192,0.916,193,1.708,194,1.828,271,2.166,392,2.611,396,2.86,402,2.86,406,2.205,413,3.175,414,3.175,420,4.098,422,1.708,424,1.708,426,1.92,427,2.469,428,2.205,430,2.205,431,1.708,432,3.57,433,3.57,434,3.175,676,2.205,677,3.81,678,3.81,679,3.81,680,3.81,681,2.636,682,2.636,683,3.81,684,2.636,685,2.636,686,2.636,687,3.81,688,3.81]],["title/coverage.html",[689,3.633]],["body/coverage.html",[4,0.145,8,0.031,23,0.225,24,0.021,25,0.021,26,1.069,27,1.106,31,2.663,49,1.106,54,0.468,64,0.87,76,1.021,78,1.106,80,1.021,82,1.106,84,1.021,86,1.021,88,1.021,120,1.688,140,2.32,141,2.663,156,2.064,158,2.064,173,1.708,174,2.064,175,2.064,176,2.663,191,1.589,228,3.17,269,1.415,277,2.819,308,4.245,337,2.663,371,1.688,372,3.109,378,1.688,380,1.688,382,1.542,391,2.663,410,2.663,435,2.32,436,2.663,491,2.663,496,3.212,497,2.663,503,1.859,527,2.32,572,2.663,630,3.17,676,2.663,689,2.663,690,3.185,691,3.185,692,3.185,693,4.956,694,5.327,695,3.185,696,4.194,697,5.757,698,4.956,699,3.185,700,3.185,701,3.185,702,3.185,703,2.663,704,2.663,705,3.185,706,3.185,707,3.185,708,3.185,709,2.663,710,3.639,711,2.663,712,2.663,713,3.185,714,3.185]],["title/dependencies.html",[92,2.027,715,2.65]],["body/dependencies.html",[8,0.032,10,0.599,19,2.158,24,0.023,25,0.023,92,1.96,111,4.02,112,3.115,119,1.791,123,3.092,154,1.642,192,1.284,223,2.694,434,2.396,470,3.502,471,4.02,716,3.698,717,6.269,718,3.698,719,3.698,720,3.698,721,3.698,722,3.698,723,3.698,724,3.698,725,3.698,726,3.698,727,3.698,728,3.698,729,3.698,730,3.698,731,3.698,732,3.698,733,3.698,734,3.698,735,3.698,736,3.698,737,3.698,738,3.698,739,3.698,740,4.807,741,3.698,742,3.698,743,3.092,744,3.698,745,3.698,746,3.698,747,3.698,748,3.698,749,3.698,750,3.698,751,4.807,752,3.698,753,3.698,754,3.698,755,3.698,756,3.698,757,3.698,758,3.698,759,3.698,760,3.698]],["title/index.html",[42,0.351,761,2.65,762,2.65]],["body/index.html",[3,0.259,4,0.173,8,0.023,20,3.181,21,3.159,24,0.023,25,0.023,26,0.964,36,1.554,53,0.881,107,2.22,146,3.181,269,1.689,763,3.803,764,4.895,765,5.715,766,5.413,767,3.803,768,3.803,769,3.803,770,4.895,771,6.158,772,6.158,773,3.803,774,3.803,775,3.803,776,3.803,777,3.803,778,3.803,779,3.803,780,3.803,781,5.413,782,3.803,783,5.914,784,3.803,785,3.803,786,3.803,787,3.803,788,3.803,789,3.803,790,3.181,791,4.895,792,5.914,793,4.895,794,4.895,795,3.803,796,5.715,797,3.803,798,3.803,799,5.413,800,3.803,801,3.803,802,3.803,803,3.803]],["title/modules.html",[0,1.093]],["body/modules.html",[0,1.171,1,2.254,8,0.026,24,0.026,25,0.026,91,3.016,101,2.716,102,2.716,112,3.841,216,3.016,220,2.716,804,5.927,805,5.927,806,6.362,807,5.927,808,5.927]],["title/overview.html",[809,3.633]],["body/overview.html",[0,1.136,1,2.752,8,0.031,22,0.229,23,0.153,24,0.021,25,0.021,26,0.599,27,2.076,69,1.168,76,1.634,78,1.77,80,1.634,82,1.77,84,1.634,86,1.634,88,1.634,91,4.239,92,1.782,93,2.178,94,2.178,95,1.962,96,2.811,97,2.811,98,2.811,99,2.811,100,2.811,101,2.974,102,3.592,103,3.302,104,3.302,105,2.925,106,2.178,107,1.962,153,1.628,173,1.078,179,2.449,191,1.078,216,4.029,217,2.811,218,2.811,219,2.811,220,2.974,591,2.811,624,2.811,625,2.811,809,2.811,810,3.362,811,3.362,812,4.513,813,2.811,814,3.362]],["title/routes.html",[153,2.104]],["body/routes.html",[8,0.028,24,0.028,25,0.028,153,2.489]],["title/miscellaneous/variables.html",[696,2.786,815,2.216]],["body/miscellaneous/variables.html",[4,0.201,8,0.032,24,0.021,25,0.021,42,0.43,54,0.647,57,0.817,59,0.887,60,1.8,61,1.8,64,0.887,120,2.654,139,1.572,162,2.385,189,3.647,190,2.715,212,2.365,228,2.365,269,1.958,271,2.135,277,3.752,278,3.212,279,2.715,308,2.104,470,2.365,496,2.104,527,3.647,558,3.687,630,2.365,671,3.687,696,2.365,703,2.715,704,3.687,709,2.715,710,2.715,711,4.187,712,4.187,743,2.715,790,2.715,813,2.715,815,2.715,816,3.247,817,3.247,818,4.409,819,3.247,820,3.247,821,3.247,822,3.247,823,3.247,824,3.247,825,3.247,826,3.247,827,3.247,828,5.006,829,3.247,830,3.247,831,3.247,832,3.247,833,3.247,834,3.247,835,3.247,836,3.247,837,3.247,838,3.247,839,3.247,840,3.247,841,3.247,842,3.247,843,3.247,844,3.247,845,3.247,846,4.409,847,3.247,848,3.247,849,3.247,850,3.247,851,3.247,852,3.247,853,3.247,854,3.247]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.16.3",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["0.48.0",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0.49.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":591,"title":{},"body":{"components/PostListComponent.html":{},"overview.html":{}}}],["1.18.3",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["1.18.4",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["1.8.9",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":596,"title":{},"body":{"components/PostListComponent.html":{}}}],["1000",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":594,"title":{},"body":{"components/PostListComponent.html":{}}}],["2.0.1",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":812,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":813,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.16.3",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":595,"title":{},"body":{"components/PostListComponent.html":{}}}],["5.0.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["5.2.13",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["532004071803",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":810,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":768,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":811,"title":{},"body":{"overview.html":{}}}],["8.3.0",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":814,"title":{},"body":{"overview.html":{}}}],["9dd8c",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.appspot.com",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.firebaseapp.com",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.firebaseio.com",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken\").set",{"_index":475,"title":{},"body":{"injectables/MapService.html":{}}}],["activatedrout",{"_index":507,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["activatedroutesnapshot",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["addpost",{"_index":632,"title":{},"body":{"injectables/PostsService.html":{}}}],["addpost(titl",{"_index":637,"title":{},"body":{"injectables/PostsService.html":{}}}],["aizasya5vblvbtd_gtl9iwgjc1vdgdzf24k9x5c",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasyayglwmxlh_hsdxg0irotkfkyrblx8ayiq",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":21,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"index.html":{}}}],["angular/anim",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["angular/compil",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":10,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/fir",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":19,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/PostListComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/databas",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{}}}],["angularfiredatabas",{"_index":450,"title":{},"body":{"injectables/MapService.html":{}}}],["angularfiredatabasemodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirelist",{"_index":464,"title":{},"body":{"injectables/MapService.html":{}}}],["angularfiremodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["angularmaterialmodul",{"_index":1,"title":{"modules/AngularMaterialModule.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["anim",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["apikey",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["app.compon",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":27,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":140,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":101,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":375,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["artifact",{"_index":784,"title":{},"body":{"index.html":{}}}],["asyncvalid",{"_index":535,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["auth",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.servic",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["auth/auth",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.guard",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.module#authmodul",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.servic",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["authdata",{"_index":174,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdata).subscrib",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":160,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authinform",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettim",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.userid",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":103,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authlistenersub",{"_index":395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authmodul",{"_index":216,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authrequest",{"_index":210,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodul",{"_index":220,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":49,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authstatuslisten",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussub",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["authtoken",{"_index":208,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["autoauthus",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["automat",{"_index":20,"title":{},"body":{"modules/AngularMaterialModule.html":{},"index.html":{}}}],["avail",{"_index":805,"title":{},"body":{"modules.html":{}}}],["backend_url",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":214,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["beta.1",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["bodi",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["brows",{"_index":806,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":147,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":783,"title":{},"body":{"index.html":{}}}],["c.key",{"_index":483,"title":{},"body":{"injectables/MapService.html":{}}}],["canactiv",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(rout",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":361,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":366,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cg",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":778,"title":{},"body":{"index.html":{}}}],["changes.map(c",{"_index":482,"title":{},"body":{"injectables/MapService.html":{}}}],["check",{"_index":802,"title":{},"body":{"index.html":{}}}],["check').subscribe(respons",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":23,"title":{"classes/AppPage.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{}},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clearauthdata",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentim",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":766,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodul",{"_index":624,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_declar",{"_index":625,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_import",{"_index":626,"title":{},"body":{"modules/PostsModule.html":{}}}],["code",{"_index":779,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["compon",{"_index":26,"title":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('reauthent",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('set",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":490,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log(expirationd",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":349,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(authservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(coordin",{"_index":383,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["constructor(data",{"_index":342,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(db",{"_index":449,"title":{},"body":{"injectables/MapService.html":{}}}],["constructor(dialog",{"_index":355,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(featur",{"_index":374,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["constructor(http",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["constructor(postsservic",{"_index":506,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["constructor(priv",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["constructor(publ",{"_index":386,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["content",{"_index":492,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["context",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.valu",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coordin",{"_index":379,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{}}}],["cord",{"_index":437,"title":{},"body":{"injectables/MapService.html":{}}}],["cordspath",{"_index":438,"title":{},"body":{"injectables/MapService.html":{}}}],["core",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["cours",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["coverag",{"_index":689,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostCreateComponent.html":{}}}],["create'},{'nam",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["create.compon",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PostsModule.html":{}}}],["create.component.css",{"_index":498,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.html",{"_index":499,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.t",{"_index":497,"title":{},"body":{"components/PostCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:19",{"_index":519,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:20",{"_index":521,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:21",{"_index":515,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:22",{"_index":520,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:23",{"_index":517,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:24",{"_index":518,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:25",{"_index":508,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:27",{"_index":522,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:29",{"_index":510,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:66",{"_index":513,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:77",{"_index":514,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:98",{"_index":509,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create/mim",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/post",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["createmark",{"_index":442,"title":{},"body":{"injectables/MapService.html":{}}}],["createmarker(data",{"_index":453,"title":{},"body":{"injectables/MapService.html":{}}}],["createus",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(email",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":493,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["currentpag",{"_index":575,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["data",{"_index":341,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{}}}],["data.messag",{"_index":352,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data.model",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.model.t",{"_index":176,"title":{},"body":{"interfaces/AuthData.html":{},"coverage.html":{}}}],["databaseurl",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationd",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":452,"title":{},"body":{"injectables/MapService.html":{}}}],["db.list(this.cordspath",{"_index":485,"title":{},"body":{"injectables/MapService.html":{}}}],["db.list(this.markerpath",{"_index":478,"title":{},"body":{"injectables/MapService.html":{}}}],["declar",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["decor",{"_index":346,"title":{},"body":{"components/ErrorComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["delet",{"_index":623,"title":{},"body":{"components/PostListComponent.html":{}}}],["deletepost",{"_index":633,"title":{},"body":{"injectables/PostsService.html":{}}}],["deletepost(postid",{"_index":639,"title":{},"body":{"injectables/PostsService.html":{}}}],["depend",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":774,"title":{},"body":{"index.html":{}}}],["develop",{"_index":769,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":358,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["diplomarbeit",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":782,"title":{},"body":{"index.html":{}}}],["directori",{"_index":787,"title":{},"body":{"index.html":{}}}],["dist",{"_index":786,"title":{},"body":{"index.html":{}}}],["document",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["dotenv",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["durat",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynam",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":797,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":141,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":145,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":144,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":539,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["edit/:postid",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["element(by.css('app",{"_index":148,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":177,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["end",{"_index":796,"title":{},"body":{"index.html":{}}}],["enter",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["entrycompon",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["environment.mapbox.accesstoken",{"_index":476,"title":{},"body":{"injectables/MapService.html":{}}}],["environments/environ",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["error",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{}}}],["error'},{'nam",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["error.compon",{"_index":364,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.component.css",{"_index":338,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":339,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error.messag",{"_index":368,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/error",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["error/error.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["errorcompon",{"_index":76,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorinterceptor",{"_index":104,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["errormessag",{"_index":367,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":512,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["event.target",{"_index":553,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["execut",{"_index":793,"title":{},"body":{"index.html":{}}}],["expirationd",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostr",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresindur",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":22,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["express",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":373,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["featurecollect",{"_index":371,"title":{"classes/FeatureCollection.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fileread",{"_index":558,"title":{},"body":{"components/PostCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["filereader.addeventlistener('loadend",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebas",{"_index":743,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":789,"title":{},"body":{"index.html":{}}}],["form",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{}}}],["form.invalid",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["form.value.password",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":523,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formcontrol(nul",{"_index":531,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formdata",{"_index":665,"title":{},"body":{"injectables/PostsService.html":{}}}],["formgroup",{"_index":516,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formsmodul",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["frob",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["further",{"_index":798,"title":{},"body":{"index.html":{}}}],["gener",{"_index":765,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":382,"title":{"classes/GeoJson.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["geojson(coordin",{"_index":489,"title":{},"body":{"injectables/MapService.html":{}}}],["geometri",{"_index":381,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["get",{"_index":761,"title":{"index.html":{}},"body":{}}],["getauthdata",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslisten",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["getcord",{"_index":443,"title":{},"body":{"injectables/MapService.html":{}}}],["getisauth",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["getkey",{"_index":444,"title":{},"body":{"injectables/MapService.html":{}}}],["getmark",{"_index":445,"title":{},"body":{"injectables/MapService.html":{}}}],["getparagraphtext",{"_index":142,"title":{},"body":{"classes/AppPage.html":{}}}],["getpost",{"_index":634,"title":{},"body":{"injectables/PostsService.html":{}}}],["getpost(id",{"_index":641,"title":{},"body":{"injectables/PostsService.html":{}}}],["getposts(postsperpag",{"_index":643,"title":{},"body":{"injectables/PostsService.html":{}}}],["getpostupdatelisten",{"_index":609,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["gettoken",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserid",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["gl",{"_index":471,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["go",{"_index":801,"title":{},"body":{"index.html":{}}}],["googlemapskey",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":804,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":179,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["handleerror",{"_index":446,"title":{},"body":{"injectables/MapService.html":{}}}],["handleerror(error",{"_index":458,"title":{},"body":{"injectables/MapService.html":{}}}],["header",{"_index":212,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'nam",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["header.component.css",{"_index":393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":394,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":78,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":799,"title":{},"body":{"index.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["htmlinputelement).files[0",{"_index":554,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["http",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["http://localhost:3000/api",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":776,"title":{},"body":{"index.html":{}}}],["http_interceptor",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["httpclientmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":360,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":204,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":207,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":202,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["https://diplomarbeit",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":494,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["identifi",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["igeojson",{"_index":380,"title":{"interfaces/IGeoJson.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["igeometri",{"_index":378,"title":{"interfaces/IGeometry.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["imag",{"_index":534,"title":{},"body":{"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["imagepath",{"_index":495,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["imagepreview",{"_index":500,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["implement",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["inject",{"_index":191,"title":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["intercept",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":130,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor.t",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:15",{"_index":357,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:19",{"_index":359,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:6",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.ts:9",{"_index":205,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":173,"title":{"interfaces/AuthData.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"interfaces/Post.html":{}},"body":{"interfaces/AuthData.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"interfaces/Post.html":{},"coverage.html":{},"overview.html":{}}}],["isauthent",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["isload",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["isvalid",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":795,"title":{},"body":{"index.html":{}}}],["key",{"_index":439,"title":{},"body":{"injectables/MapService.html":{}}}],["key).remov",{"_index":488,"title":{},"body":{"injectables/MapService.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["list",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostListComponent.html":{}}}],["list'},{'nam",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["list.compon",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PostsModule.html":{}}}],["list.component.css",{"_index":573,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.html",{"_index":574,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.t",{"_index":572,"title":{},"body":{"components/PostListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":598,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:16",{"_index":593,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:17",{"_index":602,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:18",{"_index":599,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:19",{"_index":592,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:20",{"_index":597,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:21",{"_index":604,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:22",{"_index":603,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:23",{"_index":601,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:24",{"_index":582,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:26",{"_index":600,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:28",{"_index":584,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:48",{"_index":587,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:55",{"_index":590,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:64",{"_index":583,"title":{},"body":{"components/PostListComponent.html":{}}}],["list/post",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["liter",{"_index":343,"title":{},"body":{"components/ErrorComponent.html":{}}}],["loadchildren",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem('expir",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('userid",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expir",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('userid",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expir",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('userid",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":226,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["login(email",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincompon",{"_index":80,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["map'},{'nam",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["map(postdata",{"_index":652,"title":{},"body":{"injectables/PostsService.html":{}}}],["map.modul",{"_index":472,"title":{},"body":{"injectables/MapService.html":{}}}],["mapbox",{"_index":470,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":469,"title":{},"body":{"injectables/MapService.html":{}}}],["mapcompon",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maps/map/map.compon",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mapservic",{"_index":435,"title":{"injectables/MapService.html":{}},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["marker",{"_index":441,"title":{},"body":{"injectables/MapService.html":{}}}],["markerpath",{"_index":440,"title":{},"body":{"injectables/MapService.html":{}}}],["mat_dialog_data",{"_index":348,"title":{},"body":{"components/ErrorComponent.html":{}}}],["matbuttonmodul",{"_index":13,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matcardmodul",{"_index":12,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["match",{"_index":25,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":356,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["matdialogmodul",{"_index":18,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["material.modul",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["material.module.t",{"_index":6,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matexpansionmodul",{"_index":15,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matinputmodul",{"_index":11,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matpaginatormodul",{"_index":17,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":16,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":14,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["maxpost",{"_index":657,"title":{},"body":{"injectables/PostsService.html":{}}}],["mean",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["meancours",{"_index":763,"title":{},"body":{"index.html":{}}}],["messag",{"_index":350,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["messagingsenderid",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["mime",{"_index":528,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["mimetyp",{"_index":527,"title":{},"body":{"components/PostCreateComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":815,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":501,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["modul",{"_index":0,"title":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{},"modules.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoos",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":800,"title":{},"body":{"index.html":{}}}],["multer",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["multi",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["navig",{"_index":775,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":143,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":203,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":215,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pip",{"_index":365,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":772,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":420,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ngmodul",{"_index":9,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{}}}],["ngondestroy",{"_index":396,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["nodemon",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["now.gettim",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["number",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["object",{"_index":671,"title":{},"body":{"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(mapboxgl",{"_index":474,"title":{},"body":{"injectables/MapService.html":{}}}],["observ",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["observable.cr",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["occur",{"_index":351,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["of(nul",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["okay",{"_index":353,"title":{},"body":{"components/ErrorComponent.html":{}}}],["onchangedpag",{"_index":580,"title":{},"body":{"components/PostListComponent.html":{}}}],["onchangedpage(pagedata",{"_index":585,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondelet",{"_index":581,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondelete(postid",{"_index":589,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondestroy",{"_index":392,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["onimagepick",{"_index":504,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["onimagepicked(ev",{"_index":511,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["onlogin",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogin(form",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsavepost",{"_index":505,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["onsignup",{"_index":679,"title":{},"body":{"components/SignupComponent.html":{}}}],["onsignup(form",{"_index":683,"title":{},"body":{"components/SignupComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":809,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":715,"title":{"dependencies.html":{}},"body":{}}],["pagedata",{"_index":588,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagedata.pageindex",{"_index":616,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagedata.pages",{"_index":618,"title":{},"body":{"components/PostListComponent.html":{}}}],["pageev",{"_index":586,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagesize=${postsperpage}&page=${currentpag",{"_index":650,"title":{},"body":{"injectables/PostsService.html":{}}}],["pagesizeopt",{"_index":576,"title":{},"body":{"components/PostListComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["parammap",{"_index":524,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parammap.get('postid",{"_index":541,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parammap.has('postid",{"_index":537,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parser",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":178,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pick",{"_index":570,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["pipe",{"_index":651,"title":{},"body":{"injectables/PostsService.html":{}}}],["pipe(map(chang",{"_index":481,"title":{},"body":{"injectables/MapService.html":{}}}],["pk.eyj1ijoidhdvzmfjzxjlbg9hzgvkiiwiysi6imnqbgpqznf5ddbjbwmzcg43yxnmztu4bg8ifq.pryi64e2nw3v3k7qnwz",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["point",{"_index":385,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["post",{"_index":64,"title":{"interfaces/Post.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post._id",{"_index":654,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.cont",{"_index":622,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["post.creat",{"_index":656,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.imagepath",{"_index":655,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.model",{"_index":525,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["post.servic",{"_index":526,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["post.titl",{"_index":621,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postcount",{"_index":611,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postcreatecompon",{"_index":84,"title":{"components/PostCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postdata",{"_index":664,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata._id",{"_index":544,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.append('cont",{"_index":667,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('id",{"_index":672,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('imag",{"_index":668,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('titl",{"_index":666,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.cont",{"_index":546,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.cr",{"_index":548,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.imagepath",{"_index":547,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.maxpost",{"_index":658,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.post",{"_index":614,"title":{},"body":{"components/PostListComponent.html":{}}}],["postdata.postcount",{"_index":613,"title":{},"body":{"components/PostListComponent.html":{}}}],["postdata.posts.map(post",{"_index":653,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.titl",{"_index":545,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postid",{"_index":502,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postlistcompon",{"_index":86,"title":{"components/PostListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["posts/post",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["posts/post.model",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["posts/posts.modul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["postsmodul",{"_index":102,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsperpag",{"_index":577,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postsservic",{"_index":503,"title":{"injectables/PostsService.html":{}},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["postssub",{"_index":578,"title":{},"body":{"components/PostListComponent.html":{}}}],["postsupd",{"_index":631,"title":{},"body":{"injectables/PostsService.html":{}}}],["privat",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["prod",{"_index":788,"title":{},"body":{"index.html":{}}}],["product",{"_index":790,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":764,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["properti",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["protractor",{"_index":146,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["providedin",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["public",{"_index":340,"title":{},"body":{"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["put(backend_url",{"_index":673,"title":{},"body":{"injectables/PostsService.html":{}}}],["queryparam",{"_index":649,"title":{},"body":{"injectables/PostsService.html":{}}}],["re",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiv",{"_index":629,"title":{},"body":{"modules/PostsModule.html":{}}}],["reactiveformsmodul",{"_index":628,"title":{},"body":{"modules/PostsModule.html":{}}}],["reader",{"_index":557,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.onload",{"_index":559,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.readasdataurl(fil",{"_index":562,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.result",{"_index":561,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["readm",{"_index":803,"title":{},"body":{"index.html":{}}}],["reload",{"_index":777,"title":{},"body":{"index.html":{}}}],["removemark",{"_index":447,"title":{},"body":{"injectables/MapService.html":{}}}],["removemarker(key",{"_index":460,"title":{},"body":{"injectables/MapService.html":{}}}],["req",{"_index":206,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clon",{"_index":211,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":213,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.messag",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["respons",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.expiresin",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.userid",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":24,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["root'},{'nam",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["rout",{"_index":153,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/PostCreateComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["routermodul",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{}}}],["routermodule.forchild(rout",{"_index":227,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module.t",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["run",{"_index":771,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/map",{"_index":473,"title":{},"body":{"injectables/MapService.html":{}}}],["rxjs/oper",{"_index":362,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["save",{"_index":571,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["saveauthdata",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffold",{"_index":780,"title":{},"body":{"index.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["serv",{"_index":773,"title":{},"body":{"index.html":{}}}],["server",{"_index":770,"title":{},"body":{"index.html":{}}}],["setauthtim",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(dur",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmarkergeojson",{"_index":448,"title":{},"body":{"injectables/MapService.html":{}}}],["setmarkergeojson(coordin",{"_index":462,"title":{},"body":{"injectables/MapService.html":{}}}],["settimeout",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["sign",{"_index":687,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":677,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":678,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcompon",{"_index":88,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snapshotchang",{"_index":480,"title":{},"body":{"injectables/MapService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.t",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mime",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post.service.t",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/angular",{"_index":5,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["src/app/app",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":175,"title":{},"body":{"interfaces/AuthData.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.t",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:13",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:16",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:105",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:122",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:128",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:13",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:134",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:14",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:15",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:29",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:37",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:49",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:81",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/signup.component.t",{"_index":676,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:12",{"_index":685,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:13",{"_index":680,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":682,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:23",{"_index":684,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:32",{"_index":681,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/error/error",{"_index":354,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/error/error.component.t",{"_index":337,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":347,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:12",{"_index":345,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:9",{"_index":344,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/header/header.component.t",{"_index":391,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:11",{"_index":403,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:12",{"_index":398,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:27",{"_index":399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/maps/map.modul.t",{"_index":372,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["src/app/maps/map.modul.ts:13",{"_index":390,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:14",{"_index":387,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:16",{"_index":389,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:25",{"_index":376,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["src/app/maps/map.modul.ts:26",{"_index":377,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["src/app/maps/map.service.t",{"_index":436,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/maps/map.service.ts:13",{"_index":468,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:14",{"_index":465,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:15",{"_index":466,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:16",{"_index":467,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:17",{"_index":451,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:30",{"_index":457,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:34",{"_index":455,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:38",{"_index":456,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:42",{"_index":454,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:46",{"_index":461,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:50",{"_index":463,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:54",{"_index":459,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map/map.component.t",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["src/app/posts/post",{"_index":496,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/posts/post.model.t",{"_index":491,"title":{},"body":{"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/posts/post.service.t",{"_index":630,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/posts/post.service.ts:103",{"_index":640,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:14",{"_index":648,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:15",{"_index":636,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:19",{"_index":644,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:50",{"_index":645,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:54",{"_index":642,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:64",{"_index":638,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:79",{"_index":647,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/posts.module.t",{"_index":627,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/environments/environment.t",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":762,"title":{"index.html":{}},"body":{}}],["state",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":785,"title":{},"body":{"index.html":{}}}],["string",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["subject",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["subscrib",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe((postdata",{"_index":610,"title":{},"body":{"components/PostListComponent.html":{}}}],["subscribe(authstatu",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(isauthent",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["subscribe(respons",{"_index":674,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscribe(responsedata",{"_index":669,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscribe(transformedpostdata",{"_index":659,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscript",{"_index":402,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["support",{"_index":807,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":808,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":792,"title":{},"body":{"index.html":{}}}],["this.authlistenersub",{"_index":405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authlistenersubs.unsubscrib",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservic",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["this.authservice.autoauthus",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.createuser(form.value.email",{"_index":686,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.getauthstatuslisten",{"_index":406,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.getisauth",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["this.authservice.gettoken",{"_index":209,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.getuserid",{"_index":615,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.authservice.login(form.value.email",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authstatuslistener.asobserv",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(fals",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(tru",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussub",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.authstatussub.unsubscrib",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.clearauthdata",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cord",{"_index":484,"title":{},"body":{"injectables/MapService.html":{}}}],["this.currentpag",{"_index":606,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.db.list(this.markerpath).push(data",{"_index":486,"title":{},"body":{"injectables/MapService.html":{}}}],["this.db.object(this.markerpath",{"_index":487,"title":{},"body":{"injectables/MapService.html":{}}}],["this.dialog.open(errorcompon",{"_index":369,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.form",{"_index":530,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.get('image').updatevalueandvalid",{"_index":556,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.invalid",{"_index":563,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.patchvalue({imag",{"_index":555,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.reset",{"_index":569,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.setvalu",{"_index":549,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.cont",{"_index":566,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.imag",{"_index":567,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.titl",{"_index":565,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.geometri",{"_index":384,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["this.getauthdata",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.http.delete(backend_url",{"_index":675,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.http.get(backend_url",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.http.post(backend_url",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.imagepreview",{"_index":560,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.isauthent",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isload",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.key",{"_index":479,"title":{},"body":{"injectables/MapService.html":{}}}],["this.logout",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mark",{"_index":477,"title":{},"body":{"injectables/MapService.html":{}}}],["this.mod",{"_index":538,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post",{"_index":543,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["this.post.cont",{"_index":551,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post.imagepath",{"_index":552,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post.titl",{"_index":550,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postid",{"_index":540,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsperpag",{"_index":617,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservic",{"_index":608,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.addpost",{"_index":564,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsservice.deletepost(postid).subscrib",{"_index":619,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.getpost(this.postid).subscribe((postdata",{"_index":542,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsservice.getposts(this.postsperpag",{"_index":605,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.updatepost",{"_index":568,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postssub",{"_index":607,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postssub.unsubscrib",{"_index":620,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsupdated.asobserv",{"_index":663,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postsupdated.next",{"_index":661,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":536,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.router.navig",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.router.navigate(['/login",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.saveauthdata(token",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresindur",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentim",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.totalpost",{"_index":612,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.userid",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{}}}],["this.userisauthent",{"_index":404,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["throwerror",{"_index":363,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":370,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["titl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentim",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["totalpost",{"_index":579,"title":{},"body":{"components/PostListComponent.html":{}}}],["transformedpostdata.maxpost",{"_index":662,"title":{},"body":{"injectables/PostsService.html":{}}}],["transformedpostdata.post",{"_index":660,"title":{},"body":{"injectables/PostsService.html":{}}}],["tree",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.valid",{"_index":529,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["type.validator.t",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":670,"title":{},"body":{"injectables/PostsService.html":{}}}],["typeof(control.valu",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/mapbox",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["types/underscor",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["uint8array(filereader.result).subarray(0",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqu",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":791,"title":{},"body":{"index.html":{}}}],["up",{"_index":688,"title":{},"body":{"components/SignupComponent.html":{}}}],["updatepost",{"_index":635,"title":{},"body":{"injectables/PostsService.html":{}}}],["updatepost(id",{"_index":646,"title":{},"body":{"injectables/PostsService.html":{}}}],["us",{"_index":781,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{}}}],["userisauthent",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["valid",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["validators.minlength(3",{"_index":533,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["validators.requir",{"_index":532,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["valu",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["variabl",{"_index":696,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":767,"title":{},"body":{"index.html":{}}}],["via",{"_index":794,"title":{},"body":{"index.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["work",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["ye",{"_index":388,"title":{},"body":{"classes/GeoJson.html":{},"components/PostListComponent.html":{}}}],["zone.j",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AngularMaterialModule.html":{"url":"modules/AngularMaterialModule.html","title":"module - AngularMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  AngularMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/angular-material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatDialogModule\n} from '@angular/material';\n\n@NgModule({\n  // automatic import by angular\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\nexport class AngularMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'mean-course'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Post } from './posts/post.model';\nimport { AuthService } from './auth/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'mean-course';\n\n  constructor(private authService: AuthService) {\n  }\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ErrorComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ErrorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                            \n                                     ErrorInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    PostsModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ErrorComponent } from './error/error.component';\n\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error/error-interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/posts.module';\nimport { MapComponent } from './maps/map/map.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    PostsModule,\n    HttpClientModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MapComponent } from './maps/map/map.component';\n\nconst routes: Routes = [\n  { path: 'list', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard]},\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'map', component: MapComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthData {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    const userIsAuthenticated = this.authService.getIsAuth();\n    if (!userIsAuthenticated) {\n      this.router.navigate(['/login']);\n    }\n    return userIsAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-interceptor.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest, next: HttpHandler) {\n      const authToken = this.authService.getToken();\n      const authRequest = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n      });\n      return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAuthModule -->\n\nAngularMaterialModule->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                createUser\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                getUserId\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoAuthUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nautoAuthUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clearAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearAuthData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { token: any; expirationDate: any; userId: any; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatusListener\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatusListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIsAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIsAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveAuthData(token: string, expirationDate: Date, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationDate\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setAuthTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAuthTimer(duration: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        duration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusListener:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenTimer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthData } from './auth-data.model';\n\nconst BACKEND_URL = environment.apiUrl + '/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http.post(BACKEND_URL + '/signup', authData).subscribe(\n      () => {\n        this.router.navigate(['/']);\n      },\n      error => {\n        this.authStatusListener.next(false);\n      }\n    );\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(\n        BACKEND_URL + '/login',\n        authData\n      )\n      .subscribe(\n        response => {\n          const token = response.token;\n          this.token = token;\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n            this.userId = response.userId;\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            console.log(expirationDate);\n            this.saveAuthData(token, expirationDate, this.userId);\n            this.router.navigate(['/']);\n          }\n        },\n        error => {\n          this.authStatusListener.next(false);\n        }\n      );\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.http.get(BACKEND_URL + '/check').subscribe(response => {\n        const res: any = response;\n        if (res.message === 'Auth worked') {\n          this.authStatusListener.next(true);\n          this.userId = authInformation.userId;\n          this.setAuthTimer(expiresIn / 1000);\n          console.log('Reauthenticated');\n        } else {\n          this.logout();\n        }\n      });\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/']);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log('Setting timer: ' + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         An Error Occured \n\n   {{ data.message }} \n\n\n  Okay\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' An Error Occured    {{ data.message }}   Okay'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/error/error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error-interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error-interceptor.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { ErrorComponent } from './error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) { }\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An error occurred!';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeatureCollection.html":{"url":"classes/FeatureCollection.html","title":"class - FeatureCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeatureCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                features\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(features: Array)\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.modul.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        features\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            features\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        features:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FeatureCollection'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoJson.html":{"url":"classes/GeoJson.html","title":"class - GeoJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IGeoJson\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geometry\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(coordinates: , properties?: )\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.modul.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geometry:     IGeometry\n\n                    \n                \n                    \n                        \n                            Type :     IGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        properties:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Feature'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubs\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authListenerSubs:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userIsAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener()\n    .subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  Posts\n  \n  \n    \n      Map\n    \n    \n      New post\n    \n    \n      Login\n    \n    \n      Signup\n    \n    \n      Logout\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Posts              Map              New post              Login              Signup              Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoJson.html":{"url":"interfaces/IGeoJson.html","title":"interface - IGeoJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     IGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGeometry\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeometry.html":{"url":"interfaces/IGeometry.html","title":"interface - IGeometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeometry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coordinates\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                    \n                                \n                                \n                                    \n                                        coordinates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogin(form: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Please enter valid email\n    \n    \n      \n      Please enter a valid password.\n    \n    Login\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Please enter valid email                    Please enter a valid password.        Login  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cords\n                            \n                            \n                                    Private\n                                cordsPath\n                            \n                            \n                                keys\n                            \n                            \n                                    Private\n                                markerPath\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMarker\n                            \n                            \n                                getCords\n                            \n                            \n                                getKeys\n                            \n                            \n                                getMarker\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                removeMarker\n                            \n                            \n                                setMarkerGeoJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMarker(data: GeoJson)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    GeoJson\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCords\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetKeys()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMarker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveMarker(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMarkerGeoJson\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMarkerGeoJson(coordinates: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cords:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cordsPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cordsPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/cords\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/marker\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markers:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport * as mapboxgl from 'mapbox-gl';\nimport { GeoJson } from './map.modul';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MapService {\n  markers: AngularFireList;\n  cords: AngularFireList;\n  keys: Observable;\n  private markerPath = \"/marker\";\n  private cordsPath = \"/cords\";\n\n  constructor(private db: AngularFireDatabase) {\n    Object.getOwnPropertyDescriptor(mapboxgl, \"accessToken\").set(\n      environment.mapbox.accessToken\n    );\n    this.markers = db.list(this.markerPath);\n    this.keys = this.markers\n      .snapshotChanges()\n      .pipe(map(changes => changes.map(c => ({ key: c.key }))));\n    this.cords = db.list(this.cordsPath);\n  }\n\n  getMarker() {\n    return this.markers;\n  }\n\n  getCords() {\n    return this.cords;\n  }\n\n  getKeys() {\n    return this.keys;\n  }\n\n  createMarker(data: GeoJson) {\n    return this.db.list(this.markerPath).push(data);\n  }\n\n  removeMarker(key: string) {\n    return this.db.object(this.markerPath + \"/\" + key).remove();\n  }\n\n  setMarkerGeoJson(coordinates) {\n    return new GeoJson(coordinates);\n  }\n\n  private handleError(error) {\n    console.log(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/posts/post.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        id\n                                \n                                \n                                        imagePath\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n  id: string;\n  title: string;\n  content: string;\n  imagePath: string;\n  creator: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostCreateComponent.html":{"url":"components/PostCreateComponent.html","title":"component - PostCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/post-create/post-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-create\n            \n\n            \n                styleUrls\n                post-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-create.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                form\n                            \n                            \n                                imagePreview\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                mode\n                            \n                            \n                                post\n                            \n                            \n                                    Private\n                                postId\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImagePicked\n                            \n                            \n                                onSavePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postsService: PostsService, route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post-create/post-create.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsService\n                                                  \n                                                        \n                                                                    PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onImagePicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonImagePicked(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSavePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSavePost()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagePreview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imagePreview:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'create'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     Post\n\n                    \n                \n                    \n                        \n                            Type :     Post\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsService:     PostsService\n\n                    \n                \n                    \n                        \n                            Type :     PostsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { mimeType } from './mime-type.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  private mode = 'create';\n  private postId: string;\n  private authStatusSub: Subscription;\n  post: Post;\n  form: FormGroup;\n  isLoading = false;\n  imagePreview;\n\n  constructor(public postsService: PostsService, public route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n    .getAuthStatusListener()\n    .subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.form = new FormGroup({\n      'title': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\n      'content': new FormControl(null, { validators: [Validators.required] }),\n      'image': new FormControl(null, { validators: [Validators.required] , asyncValidators: [mimeType] })\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n        if (paramMap.has('postId')) {\n          this.mode = 'edit';\n          this.postId = paramMap.get('postId');\n          this.isLoading = true;\n          this.postsService.getPost(this.postId).subscribe((postData) => {\n            this.post = {\n              id: postData._id,\n              title: postData.title,\n              content: postData.content,\n              imagePath: postData.imagePath,\n              creator: postData.creator };\n            this.form.setValue({\n              title: this.post.title,\n              content: this.post.content,\n              image: this.post.imagePath\n            });\n            this.isLoading = false;\n          });\n        } else {\n          this.mode = 'create';\n          this.postId = null;\n        }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({image: file});\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n        );\n    }\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      \n        \n          Please enter post title\n      \n      \n        Pick Image\n        \n      \n      \n        \n      \n      \n        \n        Please enter post content\n      \n      Save Post\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Please enter post title                    Pick Image                                                        Please enter post content            Save Post    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostListComponent.html":{"url":"components/PostListComponent.html","title":"component - PostListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/post-list/post-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-list\n            \n\n            \n                styleUrls\n                post-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                currentPage\n                            \n                            \n                                isLoading\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                posts\n                            \n                            \n                                postsPerPage\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                    Private\n                                postsSub\n                            \n                            \n                                totalPosts\n                            \n                            \n                                userId\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangedPage\n                            \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postsService: PostsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post-list/post-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsService\n                                                  \n                                                        \n                                                                    PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangedPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangedPage(pageData: PageEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageData\n                                                        \n                                                                    PageEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDelete(postId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageSizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 2, 5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postsPerPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsPerPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsService:     PostsService\n\n                    \n                \n                    \n                        \n                            Type :     PostsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalPosts:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userIsAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 5;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor(public postsService: PostsService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.postsSub = this.postsService\n    .getPostUpdateListener()\n    .subscribe((postData: { posts: Post[], postCount: number }) => {\n      this.isLoading = false;\n      this.totalPosts = postData.postCount;\n      this.posts = postData.posts;\n    });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userId = this.authService.getUserId();\n    this.authStatusSub = this.authService\n    .getAuthStatusListener()\n    .subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n0 && !isLoading\">\n  \n    \n      {{ post.title }}\n    \n    \n      \n    \n    {{ post.content }}\n    \n      EDIT\n      DELETE\n    \n  \n\n0\">\n\n\n  No post yes!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0 && !isLoading\">            {{ post.title }}                      {{ post.content }}          EDIT      DELETE      0\">  No post yes!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n  Modules\n  PostsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nPostCreateComponent\n\nPostCreateComponent\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostCreateComponent->PostsModule\n\n\n\n\n\nPostListComponent\n\nPostListComponent\n\nPostsModule -->\n\nPostListComponent->PostsModule\n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nPostsModule -->\n\nAngularMaterialModule->PostsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/posts/posts.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PostCreateComponent\n                            \n                            \n                                PostListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';   // reactive forms\n\n\nimport { PostCreateComponent } from './post-create/post-create.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    PostCreateComponent,\n    PostListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\nexport class PostsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/posts/post.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                posts\n                            \n                            \n                                    Private\n                                postsUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPost\n                            \n                            \n                                deletePost\n                            \n                            \n                                getPost\n                            \n                            \n                                getPosts\n                            \n                            \n                                getPostUpdateListener\n                            \n                            \n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPost\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPost(title: string, content: string, image: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        image\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePost\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePost(postId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPost\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPost(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPosts(postsPerPage: number, currentPage: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsPerPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        currentPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPostUpdateListener\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPostUpdateListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePost(id: string, title: string, content: string, image: File | string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        image\n                                                        \n                                                                    File | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postsUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsUpdated:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../environments/environment';\nimport { Post } from './post.model';\n\nconst BACKEND_URL = environment.apiUrl + '/posts/';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    this.http\n      .get(\n        BACKEND_URL + queryParams\n      )\n      .pipe(\n        map(postData => {\n          return {\n            posts: postData.posts.map(post => {\n              return {\n                title: post.title,\n                content: post.content,\n                id: post._id,\n                imagePath: post.imagePath,\n                creator: post.creator\n              };\n            }),\n            maxPosts: postData.maxPosts\n          };\n        })\n      )\n      .subscribe(transformedPostData => {\n        this.posts = transformedPostData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get(BACKEND_URL + id);\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.http\n      .post(\n        BACKEND_URL,\n        postData\n      )\n      .subscribe(responseData => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === 'object') {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSignup\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSignup(form: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener()\n    .subscribe(authStatus => {\n      this.isLoading = false;\n    });\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Please enter valid email\n    \n    \n      \n      Please enter a valid password.\n    \n    Sign up\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Please enter valid email                    Please enter a valid password.        Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth-data.model.ts\n            \n            \n                interface\n            \n            \n                AuthData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                variable\n            \n            \n                BACKEND_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                class\n            \n            \n                FeatureCollection\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                class\n            \n            \n                GeoJson\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                interface\n            \n            \n                IGeoJson\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                interface\n            \n            \n                IGeometry\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/maps/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/maps/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                src/app/posts/post-create/mime-type.validator.ts\n            \n            \n                variable\n            \n            \n                mimeType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/posts/post-create/post-create.component.ts\n            \n            \n                component\n            \n            \n                PostCreateComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/posts/post-list/post-list.component.ts\n            \n            \n                component\n            \n            \n                PostListComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/posts/post.model.ts\n            \n            \n                interface\n            \n            \n                Post\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/posts/post.service.ts\n            \n            \n                injectable\n            \n            \n                PostsService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/posts/post.service.ts\n            \n            \n                variable\n            \n            \n                BACKEND_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/fire : ^5.0.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @types/mapbox-gl : ^0.48.0\n        \n            @types/underscore : ^1.8.9\n        \n            angularfire2 : ^5.0.1\n        \n            bcrypt : ^3.0.0\n        \n            body-parser : ^1.18.3\n        \n            core-js : ^2.5.4\n        \n            dotenv : ^6.0.0\n        \n            express : ^4.16.3\n        \n            firebase : ^5.4.2\n        \n            jsonwebtoken : ^8.3.0\n        \n            mapbox-animation : ^0.16.3\n        \n            mapbox-gl : ^0.49.0-beta.1\n        \n            mongoose : ^5.2.13\n        \n            mongoose-unique-validator : ^2.0.1\n        \n            multer : ^1.3.1\n        \n            nodemon : ^1.18.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeanCourse\nThis project was generated with Angular CLI version 6.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nAngularMaterialModule->PostsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAngularMaterialModule->AuthModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nPostCreateComponent\n\nPostCreateComponent\n\nPostsModule -->\n\nPostCreateComponent->PostsModule\n\n\n\n\n\nPostListComponent\n\nPostListComponent\n\nPostsModule -->\n\nPostListComponent->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BACKEND_URL   (src/.../auth.service.ts)\n                        \n                        \n                            BACKEND_URL   (src/.../post.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mimeType   (src/.../mime-type.validator.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BACKEND_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user'\n                        \n                    \n\n\n            \n        \n\n    src/app/posts/post.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BACKEND_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/posts/'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api',\n\n  firebase: {\n    apiKey: 'AIzaSyA5VBlvbTD_Gtl9IwgJc1vdGDZF24K9X5c',\n    authDomain: 'diplomarbeit-9dd8c.firebaseapp.com',\n    databaseURL: 'https://diplomarbeit-9dd8c.firebaseio.com',\n    projectId: 'diplomarbeit-9dd8c',\n    storageBucket: 'diplomarbeit-9dd8c.appspot.com',\n    messagingSenderId: '532004071803'\n  },\n\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoidHdvZmFjZXJlbG9hZGVkIiwiYSI6ImNqbGpqZnF5dDBjbWMzcG43YXNmZTU4bG8ifQ.PrYi64e2Nw3V3K7qNWz-Cg'\n  },\n\n  googleMapsKey: 'AIzaSyAYgLWmXlH_hSdXG0irotKfKyRblx8ayiQ'\n\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/posts/post-create/mime-type.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     \n\n                    \n                \n                    \n                        \n                            Default value : (\n  control: AbstractControl\n): Promise | Observable => {\n  if (!control.value || typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer) => {\n      fileReader.addEventListener('loadend', () => {\n        const arr = new Uint8Array(fileReader.result).subarray(0, 4);\n        let header = '';\n        let isValid = false;\n        for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
