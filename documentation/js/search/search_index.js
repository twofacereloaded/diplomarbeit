var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/modules/AngularMaterialModule.html",[0,0.8,1,1.539]],["body/modules/AngularMaterialModule.html",[0,1.107,1,2.596,2,0.351,3,0.299,4,0.2,5,4.397,6,4.397,7,0.938,8,0.031,9,2.596,10,0.713,11,5.361,12,5.361,13,5.361,14,5.361,15,5.361,16,5.361,17,5.361,18,5.361,19,2.567,20,3.678,21,2.567,22,0.364,23,0.2,24,0.025,25,0.025]],["title/components/AppComponent.html",[26,0.566,27,1.104]],["body/components/AppComponent.html",[2,0.254,3,0.216,4,0.145,7,0.802,8,0.031,10,0.515,22,0.216,23,0.145,24,0.021,25,0.021,26,0.993,27,1.848,28,1.539,29,1.539,30,1.539,31,2.657,32,1.186,33,2.397,34,1.539,35,2.979,36,2.513,37,2.535,38,2.104,39,4.344,40,2.104,41,4.344,42,0.42,43,1.006,44,3.448,45,1.186,46,2.577,47,0.8,48,1.684,49,1.998,50,1.147,51,4.344,52,0.8,53,1.147,54,0.638,55,0.736,56,3.177,57,0.8,58,1.196,59,1.186,60,1.019,61,1.019,62,4.344,63,4.344,64,1.352,65,3.177,66,2.059,67,1.411,68,3.177,69,1.103,70,2.104,71,1.93,72,2.104,73,2.577,74,1.539,75,1.539,76,1.019,77,1.539,78,1.103,79,1.539,80,1.019,81,1.539,82,1.103,83,1.539,84,1.019,85,1.539,86,1.019,87,1.539,88,1.019,89,1.298,90,1.539]],["title/modules/AppModule.html",[0,0.8,91,2.059]],["body/modules/AppModule.html",[0,0.971,1,2.639,2,0.214,3,0.182,4,0.122,7,1.029,8,0.032,9,1.868,10,0.435,21,1.565,22,0.262,23,0.122,24,0.018,25,0.018,27,2.11,36,1.095,69,0.931,76,1.842,78,1.892,82,1.892,91,4.166,92,1.421,93,2.926,94,2.926,95,3.054,96,2.242,97,2.242,98,2.242,99,2.242,100,2.242,101,3.18,102,3.18,103,3.531,104,3.531,105,2.499,106,1.737,107,1.565,108,2.681,109,3.856,110,3.856,111,3.225,112,1.737,113,3.856,114,2.681,115,3.856,116,4.516,117,1.565,118,3.225,119,1.298,120,1.421,121,1.737,122,2.681,123,2.242,124,3.856,125,2.242,126,2.681,127,2.681,128,2.681,129,2.681,130,2.251,131,2.681,132,2.242,133,1.953,134,2.681,135,2.242,136,2.681,137,3.856,138,3.856,139,1.868]],["title/classes/AppPage.html",[23,0.145,140,2.315]],["body/classes/AppPage.html",[2,0.35,3,0.298,4,0.199,7,0.711,8,0.031,22,0.298,23,0.243,24,0.025,25,0.025,37,2.558,42,0.58,45,1.461,50,1.239,57,1.514,71,1.947,112,2.84,140,3.898,141,3.665,142,6.014,143,6.014,144,4.383,145,4.383,146,3.665,147,4.383,148,4.383,149,4.383]],["title/modules/AppRoutingModule.html",[0,0.8,101,1.855]],["body/modules/AppRoutingModule.html",[0,0.953,2,0.302,3,0.258,4,0.172,7,0.997,8,0.032,9,2.365,10,0.614,22,0.332,23,0.172,24,0.023,25,0.023,26,1.017,82,1.696,84,1.732,86,1.565,95,2.211,101,2.85,135,3.168,150,3.788,151,3.168,152,3.557,153,2.616,154,1.683,155,4.882,156,2.454,157,3.168,158,2.454,159,3.168,160,4.157,161,3.788,162,1.683,163,4.939,164,3.168,165,3.168,166,4.083,167,3.788,168,2.76,169,3.788,170,3.788,171,2.454,172,3.788]],["title/interfaces/AuthData.html",[173,1.019,174,2.059]],["body/interfaces/AuthData.html",[2,0.366,3,0.311,4,0.208,8,0.03,22,0.311,24,0.026,25,0.026,42,0.606,43,1.273,54,0.807,59,1.731,173,1.761,174,3.559,175,2.966,176,3.828,177,3.955,178,3.955]],["title/guards/AuthGuard.html",[160,2.315,179,2.315]],["body/guards/AuthGuard.html",[2,0.289,3,0.246,4,0.165,7,0.91,8,0.032,10,0.587,22,0.246,23,0.165,24,0.023,25,0.023,32,0.99,42,0.479,45,1.295,47,0.912,48,1.921,49,2.075,50,1.099,52,1.194,53,1.099,54,0.697,55,1.099,57,1.194,67,1.61,153,2.298,154,1.61,160,3.456,162,1.61,166,4.871,179,2.64,180,3.624,181,4.435,182,3.624,183,3.624,184,5.611,185,5.289,186,5.611,187,3.624,188,3.967,189,3.853,190,3.967,191,1.521,192,1.259,193,2.348,194,1.481,195,5.289,196,2.64,197,3.624]],["title/interceptors/AuthInterceptor.html",[103,2.059,130,1.855]],["body/interceptors/AuthInterceptor.html",[2,0.297,3,0.253,4,0.169,7,0.868,8,0.031,10,0.602,22,0.253,23,0.169,24,0.023,25,0.023,32,1.014,42,0.491,45,1.316,47,0.935,48,1.969,49,2.089,50,1.117,52,1.213,53,1.117,54,0.708,55,1.117,57,1.213,67,1.65,103,3.124,117,2.168,130,2.168,162,2.141,175,3.468,191,1.546,193,2.407,198,3.106,199,4.032,200,3.714,201,4.032,202,4.737,203,4.737,204,4.737,205,3.714,206,3.106,207,4.032,208,4.821,209,3.714,210,3.714,211,3.714,212,3.714,213,3.106,214,3.714,215,3.714,216,2.706,217,3.714,218,3.714,219,3.714]],["title/modules/AuthModule.html",[0,0.8,220,2.059]],["body/modules/AuthModule.html",[0,1.207,1,2.907,2,0.294,3,0.25,4,0.168,7,1.016,8,0.031,9,2.322,10,0.597,21,2.15,22,0.326,23,0.168,24,0.023,25,0.023,69,1.28,80,1.924,88,1.924,92,1.953,93,3.454,94,2.387,95,2.15,105,3.107,106,2.387,107,2.15,118,4.01,119,1.784,132,3.081,133,2.684,168,2.684,220,4.15,221,3.081,222,3.081,223,3.081,224,3.503,225,3.684,226,4.01,227,2.684,228,3.081,229,3.081]],["title/modules/AuthRoutingModule.html",[0,0.8,224,1.855]],["body/modules/AuthRoutingModule.html",[0,1.058,2,0.336,3,0.286,4,0.191,7,0.988,8,0.032,9,2.526,10,0.682,22,0.355,23,0.191,24,0.025,25,0.025,26,0.929,80,1.672,88,1.672,89,1.718,151,3.516,152,3.799,153,2.746,154,1.867,162,1.867,163,4.361,175,2.724,224,3.044,228,3.516,229,3.516,230,2.724,231,4.204]],["title/injectables/AuthService.html",[49,1.104,191,1.019]],["body/injectables/AuthService.html",[2,0.126,3,0.108,4,0.072,7,0.715,8,0.032,10,0.256,22,0.108,23,0.072,24,0.012,25,0.012,37,0.923,42,0.209,43,0.596,45,0.702,47,0.398,49,0.893,50,1.342,52,1.036,53,0.954,54,0.711,55,0.954,57,1.47,58,1.75,59,1.661,60,0.825,61,0.825,64,0.432,67,0.703,89,0.646,117,0.923,120,0.839,121,1.025,139,1.245,154,0.703,162,2.462,168,1.873,174,2.858,177,2.858,178,3.335,181,3.386,188,1.323,191,1.042,192,0.55,194,2.506,230,2.105,232,1.153,233,3.742,234,2.726,235,5.544,236,3.742,237,4.492,238,3.742,239,3.742,240,2.572,241,3.742,242,2.425,243,3.742,244,3.742,245,3.742,246,3.129,247,2.572,248,2.572,249,1.323,250,3.129,251,2.572,252,2.151,253,1.582,254,1.582,255,2.572,256,1.582,257,1.582,258,5.008,259,1.582,260,1.582,261,1.582,262,1.582,263,2.572,264,1.582,265,1.582,266,2.572,267,4.411,268,1.582,269,2.572,270,1.574,271,1.582,272,3.249,273,1.959,274,2.717,275,1.812,276,1.582,277,1.582,278,1.582,279,1.582,280,1.582,281,1.666,282,1.153,283,1.323,284,1.153,285,3.742,286,4.116,287,3.443,288,1.582,289,1.582,290,1.582,291,2.717,292,1.666,293,3.742,294,1.323,295,1.582,296,2.572,297,1.582,298,2.572,299,1.582,300,1.582,301,1.582,302,2.572,303,2.572,304,2.572,305,3.249,306,1.582,307,1.582,308,2.572,309,1.582,310,2.572,311,1.582,312,1.025,313,1.582,314,1.582,315,1.582,316,1.323,317,1.582,318,1.582,319,1.582,320,1.582,321,1.582,322,1.873,323,1.582,324,1.582,325,1.582,326,1.582,327,1.582,328,1.582,329,1.582,330,1.582,331,1.582,332,1.582,333,1.582,334,1.582,335,1.582,336,1.582,337,1.582,338,1.582,339,1.582,340,1.582]],["title/components/ErrorComponent.html",[26,0.566,76,1.019]],["body/components/ErrorComponent.html",[2,0.249,3,0.212,4,0.142,7,0.695,8,0.031,10,0.505,19,1.82,22,0.212,23,0.142,24,0.02,25,0.02,26,0.986,27,1.083,28,1.51,29,1.51,30,1.51,32,1.171,33,2.374,34,1.51,35,2.968,36,2.504,38,2.077,40,2.077,42,0.412,43,0.993,45,1.171,46,2.557,47,0.785,50,1.136,52,0.785,53,1.136,54,0.84,55,0.722,57,0.785,58,1.174,59,0.851,64,1.171,69,1.083,70,2.077,71,1.905,72,2.077,73,2.557,74,1.51,75,1.51,76,1.693,77,1.51,78,1.083,79,1.51,80,1,81,1.51,82,1.083,83,1.51,84,1,85,1.51,86,1,87,1.51,88,1,89,1.274,90,1.51,191,1.375,292,3.421,341,2.607,342,4.288,343,4.288,344,2.003,345,4.032,346,3.118,347,5.279,348,3.118,349,3.118,350,3.118,351,3.118,352,3.118,353,3.118,354,2.607,355,3.586,356,4.288,357,4.288]],["title/interceptors/ErrorInterceptor.html",[104,2.059,130,1.855]],["body/interceptors/ErrorInterceptor.html",[2,0.277,3,0.236,4,0.158,7,0.957,8,0.032,10,0.563,19,2.027,22,0.236,23,0.158,24,0.022,25,0.022,32,0.949,42,0.459,45,1.26,47,0.874,50,1.069,52,1.161,53,1.069,54,0.677,55,1.069,57,1.304,67,1.543,76,1.114,104,2.989,117,2.027,130,2.027,191,1.479,192,1.207,198,2.905,199,3.858,201,3.858,202,4.615,203,4.332,204,4.615,206,2.905,207,3.858,292,2.251,345,2.531,354,2.905,355,2.905,358,5.18,359,3.474,360,5.519,361,3.474,362,4.613,363,3.474,364,4.613,365,3.474,366,2.905,367,3.474,368,3.474,369,3.474,370,3.474,371,5.18,372,3.474,373,4.613,374,3.474,375,3.474,376,3.474]],["title/classes/FeatureCollection.html",[23,0.145,377,1.685]],["body/classes/FeatureCollection.html",[2,0.297,3,0.253,4,0.169,8,0.031,22,0.385,23,0.243,24,0.023,25,0.023,32,1.014,42,0.491,43,1.312,47,0.935,50,1.24,52,0.935,53,0.86,54,0.936,55,0.86,59,1.547,60,1.191,61,1.191,173,1.546,270,1.799,344,2.187,377,3.003,378,2.168,379,3.898,380,3.714,381,3.804,382,4.821,383,3.714,384,2.838,385,3.124,386,2.556,387,3.124,388,1.799,389,2.407,390,2.407,391,2.407,392,1.65]],["title/classes/GeoJson.html",[23,0.145,388,1.539]],["body/classes/GeoJson.html",[2,0.288,3,0.245,4,0.164,8,0.031,22,0.381,23,0.24,24,0.022,25,0.022,32,1.291,42,0.477,43,1.445,47,0.907,50,1.297,52,0.907,53,0.835,54,0.925,55,1.222,59,1.529,60,1.156,61,1.156,173,1.516,270,1.746,344,2.155,377,2.506,378,2.104,379,3.418,381,2.336,384,3.082,385,3.268,386,2.797,387,3.767,388,2.289,389,3.063,390,2.336,391,2.336,392,1.601,393,4.727,394,3.014,395,3.604,396,3.604]],["title/components/HeaderComponent.html",[26,0.566,78,1.104]],["body/components/HeaderComponent.html",[2,0.222,3,0.189,4,0.126,7,0.746,8,0.031,10,0.45,22,0.189,23,0.126,24,0.019,25,0.019,26,0.945,27,0.964,28,1.344,29,1.344,30,1.344,32,1.079,33,2.23,34,1.344,35,2.898,36,2.445,38,1.914,40,1.914,42,0.367,43,0.916,45,1.079,46,2.43,47,0.699,48,1.471,49,1.915,50,1.277,52,0.699,53,1.067,54,0.58,55,0.643,57,1.159,58,1.733,60,0.89,61,0.89,64,1.505,66,1.798,67,1.233,69,0.964,70,1.914,71,1.756,72,1.914,73,2.43,74,1.344,75,1.344,76,0.89,77,1.344,78,1.743,79,1.344,80,0.89,81,1.344,82,0.964,83,1.344,84,0.89,85,1.344,86,0.89,87,1.344,88,0.89,89,1.881,90,1.344,171,2.561,192,0.964,194,1.881,196,2.022,216,2.88,230,2.561,234,2.022,246,3.306,273,1.756,275,1.914,397,2.321,398,2.687,399,3.953,400,3.953,401,5.017,402,4.196,403,2.929,404,5.017,405,3.953,406,2.775,407,2.775,408,2.775,409,2.929,410,2.775,411,3.306,412,2.775,413,2.321,414,2.321,415,2.775,416,2.775]],["title/interfaces/IGeoJson.html",[173,1.019,386,1.685]],["body/interfaces/IGeoJson.html",[2,0.309,3,0.263,4,0.176,8,0.031,22,0.391,23,0.225,24,0.024,25,0.024,32,1.058,42,0.513,43,1.433,54,0.942,55,1.148,59,1.572,173,1.751,270,1.877,344,1.583,377,2.627,378,2.262,379,3.21,381,2.511,384,3.153,385,3.188,386,2.895,387,3.854,388,1.877,389,2.511,390,2.511,391,2.511,392,1.722]],["title/interfaces/IGeometry.html",[173,1.019,384,1.685]],["body/interfaces/IGeometry.html",[2,0.316,3,0.269,4,0.18,8,0.031,22,0.394,23,0.228,24,0.024,25,0.024,32,1.08,42,0.523,43,1.343,54,0.939,59,1.584,173,1.768,270,2.67,344,1.616,377,2.661,378,2.309,379,3.253,381,2.563,384,3.075,385,3.57,386,2.661,387,3.253,388,1.916,389,2.563,390,2.563,391,2.563,392,1.757]],["title/components/LoginComponent.html",[26,0.566,80,1.019]],["body/components/LoginComponent.html",[2,0.207,3,0.176,4,0.118,7,0.788,8,0.031,10,0.42,22,0.176,23,0.118,24,0.018,25,0.018,26,0.92,27,0.901,28,1.256,29,1.256,30,1.256,32,1.028,33,2.146,34,1.256,35,2.855,36,2.408,38,1.823,40,1.823,42,0.343,43,0.872,45,1.028,46,2.355,47,0.653,48,1.375,49,2.074,50,1.287,52,0.947,53,1.126,54,0.714,55,0.872,57,1.224,58,1.668,60,0.831,61,0.831,64,1.028,69,0.901,70,1.823,71,1.672,72,1.823,73,2.355,74,1.256,75,1.256,76,0.831,77,1.256,78,0.901,79,1.256,80,1.559,81,1.256,82,0.901,83,1.256,84,0.831,85,1.256,86,0.831,87,1.256,88,0.831,89,1.059,90,1.256,119,1.256,139,1.256,177,2.439,178,2.439,192,0.901,193,1.68,194,1.811,230,3.151,242,1.68,275,2.146,344,1.538,392,1.152,398,2.587,403,2.838,409,2.838,417,2.168,418,3.764,419,3.764,420,3.151,421,3.151,422,3.764,423,3.764,424,2.593,425,2.593,426,3.764,427,4.067,428,2.593,429,1.68,430,2.593,431,2.593,432,1.68,433,1.889,434,1.889,435,2.439,436,2.168,437,2.593,438,2.168,439,1.68,440,3.542,441,3.542,442,3.151]],["title/injectables/MapService.html",[191,1.019,443,2.315]],["body/injectables/MapService.html",[2,0.195,3,0.166,4,0.111,7,0.885,8,0.032,10,0.397,22,0.166,23,0.111,24,0.017,25,0.017,37,1.428,42,0.324,43,0.836,45,0.985,47,0.616,50,1.396,52,1.269,53,1.168,54,0.822,55,1.168,57,1.517,58,0.921,59,1.49,60,1.156,61,1.156,67,1.086,120,1.297,121,1.585,125,2.046,171,1.585,189,3.445,191,1.374,192,0.85,194,2.336,273,1.086,284,1.782,292,1.585,345,1.782,385,1.428,388,2.29,443,2.628,444,2.046,445,5.277,446,4.729,447,5.277,448,4.729,449,5.277,450,3.607,451,4.729,452,4.729,453,4.729,454,3.607,455,3.607,456,3.607,457,2.446,458,4.729,459,3.607,460,3.607,461,3.607,462,2.446,463,2.446,464,2.446,465,2.446,466,3.607,467,2.446,468,3.607,469,2.446,470,3.607,471,2.446,472,5.457,473,2.446,474,2.446,475,2.446,476,2.446,477,2.446,478,1.782,479,2.046,480,2.446,481,2.446,482,2.446,483,2.446,484,2.446,485,4.285,486,2.446,487,3.607,488,2.446,489,2.446,490,2.446,491,2.446,492,3.607,493,2.446,494,2.446,495,2.446,496,2.446,497,2.446,498,2.446]],["title/interfaces/Post.html",[64,0.868,173,1.019]],["body/interfaces/Post.html",[2,0.336,3,0.286,4,0.191,8,0.03,22,0.286,24,0.025,25,0.025,42,0.556,43,1.208,44,3.841,54,0.895,59,1.799,64,1.424,173,1.672,499,3.516,500,4.318,501,4.318,502,4.318,503,4.318]],["title/components/PostCreateComponent.html",[26,0.566,84,1.019]],["body/components/PostCreateComponent.html",[2,0.133,3,0.113,4,0.153,7,0.826,8,0.032,9,0.804,10,0.434,22,0.113,23,0.076,24,0.013,25,0.013,26,0.752,27,0.577,28,0.804,29,0.804,30,0.804,32,0.73,33,1.626,34,0.804,35,2.532,36,2.136,38,1.295,40,1.295,42,0.22,43,0.62,44,2.735,45,0.73,46,1.864,47,0.418,49,1.647,50,1.3,52,0.673,53,0.892,54,0.748,55,0.62,57,1.062,58,1.449,59,1.152,60,0.857,61,0.857,64,1.641,66,1.076,69,0.577,70,1.295,71,1.188,72,1.295,73,1.864,74,0.804,75,0.804,76,0.532,77,0.804,78,0.577,79,0.804,80,0.532,81,0.804,82,0.577,83,0.804,84,1.234,85,0.804,86,0.532,87,0.804,88,0.532,89,0.678,90,0.804,119,0.804,139,1.295,153,2.184,154,0.738,158,3.68,162,1.188,165,3.772,192,0.577,194,2.136,242,1.076,273,1.875,275,1.864,322,1.21,344,1.724,392,0.738,398,1.96,403,2.247,409,2.247,420,2.494,421,2.494,429,2.494,432,1.076,433,1.21,434,1.21,435,2.494,439,1.076,440,2.804,441,2.804,442,2.494,500,3.074,501,1.21,502,1.21,503,1.21,504,3.68,505,1.389,506,2.674,507,2.674,508,3.849,509,3.849,510,2.804,511,3.119,512,2.674,513,3.849,514,1.389,515,4.51,516,2.674,517,1.661,518,1.661,519,2.674,520,3.849,521,1.661,522,1.661,523,1.661,524,4.22,525,1.661,526,1.661,527,1.661,528,1.661,529,1.661,530,2.674,531,1.661,532,2.674,533,1.21,534,1.389,535,1.948,536,1.661,537,1.661,538,1.661,539,3.358,540,3.358,541,1.661,542,3.219,543,1.661,544,1.661,545,1.661,546,3.358,547,1.389,548,3.358,549,1.661,550,1.661,551,1.21,552,1.661,553,1.661,554,1.661,555,1.661,556,1.661,557,1.661,558,1.661,559,1.661,560,1.661,561,1.661,562,1.661,563,1.661,564,1.661,565,1.661,566,1.389,567,1.661,568,1.661,569,1.661,570,1.661,571,1.661,572,1.661,573,2.674,574,2.674,575,2.674,576,1.661,577,1.661,578,2.674,579,2.674]],["title/components/PostListComponent.html",[26,0.566,86,1.019]],["body/components/PostListComponent.html",[2,0.136,3,0.116,4,0.078,7,0.74,8,0.032,10,0.277,19,0.996,22,0.116,23,0.078,24,0.013,25,0.013,26,0.762,27,0.593,28,0.827,29,0.827,30,0.827,32,0.747,33,1.657,34,0.827,35,2.554,36,2.154,38,1.324,40,1.324,42,0.226,43,0.633,45,0.747,46,1.894,47,0.43,49,1.666,50,1.338,52,0.861,53,0.991,54,0.805,55,0.792,57,0.984,58,1.473,59,1.247,60,1.538,61,1.538,64,1.629,66,1.106,69,0.593,70,1.324,71,1.215,72,1.324,73,1.894,74,0.827,75,0.827,76,0.547,77,0.827,78,0.593,79,0.827,80,0.547,81,0.827,82,0.593,83,0.827,84,0.547,85,0.827,86,1.254,87,0.827,88,0.547,89,0.697,90,0.827,139,1.657,156,3.778,164,2.287,192,0.593,194,1.959,196,1.244,234,1.244,237,3.271,242,1.106,270,2.323,275,2.211,287,2.287,312,2.959,344,1.117,392,0.758,394,2.287,398,1.996,402,3.271,403,2.283,409,2.799,411,2.287,414,1.428,420,2.534,421,2.959,432,1.106,433,1.244,435,2.773,439,1.106,504,3.778,510,1.244,511,3.144,514,1.428,533,1.244,534,1.428,547,2.287,551,1.244,580,1.428,581,2.734,582,2.734,583,3.271,584,3.911,585,3.271,586,3.911,587,3.911,588,2.734,589,2.734,590,2.734,591,1.707,592,1.707,593,2.734,594,3.911,595,1.707,596,1.707,597,2.734,598,1.707,599,3.579,600,1.707,601,1.707,602,3.911,603,2.734,604,2.734,605,1.707,606,1.707,607,1.707,608,1.707,609,1.707,610,1.707,611,1.707,612,1.707,613,3.42,614,3.911,615,2.734,616,1.707,617,1.707,618,1.428,619,1.707,620,1.428,621,1.707,622,1.707,623,1.707,624,1.707,625,1.707,626,1.707,627,1.707,628,1.707,629,2.287,630,2.287,631,2.734]],["title/modules/PostsModule.html",[0,0.8,102,1.855]],["body/modules/PostsModule.html",[0,1.2,1,2.9,2,0.292,3,0.248,4,0.166,7,1.014,8,0.032,9,2.31,10,0.592,21,2.133,22,0.324,23,0.166,24,0.023,25,0.023,64,1.302,69,1.269,84,1.92,86,1.92,92,1.937,93,3.441,94,2.367,95,2.133,102,3.684,105,3.09,106,2.367,107,2.133,119,1.769,133,2.662,152,3.474,154,1.623,156,2.367,157,3.056,158,2.367,159,3.056,226,3.989,227,2.662,429,2.367,632,3.056,633,3.056,634,3.654,635,3.654,636,4.769,637,3.654]],["title/injectables/PostsService.html",[191,1.019,511,1.855]],["body/injectables/PostsService.html",[2,0.161,3,0.137,4,0.233,7,0.829,8,0.032,10,0.327,22,0.137,23,0.092,24,0.015,25,0.015,37,1.178,42,0.267,43,0.723,44,3.652,45,0.852,47,0.508,50,1.256,52,1.234,53,1.136,54,0.751,55,1.136,57,1.418,58,1.436,59,1.704,60,1,61,1,64,1.583,67,0.897,117,1.178,120,1.07,121,1.308,154,0.897,162,1.694,171,1.308,181,3.724,191,1.223,192,0.701,194,2.089,249,1.688,250,3.588,252,2.609,270,2.375,273,1.906,274,3.189,281,2.471,282,1.47,284,1.47,291,2.609,294,3.189,316,1.688,322,1.47,366,1.688,500,4.106,501,2.273,502,3.847,503,2.273,510,2.273,511,1.821,533,1.47,542,4.63,551,2.273,583,3.189,585,1.688,618,3.588,620,1.688,629,1.688,630,1.688,638,1.47,639,4.29,640,3.12,641,3.12,642,4.29,643,3.12,644,3.12,645,3.12,646,2.018,647,3.12,648,2.018,649,3.12,650,2.018,651,3.12,652,2.018,653,2.018,654,3.12,655,2.018,656,2.018,657,3.12,658,2.018,659,2.018,660,2.018,661,2.018,662,2.018,663,2.018,664,2.018,665,2.018,666,2.018,667,2.018,668,2.018,669,2.018,670,2.018,671,2.018,672,4.903,673,3.813,674,3.12,675,3.12,676,3.12,677,2.018,678,2.018,679,1.688,680,2.018,681,2.018,682,2.018,683,2.018]],["title/components/SignupComponent.html",[26,0.566,88,1.019]],["body/components/SignupComponent.html",[2,0.207,3,0.176,4,0.118,7,0.788,8,0.031,10,0.42,22,0.176,23,0.118,24,0.018,25,0.018,26,0.919,27,0.899,28,1.253,29,1.253,30,1.253,32,1.026,33,2.144,34,1.253,35,2.853,36,2.407,38,1.82,40,1.82,42,0.342,43,0.871,45,1.026,46,2.353,47,0.651,48,1.372,49,2.073,50,1.287,52,0.946,53,1.125,54,0.713,55,0.871,57,1.223,58,1.667,60,0.83,61,0.83,64,1.026,69,0.899,70,1.82,71,1.67,72,1.82,73,2.353,74,1.253,75,1.253,76,0.83,77,1.253,78,0.899,79,1.253,80,0.83,81,1.253,82,0.899,83,1.253,84,0.83,85,1.253,86,0.83,87,1.253,88,1.558,89,1.809,90,1.253,119,1.253,139,1.253,177,2.436,178,2.436,192,0.899,193,1.677,194,1.809,275,2.144,344,1.536,392,1.149,398,2.584,403,2.836,409,2.836,413,2.164,420,3.148,421,3.148,427,4.063,429,1.677,432,1.677,434,1.885,435,2.436,436,2.164,438,2.164,439,1.677,440,3.539,441,3.539,442,3.148,684,2.164,685,3.759,686,3.759,687,3.759,688,3.759,689,2.588,690,2.588,691,3.759,692,2.588,693,2.588,694,2.588,695,2.588,696,3.759,697,3.759]],["title/coverage.html",[698,3.633]],["body/coverage.html",[4,0.145,8,0.031,23,0.226,24,0.021,25,0.021,26,1.069,27,1.109,31,2.67,49,1.109,54,0.469,64,0.872,76,1.023,78,1.109,80,1.023,82,1.109,84,1.023,86,1.023,88,1.023,120,1.692,140,2.325,141,2.67,156,2.068,158,2.068,173,1.71,174,2.068,175,2.068,176,2.67,191,1.591,232,3.175,273,1.418,281,2.824,312,4.245,341,2.67,377,1.692,378,3.112,384,1.692,386,1.692,388,1.546,397,2.67,417,2.67,443,2.325,444,2.67,499,2.67,504,3.215,505,2.67,511,1.863,535,2.325,580,2.67,638,3.175,684,2.67,698,2.67,699,3.192,700,3.192,701,3.192,702,4.962,703,5.332,704,3.192,705,4.197,706,5.761,707,4.358,708,3.192,709,3.192,710,3.192,711,3.192,712,3.192,713,2.67,714,2.67,715,3.192,716,3.192,717,3.192,718,3.192,719,2.67,720,3.645,721,2.67,722,2.67,723,3.192,724,3.192]],["title/dependencies.html",[92,2.027,725,2.65]],["body/dependencies.html",[8,0.032,10,0.6,19,2.162,24,0.023,25,0.023,92,1.964,111,4.024,112,3.118,119,1.794,123,3.098,154,1.645,192,1.287,213,3.098,227,2.698,442,2.4,478,3.506,479,4.024,726,3.704,727,6.271,728,3.704,729,3.704,730,3.704,731,3.704,732,3.704,733,3.704,734,3.704,735,3.704,736,3.704,737,3.704,738,3.704,739,3.704,740,3.704,741,3.704,742,3.704,743,3.704,744,3.704,745,3.704,746,3.704,747,3.704,748,3.704,749,3.704,750,4.812,751,3.704,752,3.098,753,3.704,754,3.704,755,3.704,756,3.704,757,3.704,758,3.704,759,3.704,760,4.812,761,3.704,762,3.704,763,3.704,764,3.704,765,3.704,766,3.704,767,3.704,768,3.704,769,3.704]],["title/index.html",[42,0.351,770,2.65,771,2.65]],["body/index.html",[3,0.259,4,0.173,8,0.023,20,3.186,21,3.162,24,0.023,25,0.023,26,0.965,36,1.556,53,0.883,107,2.224,146,3.186,273,1.692,772,3.809,773,4.9,774,5.719,775,5.417,776,3.809,777,3.809,778,3.809,779,4.9,780,6.16,781,6.16,782,3.809,783,3.809,784,3.809,785,3.809,786,3.809,787,3.809,788,3.809,789,3.809,790,5.417,791,3.809,792,5.917,793,3.809,794,3.809,795,3.809,796,3.809,797,3.809,798,3.809,799,3.186,800,4.9,801,5.917,802,4.9,803,4.9,804,3.809,805,5.719,806,3.809,807,3.809,808,5.417,809,3.809,810,3.809,811,3.809,812,3.809]],["title/modules.html",[0,1.093]],["body/modules.html",[0,1.172,1,2.255,8,0.026,24,0.026,25,0.026,91,3.018,101,2.718,102,2.718,112,3.842,220,3.018,224,2.718,813,5.929,814,5.929,815,6.363,816,5.929,817,5.929]],["title/overview.html",[818,3.633]],["body/overview.html",[0,1.138,1,2.754,8,0.031,22,0.229,23,0.153,24,0.021,25,0.021,26,0.6,27,2.077,69,1.17,76,1.635,78,1.772,80,1.635,82,1.772,84,1.635,86,1.635,88,1.635,91,4.239,92,1.786,93,2.183,94,2.183,95,1.966,96,2.817,97,2.817,98,2.817,99,2.817,100,2.817,101,2.977,102,3.593,103,3.305,104,3.305,105,2.929,106,2.183,107,1.966,153,1.631,173,1.08,179,2.454,191,1.08,220,4.031,221,2.817,222,2.817,223,2.817,224,2.977,599,2.817,632,2.817,633,2.817,818,2.817,819,3.369,820,3.369,821,4.52,822,2.817,823,3.369]],["title/routes.html",[153,2.104]],["body/routes.html",[8,0.028,24,0.028,25,0.028,153,2.489]],["title/miscellaneous/variables.html",[705,2.786,824,2.216]],["body/miscellaneous/variables.html",[4,0.201,8,0.032,24,0.021,25,0.021,42,0.43,54,0.648,57,0.819,59,0.889,60,1.801,61,1.801,64,0.889,120,2.657,139,1.576,162,2.387,189,3.651,190,2.722,216,2.371,232,2.371,273,1.961,275,2.138,281,3.754,282,3.217,283,2.722,312,2.109,478,2.371,504,2.109,535,3.651,566,3.693,638,2.371,679,3.693,705,2.371,713,2.722,714,3.693,719,2.722,720,2.722,721,4.191,722,4.191,752,2.722,799,2.722,822,2.722,824,2.722,825,3.254,826,3.254,827,4.416,828,3.254,829,3.254,830,3.254,831,3.254,832,3.254,833,3.254,834,3.254,835,3.254,836,3.254,837,5.012,838,3.254,839,3.254,840,3.254,841,3.254,842,3.254,843,3.254,844,3.254,845,3.254,846,3.254,847,3.254,848,3.254,849,3.254,850,3.254,851,3.254,852,3.254,853,3.254,854,3.254,855,4.416,856,3.254,857,3.254,858,3.254,859,3.254,860,3.254,861,3.254,862,3.254,863,3.254]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.16.3",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["0.48.0",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["0.49.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":599,"title":{},"body":{"components/PostListComponent.html":{},"overview.html":{}}}],["1.18.3",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["1.18.4",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["1.8.9",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":604,"title":{},"body":{"components/PostListComponent.html":{}}}],["1000",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":602,"title":{},"body":{"components/PostListComponent.html":{}}}],["2.0.1",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":821,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":822,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.16.3",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":603,"title":{},"body":{"components/PostListComponent.html":{}}}],["5.0.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["5.2.13",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["532004071803",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":819,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":777,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":820,"title":{},"body":{"overview.html":{}}}],["8.3.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":823,"title":{},"body":{"overview.html":{}}}],["9dd8c",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.appspot.com",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.firebaseapp.com",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.firebaseio.com",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken\").set",{"_index":483,"title":{},"body":{"injectables/MapService.html":{}}}],["activatedrout",{"_index":515,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["activatedroutesnapshot",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["addpost",{"_index":640,"title":{},"body":{"injectables/PostsService.html":{}}}],["addpost(titl",{"_index":645,"title":{},"body":{"injectables/PostsService.html":{}}}],["aizasya5vblvbtd_gtl9iwgjc1vdgdzf24k9x5c",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasyayglwmxlh_hsdxg0irotkfkyrblx8ayiq",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":21,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"index.html":{}}}],["angular/anim",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["angular/compil",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":10,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/fir",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":19,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/PostListComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/databas",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{}}}],["angularfiredatabas",{"_index":458,"title":{},"body":{"injectables/MapService.html":{}}}],["angularfiredatabasemodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirelist",{"_index":472,"title":{},"body":{"injectables/MapService.html":{}}}],["angularfiremodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["angularmaterialmodul",{"_index":1,"title":{"modules/AngularMaterialModule.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["anim",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["apikey",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["app.compon",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":27,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":140,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":101,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":381,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["artifact",{"_index":793,"title":{},"body":{"index.html":{}}}],["asyncvalid",{"_index":543,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["auth",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.servic",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["auth/auth",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.guard",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.module#authmodul",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.servic",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["authdata",{"_index":174,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdata).subscrib",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":160,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authinform",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettim",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.userid",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":103,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authlistenersub",{"_index":401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authmodul",{"_index":220,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authrequest",{"_index":214,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodul",{"_index":224,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":49,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authstatuslisten",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussub",{"_index":420,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["authtoken",{"_index":208,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["autoauthus",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["automat",{"_index":20,"title":{},"body":{"modules/AngularMaterialModule.html":{},"index.html":{}}}],["avail",{"_index":814,"title":{},"body":{"modules.html":{}}}],["backend_url",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":218,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["beta.1",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["bodi",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["brows",{"_index":815,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":147,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":792,"title":{},"body":{"index.html":{}}}],["c.key",{"_index":491,"title":{},"body":{"injectables/MapService.html":{}}}],["canactiv",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(rout",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":365,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":370,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cg",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":787,"title":{},"body":{"index.html":{}}}],["changes.map(c",{"_index":490,"title":{},"body":{"injectables/MapService.html":{}}}],["check",{"_index":811,"title":{},"body":{"index.html":{}}}],["check').subscribe(respons",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":23,"title":{"classes/AppPage.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{}},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clearauthdata",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentim",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":775,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodul",{"_index":632,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_declar",{"_index":633,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_import",{"_index":634,"title":{},"body":{"modules/PostsModule.html":{}}}],["code",{"_index":788,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["compon",{"_index":26,"title":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('reauthent",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('set",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":498,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log(expirationd",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":353,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(authservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(coordin",{"_index":389,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["constructor(data",{"_index":346,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(db",{"_index":457,"title":{},"body":{"injectables/MapService.html":{}}}],["constructor(dialog",{"_index":359,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(featur",{"_index":380,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["constructor(http",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["constructor(postsservic",{"_index":514,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["constructor(priv",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["constructor(publ",{"_index":392,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["content",{"_index":500,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["context",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.valu",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coordin",{"_index":385,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{}}}],["cord",{"_index":445,"title":{},"body":{"injectables/MapService.html":{}}}],["cordspath",{"_index":446,"title":{},"body":{"injectables/MapService.html":{}}}],["core",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["cours",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["coverag",{"_index":698,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostCreateComponent.html":{}}}],["create'},{'nam",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["create.compon",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PostsModule.html":{}}}],["create.component.css",{"_index":506,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.html",{"_index":507,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.t",{"_index":505,"title":{},"body":{"components/PostCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:19",{"_index":527,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:20",{"_index":529,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:21",{"_index":523,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:22",{"_index":528,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:23",{"_index":525,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:24",{"_index":526,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:25",{"_index":516,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:27",{"_index":530,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:29",{"_index":518,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:66",{"_index":521,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:77",{"_index":522,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:98",{"_index":517,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create/mim",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/post",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["createmark",{"_index":450,"title":{},"body":{"injectables/MapService.html":{}}}],["createmarker(data",{"_index":461,"title":{},"body":{"injectables/MapService.html":{}}}],["createus",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(email",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":501,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["currentpag",{"_index":583,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["data",{"_index":345,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{}}}],["data.messag",{"_index":356,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data.model",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.model.t",{"_index":176,"title":{},"body":{"interfaces/AuthData.html":{},"coverage.html":{}}}],["databaseurl",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationd",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":460,"title":{},"body":{"injectables/MapService.html":{}}}],["db.list(this.cordspath",{"_index":493,"title":{},"body":{"injectables/MapService.html":{}}}],["db.list(this.markerpath",{"_index":486,"title":{},"body":{"injectables/MapService.html":{}}}],["declar",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["decor",{"_index":350,"title":{},"body":{"components/ErrorComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["delet",{"_index":631,"title":{},"body":{"components/PostListComponent.html":{}}}],["deletepost",{"_index":641,"title":{},"body":{"injectables/PostsService.html":{}}}],["deletepost(postid",{"_index":647,"title":{},"body":{"injectables/PostsService.html":{}}}],["depend",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":783,"title":{},"body":{"index.html":{}}}],["develop",{"_index":778,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":362,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["diplomarbeit",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":791,"title":{},"body":{"index.html":{}}}],["directori",{"_index":796,"title":{},"body":{"index.html":{}}}],["dist",{"_index":795,"title":{},"body":{"index.html":{}}}],["document",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["dotenv",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["durat",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynam",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":806,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":141,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":145,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":144,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":547,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["edit/:postid",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["element(by.css('app",{"_index":148,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":177,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["end",{"_index":805,"title":{},"body":{"index.html":{}}}],["enter",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["entrycompon",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["environment.mapbox.accesstoken",{"_index":484,"title":{},"body":{"injectables/MapService.html":{}}}],["environments/environ",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["error",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{}}}],["error'},{'nam",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["error.compon",{"_index":368,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.component.css",{"_index":342,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":343,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error.messag",{"_index":373,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/error",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["error/error.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["errorcompon",{"_index":76,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorinterceptor",{"_index":104,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["errormessag",{"_index":371,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":520,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["event.target",{"_index":561,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["execut",{"_index":802,"title":{},"body":{"index.html":{}}}],["expirationd",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostr",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresindur",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":22,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["express",{"_index":213,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"dependencies.html":{}}}],["fals",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":379,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["featurecollect",{"_index":377,"title":{"classes/FeatureCollection.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fileread",{"_index":566,"title":{},"body":{"components/PostCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["filereader.addeventlistener('loadend",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebas",{"_index":752,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":798,"title":{},"body":{"index.html":{}}}],["form",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{}}}],["form.invalid",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["form.value.password",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":531,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formcontrol(nul",{"_index":539,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formdata",{"_index":673,"title":{},"body":{"injectables/PostsService.html":{}}}],["formgroup",{"_index":524,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formsmodul",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["frob",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["further",{"_index":807,"title":{},"body":{"index.html":{}}}],["gener",{"_index":774,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":388,"title":{"classes/GeoJson.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["geojson(coordin",{"_index":497,"title":{},"body":{"injectables/MapService.html":{}}}],["geometri",{"_index":387,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["get",{"_index":770,"title":{"index.html":{}},"body":{}}],["getauthdata",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslisten",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["getcord",{"_index":451,"title":{},"body":{"injectables/MapService.html":{}}}],["getisauth",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["getkey",{"_index":452,"title":{},"body":{"injectables/MapService.html":{}}}],["getmark",{"_index":453,"title":{},"body":{"injectables/MapService.html":{}}}],["getparagraphtext",{"_index":142,"title":{},"body":{"classes/AppPage.html":{}}}],["getpost",{"_index":642,"title":{},"body":{"injectables/PostsService.html":{}}}],["getpost(id",{"_index":649,"title":{},"body":{"injectables/PostsService.html":{}}}],["getposts(postsperpag",{"_index":651,"title":{},"body":{"injectables/PostsService.html":{}}}],["getpostupdatelisten",{"_index":618,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["gettoken",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserid",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["gl",{"_index":479,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["go",{"_index":810,"title":{},"body":{"index.html":{}}}],["googlemapskey",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":813,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":179,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["handleerror",{"_index":454,"title":{},"body":{"injectables/MapService.html":{}}}],["handleerror(error",{"_index":466,"title":{},"body":{"injectables/MapService.html":{}}}],["header",{"_index":216,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'nam",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["header.component.css",{"_index":399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":78,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":808,"title":{},"body":{"index.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["htmlinputelement).files[0",{"_index":562,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["http",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["http://localhost:3000/api",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":785,"title":{},"body":{"index.html":{}}}],["http_interceptor",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["httpclientmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":364,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":204,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":207,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":202,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["https://diplomarbeit",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":502,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["identifi",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["igeojson",{"_index":386,"title":{"interfaces/IGeoJson.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["igeometri",{"_index":384,"title":{"interfaces/IGeometry.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["imag",{"_index":542,"title":{},"body":{"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["imagepath",{"_index":503,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["imagepreview",{"_index":508,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["implement",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["inject",{"_index":191,"title":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["intercept",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":130,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor.t",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:15",{"_index":361,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:19",{"_index":363,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:6",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.ts:9",{"_index":205,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":173,"title":{"interfaces/AuthData.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"interfaces/Post.html":{}},"body":{"interfaces/AuthData.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"interfaces/Post.html":{},"coverage.html":{},"overview.html":{}}}],["isauth",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isauthent",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["isload",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["isvalid",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":804,"title":{},"body":{"index.html":{}}}],["key",{"_index":447,"title":{},"body":{"injectables/MapService.html":{}}}],["key).remov",{"_index":496,"title":{},"body":{"injectables/MapService.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["line:no",{"_index":211,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["list",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostListComponent.html":{}}}],["list'},{'nam",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["list.compon",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PostsModule.html":{}}}],["list.component.css",{"_index":581,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.html",{"_index":582,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.t",{"_index":580,"title":{},"body":{"components/PostListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":606,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:16",{"_index":601,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:17",{"_index":610,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:18",{"_index":607,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:19",{"_index":600,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:20",{"_index":605,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:21",{"_index":612,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:22",{"_index":611,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:23",{"_index":609,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:24",{"_index":590,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:26",{"_index":608,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:28",{"_index":592,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:48",{"_index":595,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:55",{"_index":598,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:64",{"_index":591,"title":{},"body":{"components/PostListComponent.html":{}}}],["list/post",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["liter",{"_index":347,"title":{},"body":{"components/ErrorComponent.html":{}}}],["loadchildren",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem('expir",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('userid",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expir",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('userid",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expir",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('userid",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":230,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["login(email",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincompon",{"_index":80,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["map'},{'nam",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["map(postdata",{"_index":660,"title":{},"body":{"injectables/PostsService.html":{}}}],["map.modul",{"_index":480,"title":{},"body":{"injectables/MapService.html":{}}}],["mapbox",{"_index":478,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":477,"title":{},"body":{"injectables/MapService.html":{}}}],["mapcompon",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maps/map/map.compon",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mapservic",{"_index":443,"title":{"injectables/MapService.html":{}},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["marker",{"_index":449,"title":{},"body":{"injectables/MapService.html":{}}}],["markerpath",{"_index":448,"title":{},"body":{"injectables/MapService.html":{}}}],["mat_dialog_data",{"_index":352,"title":{},"body":{"components/ErrorComponent.html":{}}}],["matbuttonmodul",{"_index":13,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matcardmodul",{"_index":12,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["match",{"_index":25,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":360,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["matdialogmodul",{"_index":18,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["material.modul",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["material.module.t",{"_index":6,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matexpansionmodul",{"_index":15,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matinputmodul",{"_index":11,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matpaginatormodul",{"_index":17,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":16,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":14,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["maxpost",{"_index":665,"title":{},"body":{"injectables/PostsService.html":{}}}],["mean",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["meancours",{"_index":772,"title":{},"body":{"index.html":{}}}],["messag",{"_index":354,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["messagingsenderid",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["mime",{"_index":536,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["mimetyp",{"_index":535,"title":{},"body":{"components/PostCreateComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":824,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":509,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["modul",{"_index":0,"title":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{},"modules.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoos",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":809,"title":{},"body":{"index.html":{}}}],["multer",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["multi",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["navig",{"_index":784,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":143,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":203,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":219,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pip",{"_index":369,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":781,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ngmodul",{"_index":9,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{}}}],["ngondestroy",{"_index":403,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["nodemon",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["now.gettim",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["number",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["object",{"_index":679,"title":{},"body":{"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(mapboxgl",{"_index":482,"title":{},"body":{"injectables/MapService.html":{}}}],["observ",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["observable.cr",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["occur",{"_index":355,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["of(nul",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["okay",{"_index":357,"title":{},"body":{"components/ErrorComponent.html":{}}}],["onchangedpag",{"_index":588,"title":{},"body":{"components/PostListComponent.html":{}}}],["onchangedpage(pagedata",{"_index":593,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondelet",{"_index":589,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondelete(postid",{"_index":597,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondestroy",{"_index":398,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["onimagepick",{"_index":512,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["onimagepicked(ev",{"_index":519,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["onlogin",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogin(form",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsavepost",{"_index":513,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["onsignup",{"_index":687,"title":{},"body":{"components/SignupComponent.html":{}}}],["onsignup(form",{"_index":691,"title":{},"body":{"components/SignupComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":818,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":725,"title":{"dependencies.html":{}},"body":{}}],["pagedata",{"_index":596,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagedata.pageindex",{"_index":624,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagedata.pages",{"_index":626,"title":{},"body":{"components/PostListComponent.html":{}}}],["pageev",{"_index":594,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagesize=${postsperpage}&page=${currentpag",{"_index":658,"title":{},"body":{"injectables/PostsService.html":{}}}],["pagesizeopt",{"_index":584,"title":{},"body":{"components/PostListComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["parammap",{"_index":532,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parammap.get('postid",{"_index":549,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parammap.has('postid",{"_index":545,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parser",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":178,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pick",{"_index":578,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["pipe",{"_index":659,"title":{},"body":{"injectables/PostsService.html":{}}}],["pipe(map(chang",{"_index":489,"title":{},"body":{"injectables/MapService.html":{}}}],["pk.eyj1ijoidhdvzmfjzxjlbg9hzgvkiiwiysi6imnqbgpqznf5ddbjbwmzcg43yxnmztu4bg8ifq.pryi64e2nw3v3k7qnwz",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["point",{"_index":391,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["post",{"_index":64,"title":{"interfaces/Post.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post._id",{"_index":662,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.cont",{"_index":630,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["post.creat",{"_index":664,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.imagepath",{"_index":663,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.model",{"_index":533,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["post.servic",{"_index":534,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["post.titl",{"_index":629,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postcount",{"_index":620,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postcreatecompon",{"_index":84,"title":{"components/PostCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postdata",{"_index":672,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata._id",{"_index":552,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.append('cont",{"_index":675,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('id",{"_index":680,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('imag",{"_index":676,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('titl",{"_index":674,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.cont",{"_index":554,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.cr",{"_index":556,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.imagepath",{"_index":555,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.maxpost",{"_index":666,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.post",{"_index":623,"title":{},"body":{"components/PostListComponent.html":{}}}],["postdata.postcount",{"_index":622,"title":{},"body":{"components/PostListComponent.html":{}}}],["postdata.posts.map(post",{"_index":661,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.titl",{"_index":553,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postid",{"_index":510,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postlistcompon",{"_index":86,"title":{"components/PostListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["posts/post",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["posts/post.model",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["posts/posts.modul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["postsmodul",{"_index":102,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsperpag",{"_index":585,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postsservic",{"_index":511,"title":{"injectables/PostsService.html":{}},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["postssub",{"_index":586,"title":{},"body":{"components/PostListComponent.html":{}}}],["postsupd",{"_index":639,"title":{},"body":{"injectables/PostsService.html":{}}}],["privat",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["prod",{"_index":797,"title":{},"body":{"index.html":{}}}],["product",{"_index":799,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":773,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["properti",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["protractor",{"_index":146,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["providedin",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["public",{"_index":344,"title":{},"body":{"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["put(backend_url",{"_index":681,"title":{},"body":{"injectables/PostsService.html":{}}}],["queryparam",{"_index":657,"title":{},"body":{"injectables/PostsService.html":{}}}],["re",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiv",{"_index":637,"title":{},"body":{"modules/PostsModule.html":{}}}],["reactiveformsmodul",{"_index":636,"title":{},"body":{"modules/PostsModule.html":{}}}],["reader",{"_index":565,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.onload",{"_index":567,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.readasdataurl(fil",{"_index":570,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.result",{"_index":569,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["readm",{"_index":812,"title":{},"body":{"index.html":{}}}],["reload",{"_index":786,"title":{},"body":{"index.html":{}}}],["removemark",{"_index":455,"title":{},"body":{"injectables/MapService.html":{}}}],["removemarker(key",{"_index":468,"title":{},"body":{"injectables/MapService.html":{}}}],["req",{"_index":206,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clon",{"_index":215,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":217,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.messag",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["respons",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.expiresin",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.userid",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":24,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["root'},{'nam",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["rout",{"_index":153,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/PostCreateComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["routermodul",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{}}}],["routermodule.forchild(rout",{"_index":231,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module.t",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["run",{"_index":780,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/map",{"_index":481,"title":{},"body":{"injectables/MapService.html":{}}}],["rxjs/oper",{"_index":366,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["save",{"_index":579,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["saveauthdata",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffold",{"_index":789,"title":{},"body":{"index.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["serv",{"_index":782,"title":{},"body":{"index.html":{}}}],["server",{"_index":779,"title":{},"body":{"index.html":{}}}],["setauthtim",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(dur",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmarkergeojson",{"_index":456,"title":{},"body":{"injectables/MapService.html":{}}}],["setmarkergeojson(coordin",{"_index":470,"title":{},"body":{"injectables/MapService.html":{}}}],["settimeout",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["sign",{"_index":696,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":685,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":686,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcompon",{"_index":88,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snapshotchang",{"_index":488,"title":{},"body":{"injectables/MapService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.t",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mime",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post.service.t",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/angular",{"_index":5,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["src/app/app",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":175,"title":{},"body":{"interfaces/AuthData.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.t",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:13",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:16",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:106",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:116",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:123",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:129",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:13",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:135",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:14",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:15",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:29",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:37",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:49",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:81",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/signup.component.t",{"_index":684,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:12",{"_index":694,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:13",{"_index":688,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":693,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":690,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:24",{"_index":692,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:33",{"_index":689,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/error/error",{"_index":358,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/error/error.component.t",{"_index":341,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":351,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:12",{"_index":349,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:9",{"_index":348,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/header/header.component.t",{"_index":397,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:11",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:12",{"_index":405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:27",{"_index":406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/maps/map.modul.t",{"_index":378,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["src/app/maps/map.modul.ts:13",{"_index":396,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:14",{"_index":393,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:16",{"_index":395,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:25",{"_index":382,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["src/app/maps/map.modul.ts:26",{"_index":383,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["src/app/maps/map.service.t",{"_index":444,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/maps/map.service.ts:13",{"_index":476,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:14",{"_index":473,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:15",{"_index":474,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:16",{"_index":475,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:17",{"_index":459,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:30",{"_index":465,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:34",{"_index":463,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:38",{"_index":464,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:42",{"_index":462,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:46",{"_index":469,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:50",{"_index":471,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:54",{"_index":467,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map/map.component.t",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["src/app/posts/post",{"_index":504,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/posts/post.model.t",{"_index":499,"title":{},"body":{"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/posts/post.service.t",{"_index":638,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/posts/post.service.ts:103",{"_index":648,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:14",{"_index":656,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:15",{"_index":644,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:19",{"_index":652,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:50",{"_index":653,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:54",{"_index":650,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:64",{"_index":646,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:79",{"_index":655,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/posts.module.t",{"_index":635,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/environments/environment.t",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":771,"title":{"index.html":{}},"body":{}}],["state",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":794,"title":{},"body":{"index.html":{}}}],["string",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["subject",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["subscrib",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe((postdata",{"_index":619,"title":{},"body":{"components/PostListComponent.html":{}}}],["subscribe(authstatu",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(isauthent",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["subscribe(respons",{"_index":682,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscribe(responsedata",{"_index":677,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscribe(transformedpostdata",{"_index":667,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscript",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["support",{"_index":816,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":817,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":801,"title":{},"body":{"index.html":{}}}],["this.authlistenersub",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authlistenersubs.unsubscrib",{"_index":416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservic",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["this.authservice.autoauthus",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.createuser(form.value.email",{"_index":695,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.getauthstatuslisten",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.getisauth",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["this.authservice.gettoken",{"_index":209,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.getuserid",{"_index":615,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.authservice.login(form.value.email",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authstatuslistener.asobserv",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(fals",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(tru",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussub",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.authstatussub.unsubscrib",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.clearauthdata",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cord",{"_index":492,"title":{},"body":{"injectables/MapService.html":{}}}],["this.currentpag",{"_index":614,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.db.list(this.markerpath).push(data",{"_index":494,"title":{},"body":{"injectables/MapService.html":{}}}],["this.db.object(this.markerpath",{"_index":495,"title":{},"body":{"injectables/MapService.html":{}}}],["this.dialog.open(errorcompon",{"_index":374,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.errorservice.throwerror(errormessag",{"_index":375,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.form",{"_index":538,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.get('image').updatevalueandvalid",{"_index":564,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.invalid",{"_index":571,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.patchvalue({imag",{"_index":563,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.reset",{"_index":577,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.setvalu",{"_index":557,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.cont",{"_index":574,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.imag",{"_index":575,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.titl",{"_index":573,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.geometri",{"_index":390,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["this.getauthdata",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.http.delete(backend_url",{"_index":683,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.http.get(backend_url",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.http.post(backend_url",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.imagepreview",{"_index":568,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.isauthent",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isload",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.key",{"_index":487,"title":{},"body":{"injectables/MapService.html":{}}}],["this.logout",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mark",{"_index":485,"title":{},"body":{"injectables/MapService.html":{}}}],["this.mod",{"_index":546,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post",{"_index":551,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["this.post.cont",{"_index":559,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post.imagepath",{"_index":560,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post.titl",{"_index":558,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postid",{"_index":548,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsperpag",{"_index":625,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservic",{"_index":617,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.addpost",{"_index":572,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsservice.deletepost(postid).subscrib",{"_index":627,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.getpost(this.postid).subscribe((postdata",{"_index":550,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsservice.getposts(this.postsperpag",{"_index":613,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.updatepost",{"_index":576,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postssub",{"_index":616,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postssub.unsubscrib",{"_index":628,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsupdated.asobserv",{"_index":671,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postsupdated.next",{"_index":669,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":544,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.router.navig",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.router.navigate(['/login",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.saveauthdata(token",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresindur",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentim",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.totalpost",{"_index":621,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.userid",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{}}}],["this.userisauthent",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["throwerror",{"_index":367,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":376,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["titl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentim",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["totalpost",{"_index":587,"title":{},"body":{"components/PostListComponent.html":{}}}],["transformedpostdata.maxpost",{"_index":670,"title":{},"body":{"injectables/PostsService.html":{}}}],["transformedpostdata.post",{"_index":668,"title":{},"body":{"injectables/PostsService.html":{}}}],["tree",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":210,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.valid",{"_index":537,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["type.validator.t",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":678,"title":{},"body":{"injectables/PostsService.html":{}}}],["typeof(control.valu",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/mapbox",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["types/underscor",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["uint8array(filereader.result).subarray(0",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqu",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":800,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":372,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["unus",{"_index":212,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["up",{"_index":697,"title":{},"body":{"components/SignupComponent.html":{}}}],["updatepost",{"_index":643,"title":{},"body":{"injectables/PostsService.html":{}}}],["updatepost(id",{"_index":654,"title":{},"body":{"injectables/PostsService.html":{}}}],["us",{"_index":790,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{}}}],["userisauthent",{"_index":402,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["valid",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["validators.minlength(3",{"_index":541,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["validators.requir",{"_index":540,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["valu",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["variabl",{"_index":705,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":776,"title":{},"body":{"index.html":{}}}],["via",{"_index":803,"title":{},"body":{"index.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["work",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["ye",{"_index":394,"title":{},"body":{"classes/GeoJson.html":{},"components/PostListComponent.html":{}}}],["zone.j",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AngularMaterialModule.html":{"url":"modules/AngularMaterialModule.html","title":"module - AngularMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  AngularMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/angular-material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatDialogModule\n} from '@angular/material';\n\n@NgModule({\n  // automatic import by angular\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\nexport class AngularMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'mean-course'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Post } from './posts/post.model';\nimport { AuthService } from './auth/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'mean-course';\n\n  constructor(private authService: AuthService) {\n  }\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ErrorComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ErrorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                            \n                                     ErrorInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    PostsModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ErrorComponent } from './error/error.component';\n\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error/error-interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/posts.module';\nimport { MapComponent } from './maps/map/map.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    PostsModule,\n    HttpClientModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MapComponent } from './maps/map/map.component';\n\nconst routes: Routes = [\n  { path: 'list', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard]},\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'map', component: MapComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthData {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-interceptor.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest, next: HttpHandler) {\n      const authToken = this.authService.getToken();\n      // tslint:disable-next-line:no-unused-expression\n      const authRequest = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n      });\n      return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAuthModule -->\n\nAngularMaterialModule->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                createUser\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                getUserId\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoAuthUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nautoAuthUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clearAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearAuthData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { token: any; expirationDate: any; userId: any; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatusListener\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatusListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIsAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIsAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveAuthData(token: string, expirationDate: Date, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationDate\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setAuthTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAuthTimer(duration: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        duration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusListener:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenTimer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthData } from './auth-data.model';\n\nconst BACKEND_URL = environment.apiUrl + '/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http.post(BACKEND_URL + '/signup', authData).subscribe(\n      () => {\n        this.router.navigate(['/']);\n      },\n      error => {\n        this.authStatusListener.next(false);\n      }\n    );\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(\n        BACKEND_URL + '/login',\n        authData\n      )\n      .subscribe(\n        response => {\n          const token = response.token;\n          this.token = token;\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n            this.userId = response.userId;\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            console.log(expirationDate);\n            this.saveAuthData(token, expirationDate, this.userId);\n            this.router.navigate(['/']);\n          }\n        },\n        error => {\n          this.authStatusListener.next(false);\n        }\n      );\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.authStatusListener.next(true);\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n        this.http.get(BACKEND_URL + '/check').subscribe(response => {\n        const res: any = response;\n        if (res.message === 'Auth worked') {\n          console.log('Reauthenticated');\n        } else {\n          this.isAuthenticated = false;\n          this.authStatusListener.next(false);\n        }\n      });\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/']);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log('Setting timer: ' + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         An Error Occured \n\n   {{ data.message }} \n\n\n  Okay\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' An Error Occured    {{ data.message }}   Okay'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/error/error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error-interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error-interceptor.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { ErrorComponent } from './error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) { }\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An unknown error occurred!';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\n        // this.errorService.throwError(errorMessage);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeatureCollection.html":{"url":"classes/FeatureCollection.html","title":"class - FeatureCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeatureCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                features\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(features: Array)\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.modul.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        features\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            features\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        features:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FeatureCollection'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoJson.html":{"url":"classes/GeoJson.html","title":"class - GeoJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IGeoJson\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geometry\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(coordinates: , properties?: )\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.modul.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geometry:     IGeometry\n\n                    \n                \n                    \n                        \n                            Type :     IGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        properties:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Feature'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubs\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authListenerSubs:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userIsAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener()\n    .subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  Posts\n  \n  \n    \n      Map\n    \n    \n      New post\n    \n    \n      Login\n    \n    \n      Signup\n    \n    \n      Logout\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Posts              Map              New post              Login              Signup              Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoJson.html":{"url":"interfaces/IGeoJson.html","title":"interface - IGeoJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     IGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGeometry\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeometry.html":{"url":"interfaces/IGeometry.html","title":"interface - IGeometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeometry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coordinates\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                    \n                                \n                                \n                                    \n                                        coordinates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogin(form: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Please enter valid email\n    \n    \n      \n      Please enter a valid password.\n    \n    Login\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Please enter valid email                    Please enter a valid password.        Login  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cords\n                            \n                            \n                                    Private\n                                cordsPath\n                            \n                            \n                                keys\n                            \n                            \n                                    Private\n                                markerPath\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMarker\n                            \n                            \n                                getCords\n                            \n                            \n                                getKeys\n                            \n                            \n                                getMarker\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                removeMarker\n                            \n                            \n                                setMarkerGeoJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMarker(data: GeoJson)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    GeoJson\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCords\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetKeys()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMarker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveMarker(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMarkerGeoJson\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMarkerGeoJson(coordinates: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cords:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cordsPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cordsPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/cords\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/marker\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markers:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport * as mapboxgl from 'mapbox-gl';\nimport { GeoJson } from './map.modul';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MapService {\n  markers: AngularFireList;\n  cords: AngularFireList;\n  keys: Observable;\n  private markerPath = \"/marker\";\n  private cordsPath = \"/cords\";\n\n  constructor(private db: AngularFireDatabase) {\n    Object.getOwnPropertyDescriptor(mapboxgl, \"accessToken\").set(\n      environment.mapbox.accessToken\n    );\n    this.markers = db.list(this.markerPath);\n    this.keys = this.markers\n      .snapshotChanges()\n      .pipe(map(changes => changes.map(c => ({ key: c.key }))));\n    this.cords = db.list(this.cordsPath);\n  }\n\n  getMarker() {\n    return this.markers;\n  }\n\n  getCords() {\n    return this.cords;\n  }\n\n  getKeys() {\n    return this.keys;\n  }\n\n  createMarker(data: GeoJson) {\n    return this.db.list(this.markerPath).push(data);\n  }\n\n  removeMarker(key: string) {\n    return this.db.object(this.markerPath + \"/\" + key).remove();\n  }\n\n  setMarkerGeoJson(coordinates) {\n    return new GeoJson(coordinates);\n  }\n\n  private handleError(error) {\n    console.log(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/posts/post.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        id\n                                \n                                \n                                        imagePath\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n  id: string;\n  title: string;\n  content: string;\n  imagePath: string;\n  creator: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostCreateComponent.html":{"url":"components/PostCreateComponent.html","title":"component - PostCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/post-create/post-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-create\n            \n\n            \n                styleUrls\n                post-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-create.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                form\n                            \n                            \n                                imagePreview\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                mode\n                            \n                            \n                                post\n                            \n                            \n                                    Private\n                                postId\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImagePicked\n                            \n                            \n                                onSavePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postsService: PostsService, route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post-create/post-create.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsService\n                                                  \n                                                        \n                                                                    PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onImagePicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonImagePicked(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSavePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSavePost()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagePreview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imagePreview:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'create'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     Post\n\n                    \n                \n                    \n                        \n                            Type :     Post\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsService:     PostsService\n\n                    \n                \n                    \n                        \n                            Type :     PostsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { mimeType } from './mime-type.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  private mode = 'create';\n  private postId: string;\n  private authStatusSub: Subscription;\n  post: Post;\n  form: FormGroup;\n  isLoading = false;\n  imagePreview;\n\n  constructor(public postsService: PostsService, public route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n    .getAuthStatusListener()\n    .subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.form = new FormGroup({\n      'title': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\n      'content': new FormControl(null, { validators: [Validators.required] }),\n      'image': new FormControl(null, { validators: [Validators.required] , asyncValidators: [mimeType] })\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n        if (paramMap.has('postId')) {\n          this.mode = 'edit';\n          this.postId = paramMap.get('postId');\n          this.isLoading = true;\n          this.postsService.getPost(this.postId).subscribe((postData) => {\n            this.post = {\n              id: postData._id,\n              title: postData.title,\n              content: postData.content,\n              imagePath: postData.imagePath,\n              creator: postData.creator };\n            this.form.setValue({\n              title: this.post.title,\n              content: this.post.content,\n              image: this.post.imagePath\n            });\n            this.isLoading = false;\n          });\n        } else {\n          this.mode = 'create';\n          this.postId = null;\n        }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({image: file});\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n        );\n    }\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      \n        \n          Please enter post title\n      \n      \n        Pick Image\n        \n      \n      \n        \n      \n      \n        \n        Please enter post content\n      \n      Save Post\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Please enter post title                    Pick Image                                                        Please enter post content            Save Post    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostListComponent.html":{"url":"components/PostListComponent.html","title":"component - PostListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/post-list/post-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-list\n            \n\n            \n                styleUrls\n                post-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                currentPage\n                            \n                            \n                                isLoading\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                posts\n                            \n                            \n                                postsPerPage\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                    Private\n                                postsSub\n                            \n                            \n                                totalPosts\n                            \n                            \n                                userId\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangedPage\n                            \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postsService: PostsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post-list/post-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsService\n                                                  \n                                                        \n                                                                    PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangedPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangedPage(pageData: PageEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageData\n                                                        \n                                                                    PageEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDelete(postId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageSizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 2, 5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postsPerPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsPerPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsService:     PostsService\n\n                    \n                \n                    \n                        \n                            Type :     PostsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalPosts:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userIsAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor(public postsService: PostsService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postsSub = this.postsService\n      .getPostUpdateListener()\n      .subscribe((postData: { posts: Post[], postCount: number }) => {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService\n    .getAuthStatusListener()\n    .subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n0 && !isLoading\">\n  \n    \n      {{ post.title }}\n    \n    \n      \n    \n    {{ post.content }}\n    \n      EDIT\n      DELETE\n    \n  \n\n0\">\n\n\n  No post yes!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0 && !isLoading\">            {{ post.title }}                      {{ post.content }}          EDIT      DELETE      0\">  No post yes!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n  Modules\n  PostsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nPostCreateComponent\n\nPostCreateComponent\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostCreateComponent->PostsModule\n\n\n\n\n\nPostListComponent\n\nPostListComponent\n\nPostsModule -->\n\nPostListComponent->PostsModule\n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nPostsModule -->\n\nAngularMaterialModule->PostsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/posts/posts.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PostCreateComponent\n                            \n                            \n                                PostListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';   // reactive forms\n\n\nimport { PostCreateComponent } from './post-create/post-create.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    PostCreateComponent,\n    PostListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\nexport class PostsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/posts/post.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                posts\n                            \n                            \n                                    Private\n                                postsUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPost\n                            \n                            \n                                deletePost\n                            \n                            \n                                getPost\n                            \n                            \n                                getPosts\n                            \n                            \n                                getPostUpdateListener\n                            \n                            \n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPost\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPost(title: string, content: string, image: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        image\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePost\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePost(postId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPost\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPost(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPosts(postsPerPage: number, currentPage: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsPerPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        currentPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPostUpdateListener\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPostUpdateListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePost(id: string, title: string, content: string, image: File | string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        image\n                                                        \n                                                                    File | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postsUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsUpdated:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../environments/environment';\nimport { Post } from './post.model';\n\nconst BACKEND_URL = environment.apiUrl + '/posts/';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    this.http\n      .get(\n        BACKEND_URL + queryParams\n      )\n      .pipe(\n        map(postData => {\n          return {\n            posts: postData.posts.map(post => {\n              return {\n                title: post.title,\n                content: post.content,\n                id: post._id,\n                imagePath: post.imagePath,\n                creator: post.creator\n              };\n            }),\n            maxPosts: postData.maxPosts\n          };\n        })\n      )\n      .subscribe(transformedPostData => {\n        this.posts = transformedPostData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get(BACKEND_URL + id);\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.http\n      .post(\n        BACKEND_URL,\n        postData\n      )\n      .subscribe(responseData => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === 'object') {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSignup\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSignup(form: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener()\n    .subscribe(authStatus => {\n      this.isLoading = false;\n    });\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Please enter valid email\n    \n    \n      \n      Please enter a valid password.\n    \n    Sign up\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Please enter valid email                    Please enter a valid password.        Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth-data.model.ts\n            \n            \n                interface\n            \n            \n                AuthData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                variable\n            \n            \n                BACKEND_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                class\n            \n            \n                FeatureCollection\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                class\n            \n            \n                GeoJson\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                interface\n            \n            \n                IGeoJson\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                interface\n            \n            \n                IGeometry\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/maps/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/maps/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                src/app/posts/post-create/mime-type.validator.ts\n            \n            \n                variable\n            \n            \n                mimeType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/posts/post-create/post-create.component.ts\n            \n            \n                component\n            \n            \n                PostCreateComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/posts/post-list/post-list.component.ts\n            \n            \n                component\n            \n            \n                PostListComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/posts/post.model.ts\n            \n            \n                interface\n            \n            \n                Post\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/posts/post.service.ts\n            \n            \n                injectable\n            \n            \n                PostsService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/posts/post.service.ts\n            \n            \n                variable\n            \n            \n                BACKEND_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/fire : ^5.0.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @types/mapbox-gl : ^0.48.0\n        \n            @types/underscore : ^1.8.9\n        \n            angularfire2 : ^5.0.1\n        \n            bcrypt : ^3.0.0\n        \n            body-parser : ^1.18.3\n        \n            core-js : ^2.5.4\n        \n            dotenv : ^6.0.0\n        \n            express : ^4.16.3\n        \n            firebase : ^5.4.2\n        \n            jsonwebtoken : ^8.3.0\n        \n            mapbox-animation : ^0.16.3\n        \n            mapbox-gl : ^0.49.0-beta.1\n        \n            mongoose : ^5.2.13\n        \n            mongoose-unique-validator : ^2.0.1\n        \n            multer : ^1.3.1\n        \n            nodemon : ^1.18.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeanCourse\nThis project was generated with Angular CLI version 6.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nAngularMaterialModule->PostsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAngularMaterialModule->AuthModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nPostCreateComponent\n\nPostCreateComponent\n\nPostsModule -->\n\nPostCreateComponent->PostsModule\n\n\n\n\n\nPostListComponent\n\nPostListComponent\n\nPostsModule -->\n\nPostListComponent->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BACKEND_URL   (src/.../auth.service.ts)\n                        \n                        \n                            BACKEND_URL   (src/.../post.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mimeType   (src/.../mime-type.validator.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BACKEND_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user'\n                        \n                    \n\n\n            \n        \n\n    src/app/posts/post.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BACKEND_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/posts/'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api',\n\n  firebase: {\n    apiKey: 'AIzaSyA5VBlvbTD_Gtl9IwgJc1vdGDZF24K9X5c',\n    authDomain: 'diplomarbeit-9dd8c.firebaseapp.com',\n    databaseURL: 'https://diplomarbeit-9dd8c.firebaseio.com',\n    projectId: 'diplomarbeit-9dd8c',\n    storageBucket: 'diplomarbeit-9dd8c.appspot.com',\n    messagingSenderId: '532004071803'\n  },\n\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoidHdvZmFjZXJlbG9hZGVkIiwiYSI6ImNqbGpqZnF5dDBjbWMzcG43YXNmZTU4bG8ifQ.PrYi64e2Nw3V3K7qNWz-Cg'\n  },\n\n  googleMapsKey: 'AIzaSyAYgLWmXlH_hSdXG0irotKfKyRblx8ayiQ'\n\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/posts/post-create/mime-type.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     \n\n                    \n                \n                    \n                        \n                            Default value : (\n  control: AbstractControl\n): Promise | Observable => {\n  if (!control.value || typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer) => {\n      fileReader.addEventListener('loadend', () => {\n        const arr = new Uint8Array(fileReader.result).subarray(0, 4);\n        let header = '';\n        let isValid = false;\n        for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
