var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/modules/AngularMaterialModule.html",[0,0.8,1,1.539]],["body/modules/AngularMaterialModule.html",[0,1.108,1,2.598,2,0.351,3,0.299,4,0.2,5,4.4,6,4.4,7,0.938,8,0.031,9,2.598,10,0.713,11,5.363,12,5.363,13,5.363,14,5.363,15,5.363,16,5.363,17,5.363,18,5.363,19,2.568,20,3.68,21,2.568,22,0.365,23,0.2,24,0.025,25,0.025]],["title/components/AppComponent.html",[26,0.566,27,1.104]],["body/components/AppComponent.html",[2,0.267,3,0.228,4,0.152,7,0.824,8,0.031,10,0.543,22,0.228,23,0.152,24,0.021,25,0.021,26,1.011,27,1.889,28,1.622,29,1.622,30,1.622,31,2.801,32,1.229,33,2.463,34,1.622,35,3.009,36,2.539,37,2.628,38,2.18,39,4.502,40,2.18,41,4.502,42,0.443,43,1.229,44,2.634,45,0.843,46,1.775,47,2.03,48,1.043,49,3.349,50,0.843,51,1.178,52,0.492,53,0.776,54,3.349,55,0.843,56,1.261,57,1.389,58,3.349,59,2.17,60,1.261,61,3.349,62,1.163,63,2.18,64,2,65,2.18,66,2.634,67,1.622,68,1.622,69,1.074,70,1.622,71,1.163,72,1.622,73,1.074,74,1.622,75,1.163,76,1.622,77,1.074,78,1.622,79,1.074,80,1.622,81,1.074,82,1.368,83,1.622]],["title/modules/AppModule.html",[0,0.8,84,2.059]],["body/modules/AppModule.html",[0,0.926,1,2.58,2,0.201,3,0.171,4,0.114,7,1.024,8,0.032,9,1.781,10,0.407,21,1.466,22,0.25,23,0.114,24,0.017,25,0.017,27,2.084,36,1.026,62,0.872,69,1.809,71,1.85,75,1.85,84,4.137,85,1.331,86,2.819,87,2.819,88,2.976,89,2.1,90,2.1,91,2.1,92,2.1,93,2.1,94,3.109,95,3.109,96,3.451,97,3.451,98,2.383,99,1.627,100,1.466,101,1.829,102,3.677,103,3.677,104,3.075,105,1.627,106,3.677,107,2.511,108,3.677,109,4.351,110,1.466,111,3.075,112,1.216,113,1.331,114,1.627,115,2.511,116,2.1,117,3.677,118,2.1,119,2.511,120,2.511,121,2.511,122,2.1,123,2.511,124,2.146,125,2.511,126,2.1,127,1.829,128,2.511,129,2.511,130,3.17,131,2.511,132,2.511,133,2.511,134,2.1,135,2.1,136,2.679,137,1.026,138,2.1,139,2.1,140,2.1,141,3.075,142,2.1,143,2.1,144,2.1,145,2.1,146,2.1,147,2.1,148,3.075,149,1.466,150,2.1,151,1.115,152,2.511,153,2.511,154,3.677,155,3.677,156,1.781]],["title/classes/AppPage.html",[23,0.145,157,2.315]],["body/classes/AppPage.html",[2,0.35,3,0.298,4,0.2,7,0.711,8,0.031,22,0.298,23,0.243,24,0.025,25,0.025,37,2.56,42,0.58,43,1.462,48,1.24,55,1.514,64,1.948,105,2.842,157,3.9,158,3.668,159,6.016,160,6.016,161,4.386,162,4.386,163,3.668,164,4.386,165,4.386,166,4.386]],["title/modules/AppRoutingModule.html",[0,0.8,94,1.855]],["body/modules/AppRoutingModule.html",[0,0.955,2,0.303,3,0.258,4,0.173,7,0.998,8,0.032,9,2.366,10,0.615,22,0.332,23,0.173,24,0.023,25,0.023,26,1.017,75,1.697,77,1.733,79,1.567,88,2.214,94,2.852,122,3.172,137,1.549,167,3.793,168,3.172,169,3.56,170,2.618,171,1.685,172,4.886,173,2.457,174,3.172,175,2.457,176,3.172,177,4.159,178,3.793,179,4.941,180,3.172,181,3.172,182,4.086,183,3.793,184,2.763,185,3.793,186,3.793,187,2.457,188,3.793]],["title/interfaces/AuthData.html",[189,1.019,190,2.059]],["body/interfaces/AuthData.html",[2,0.366,3,0.311,4,0.208,8,0.03,22,0.311,24,0.026,25,0.026,42,0.606,52,0.807,189,1.762,190,3.561,191,2.968,192,3.831,193,1.383,194,3.956,195,3.956,196,1.876]],["title/guards/AuthGuard.html",[177,2.315,197,2.315]],["body/guards/AuthGuard.html",[2,0.29,3,0.247,4,0.165,7,0.91,8,0.032,10,0.588,22,0.247,23,0.165,24,0.023,25,0.023,32,0.991,42,0.48,43,1.297,45,0.913,46,1.924,47,2.076,48,1.1,50,1.195,51,1.1,52,0.697,53,1.1,55,1.195,60,1.366,137,1.483,170,2.3,171,1.612,177,3.459,182,4.873,197,2.644,198,3.629,199,4.437,200,3.629,201,3.629,202,5.614,203,5.292,204,5.614,205,3.629,206,3.971,207,3.855,208,3.971,209,1.522,210,1.26,211,2.351,212,1.483,213,3.855,214,2.644,215,3.629]],["title/interceptors/AuthInterceptor.html",[96,2.059,124,1.855]],["body/interceptors/AuthInterceptor.html",[2,0.302,3,0.257,4,0.172,7,0.875,8,0.031,10,0.613,22,0.257,23,0.172,24,0.023,25,0.023,32,1.033,42,0.5,43,1.332,45,0.952,46,2.005,47,2.099,48,1.13,50,1.228,51,1.13,52,0.716,53,1.13,55,1.228,60,1.424,96,3.16,110,2.207,124,2.207,137,1.993,191,3.498,209,1.564,211,2.451,216,3.163,217,4.079,218,3.782,219,4.079,220,4.77,221,4.515,222,4.77,223,3.782,224,3.163,225,4.079,226,4.877,227,3.782,228,3.782,229,3.782,230,2.755,231,3.782,232,3.782,233,3.782]],["title/modules/AuthModule.html",[0,0.8,234,2.059]],["body/modules/AuthModule.html",[0,1.208,1,2.908,2,0.295,3,0.251,4,0.168,7,1.016,8,0.031,9,2.324,10,0.598,21,2.153,22,0.326,23,0.168,24,0.023,25,0.023,62,1.281,73,1.925,81,1.925,85,1.955,86,3.457,87,2.39,88,2.153,98,3.11,99,2.39,100,2.153,111,4.013,112,1.786,126,3.085,127,2.687,184,2.687,234,4.151,235,3.085,236,3.085,237,3.085,238,3.504,239,3.689,240,4.013,241,2.687,242,3.085,243,3.085]],["title/modules/AuthRoutingModule.html",[0,0.8,238,1.855]],["body/modules/AuthRoutingModule.html",[0,1.059,2,0.336,3,0.286,4,0.191,7,0.988,8,0.032,9,2.527,10,0.682,22,0.355,23,0.191,24,0.025,25,0.025,26,0.929,73,1.673,81,1.673,82,1.719,137,1.719,168,3.519,169,3.801,170,2.747,171,1.869,179,4.364,191,2.727,238,3.046,242,3.519,243,3.519,244,2.727,245,4.208]],["title/injectables/AuthService.html",[47,1.104,209,1.019]],["body/injectables/AuthService.html",[2,0.127,3,0.108,4,0.072,7,0.717,8,0.032,10,0.258,22,0.108,23,0.072,24,0.012,25,0.012,37,0.93,42,0.211,43,0.706,45,0.401,47,0.898,48,1.343,50,1.04,51,0.957,52,0.713,53,0.957,55,1.472,56,1.755,57,0.435,60,0.6,82,0.651,110,0.93,113,0.844,114,1.032,137,2.269,149,0.93,151,1.45,156,1.252,171,0.707,184,1.883,190,2.867,193,0.651,194,2.867,195,3.342,196,1.803,199,3.396,206,1.332,209,1.046,210,0.553,212,2.508,244,2.115,246,1.16,247,3.756,248,2.737,249,5.553,250,3.756,251,4.5,252,3.756,253,3.756,254,2.585,255,3.756,256,2.434,257,3.756,258,3.756,259,3.756,260,3.142,261,2.585,262,2.585,263,1.332,264,3.142,265,2.585,266,2.162,267,1.593,268,1.593,269,2.585,270,1.593,271,1.593,272,5.019,273,1.593,274,1.593,275,1.593,276,1.593,277,2.585,278,1.593,279,1.593,280,2.585,281,4.424,282,1.593,283,2.585,284,1.581,285,1.593,286,3.264,287,0.898,288,0.898,289,1.965,290,2.729,291,1.593,292,1.593,293,1.593,294,1.593,295,1.593,296,1.675,297,1.16,298,1.332,299,1.16,300,3.756,301,3.756,302,3.454,303,1.593,304,1.593,305,1.593,306,2.729,307,1.675,308,3.264,309,1.332,310,1.593,311,2.585,312,1.593,313,2.585,314,1.593,315,1.593,316,1.593,317,2.585,318,2.585,319,2.585,320,3.264,321,1.593,322,1.593,323,2.585,324,1.593,325,2.585,326,1.593,327,1.593,328,1.332,329,1.593,330,1.593,331,1.593,332,1.593,333,1.593,334,1.593,335,1.593,336,2.585,337,1.883,338,1.593,339,1.593,340,1.593,341,1.593,342,1.593,343,1.593,344,1.593,345,1.593,346,1.593,347,1.593,348,1.593,349,1.593,350,1.593,351,1.593,352,1.593,353,1.593,354,1.593]],["title/components/ErrorComponent.html",[26,0.566,69,1.019]],["body/components/ErrorComponent.html",[2,0.249,3,0.212,4,0.142,7,0.696,8,0.031,10,0.506,19,1.823,22,0.212,23,0.142,24,0.02,25,0.02,26,0.987,27,1.085,28,1.513,29,1.513,30,1.513,32,1.172,33,2.376,34,1.513,35,2.969,36,2.505,38,2.079,40,2.079,42,0.413,43,1.172,44,2.559,45,0.786,48,1.137,50,0.786,51,1.137,52,0.84,53,0.724,55,0.786,56,1.176,57,1.172,62,1.085,63,2.079,64,1.907,65,2.079,66,2.559,67,1.513,68,1.513,69,1.694,70,1.513,71,1.085,72,1.513,73,1.001,74,1.513,75,1.085,76,1.513,77,1.001,78,1.513,79,1.001,80,1.513,81,1.001,82,1.276,83,1.513,193,1.081,196,0.924,209,1.377,307,3.423,355,2.612,356,4.294,357,4.294,358,2.376,359,4.035,360,3.123,361,5.283,362,3.123,363,3.123,364,3.123,365,3.123,366,3.123,367,3.123,368,2.612,369,3.591,370,4.294,371,4.294]],["title/interceptors/ErrorInterceptor.html",[97,2.059,124,1.855]],["body/interceptors/ErrorInterceptor.html",[2,0.28,3,0.238,4,0.159,7,0.96,8,0.032,10,0.568,19,2.046,22,0.238,23,0.159,24,0.022,25,0.022,32,0.957,42,0.464,43,1.267,45,0.882,48,1.075,50,1.168,51,1.075,52,0.682,53,1.075,55,1.31,60,1.32,69,1.124,97,3.008,110,2.046,124,2.046,209,1.488,210,1.218,216,2.932,217,3.882,219,3.882,220,4.632,221,4.352,222,4.632,224,2.932,225,3.882,307,2.272,359,2.554,368,2.932,369,2.932,372,5.204,373,3.506,374,5.539,375,3.506,376,4.642,377,3.506,378,4.642,379,3.506,380,2.932,381,3.506,382,3.506,383,3.506,384,3.506,385,5.204,386,4.642,387,3.506,388,3.506]],["title/classes/FeatureCollection.html",[23,0.145,389,1.685]],["body/classes/FeatureCollection.html",[2,0.297,3,0.253,4,0.169,8,0.031,22,0.385,23,0.244,24,0.023,25,0.023,32,1.016,42,0.492,45,0.936,48,1.241,50,0.936,51,0.862,52,0.936,53,0.862,189,1.547,193,1.426,196,1.677,284,1.801,287,1.292,288,1.292,358,2.594,389,3.004,390,2.171,391,3.899,392,3.719,393,3.805,394,4.825,395,3.719,396,2.839,397,3.126,398,2.558,399,3.126,400,1.801,401,2.41,402,2.41,403,2.41,404,1.972]],["title/classes/GeoJson.html",[23,0.145,400,1.539]],["body/classes/GeoJson.html",[2,0.288,3,0.245,4,0.164,8,0.031,22,0.381,23,0.24,24,0.022,25,0.022,32,1.292,42,0.477,45,0.908,48,1.298,50,0.908,51,0.836,52,0.925,53,1.223,189,1.517,193,1.571,196,1.658,284,1.748,287,1.254,288,1.254,358,2.556,389,2.508,390,2.107,391,3.42,393,2.339,396,3.084,397,3.27,398,2.798,399,3.769,400,2.291,401,3.066,402,2.339,403,2.339,404,1.914,405,4.731,406,3.019,407,3.609,408,3.609]],["title/components/HeaderComponent.html",[26,0.566,71,1.104]],["body/components/HeaderComponent.html",[2,0.222,3,0.189,4,0.127,7,0.747,8,0.031,10,0.451,22,0.189,23,0.127,24,0.019,25,0.019,26,0.945,27,0.966,28,1.347,29,1.347,30,1.347,32,1.081,33,2.232,34,1.347,35,2.899,36,2.446,38,1.917,40,1.917,42,0.368,43,1.081,44,2.432,45,0.7,46,1.474,47,1.916,48,1.278,50,0.7,51,1.068,52,0.581,53,0.644,55,1.16,56,1.735,57,1.506,59,1.802,60,1.047,62,0.966,63,1.917,64,1.758,65,1.917,66,2.432,67,1.347,68,1.347,69,0.892,70,1.347,71,1.744,72,1.347,73,0.892,74,1.347,75,0.966,76,1.347,77,0.892,78,1.347,79,0.892,80,1.347,81,0.892,82,1.883,83,1.347,151,1.758,187,2.565,193,0.996,210,0.966,212,1.883,213,3.659,214,2.026,230,2.884,244,2.565,248,2.026,260,3.311,287,0.966,288,0.966,289,1.758,409,2.326,410,2.69,411,3.959,412,3.959,413,5.022,414,2.931,415,5.022,416,3.959,417,2.781,418,2.781,419,2.781,420,2.931,421,2.781,422,3.311,423,2.781,424,2.326,425,2.326,426,2.781,427,2.781]],["title/interfaces/IGeoJson.html",[189,1.019,398,1.685]],["body/interfaces/IGeoJson.html",[2,0.31,3,0.264,4,0.177,8,0.031,22,0.391,23,0.226,24,0.024,25,0.024,32,1.06,42,0.513,52,0.942,53,1.149,189,1.752,193,1.557,196,1.704,284,1.879,358,1.879,389,2.629,390,2.265,391,3.213,393,2.514,396,3.155,397,3.189,398,2.897,399,3.856,400,1.879,401,2.514,402,2.514,403,2.514,404,2.057]],["title/interfaces/IGeometry.html",[189,1.019,396,1.685]],["body/interfaces/IGeometry.html",[2,0.316,3,0.269,4,0.18,8,0.031,22,0.394,23,0.228,24,0.024,25,0.024,32,1.081,42,0.524,52,0.939,189,1.769,193,1.46,196,1.717,284,2.672,358,1.918,389,2.663,390,2.311,391,3.255,393,2.566,396,3.076,397,3.571,398,2.663,399,3.255,400,1.918,401,2.566,402,2.566,403,2.566,404,2.099]],["title/components/LoginComponent.html",[26,0.566,73,1.019]],["body/components/LoginComponent.html",[2,0.212,3,0.18,4,0.121,7,0.797,8,0.031,10,0.43,22,0.18,23,0.121,24,0.018,25,0.018,26,0.929,27,0.922,28,1.286,29,1.286,30,1.286,32,1.046,33,2.175,34,1.286,35,2.87,36,2.421,38,1.854,40,1.854,42,0.351,43,1.046,44,2.381,45,0.668,46,1.407,47,1.886,48,1.258,50,0.964,51,1.139,52,0.66,53,0.887,55,1.237,56,1.691,57,1.046,60,1,62,0.922,63,1.854,64,1.701,65,1.854,66,2.381,67,1.286,68,1.286,69,0.851,70,1.286,71,0.922,72,1.286,73,1.576,74,1.286,75,0.922,76,1.286,77,0.851,78,1.286,79,0.851,80,1.286,81,0.851,82,1.085,83,1.286,112,1.286,151,1.995,156,1.286,193,0.964,194,2.481,195,2.481,210,0.922,211,1.72,212,1.835,244,3.186,256,1.72,287,0.922,288,0.922,410,2.621,414,2.87,420,2.87,428,2.22,429,3.829,430,3.829,431,3.186,432,3.186,433,3.829,434,3.829,435,2.655,436,2.655,437,3.829,438,4.112,439,2.655,440,1.72,441,2.655,442,1.72,443,1.934,444,1.934,445,2.481,446,2.22,447,2.655,448,2.22,449,1.72,450,3.582,451,3.582,452,3.186]],["title/injectables/MapService.html",[209,1.019,453,2.315]],["body/injectables/MapService.html",[2,0.196,3,0.167,4,0.112,7,0.885,8,0.032,10,0.397,22,0.167,23,0.112,24,0.017,25,0.017,37,1.431,42,0.324,43,0.987,45,0.617,48,1.397,50,1.271,51,1.169,52,0.823,53,1.169,55,1.518,56,0.923,60,0.923,113,1.3,114,1.589,118,2.05,187,1.589,193,0.909,196,1.616,207,3.449,209,1.376,210,0.852,212,2.338,287,1.255,288,1.255,289,1.089,299,1.786,307,1.589,359,1.786,397,1.431,400,2.293,453,2.632,454,2.05,455,5.281,456,4.735,457,5.281,458,4.735,459,5.281,460,3.613,461,4.735,462,4.735,463,4.735,464,3.613,465,3.613,466,3.613,467,2.452,468,4.735,469,3.613,470,3.613,471,3.613,472,2.452,473,2.452,474,2.452,475,2.452,476,3.613,477,2.452,478,3.613,479,2.452,480,3.613,481,2.452,482,5.461,483,2.452,484,2.452,485,2.452,486,2.452,487,2.452,488,1.786,489,2.05,490,2.452,491,2.452,492,2.452,493,2.452,494,2.452,495,4.291,496,2.452,497,3.613,498,2.452,499,2.452,500,2.452,501,2.452,502,3.613,503,2.452,504,2.452,505,2.452,506,2.452,507,2.452,508,2.452]],["title/interfaces/Post.html",[57,0.868,189,1.019]],["body/interfaces/Post.html",[2,0.336,3,0.286,4,0.191,8,0.03,22,0.286,24,0.025,25,0.025,42,0.557,52,0.895,57,1.425,189,1.673,193,1.313,196,1.95,509,3.519,510,4.32,511,4.32,512,4.32,513,4.32,514,4.32]],["title/components/PostCreateComponent.html",[26,0.566,77,1.019]],["body/components/PostCreateComponent.html",[2,0.133,3,0.113,4,0.153,7,0.826,8,0.032,9,0.807,10,0.435,22,0.113,23,0.076,24,0.013,25,0.013,26,0.753,27,0.578,28,0.807,29,0.807,30,0.807,32,0.732,33,1.629,34,0.807,35,2.534,36,2.138,38,1.298,40,1.298,42,0.22,43,0.732,44,1.867,45,0.419,47,1.649,48,1.301,50,0.675,51,0.893,52,0.749,53,0.621,55,1.064,56,1.452,57,1.642,59,1.079,62,0.578,63,1.298,64,1.191,65,1.298,66,1.867,67,0.807,68,0.807,69,0.534,70,0.807,71,0.578,72,0.807,73,0.534,74,0.807,75,0.578,76,0.807,77,1.236,78,0.807,79,0.534,80,0.807,81,0.534,82,0.68,83,0.807,112,0.807,137,1.095,151,1.713,156,1.298,170,2.187,171,0.74,175,3.682,181,3.777,193,0.675,196,1.251,210,0.578,212,2.138,256,1.079,287,0.931,288,0.931,289,1.877,337,1.213,358,2.047,404,0.883,410,1.964,414,2.251,420,2.251,431,2.499,432,2.499,440,2.499,442,1.079,443,1.213,444,1.213,445,2.499,449,1.079,450,2.809,451,2.809,452,2.499,510,3.079,511,1.213,512,1.213,513,1.213,514,3.079,515,3.682,516,1.393,517,2.681,518,2.681,519,3.856,520,3.856,521,2.809,522,3.121,523,2.681,524,3.856,525,1.393,526,4.516,527,2.681,528,1.665,529,1.665,530,2.681,531,3.856,532,1.665,533,1.665,534,1.665,535,4.227,536,1.665,537,1.665,538,1.665,539,1.665,540,1.665,541,2.681,542,1.665,543,2.681,544,1.213,545,1.393,546,1.953,547,1.665,548,1.665,549,1.665,550,3.364,551,3.364,552,1.665,553,3.225,554,1.665,555,1.665,556,1.665,557,3.364,558,1.393,559,3.364,560,1.665,561,1.665,562,1.213,563,1.665,564,1.665,565,1.665,566,1.665,567,1.665,568,1.665,569,1.665,570,1.665,571,1.665,572,1.665,573,1.665,574,1.665,575,1.665,576,1.665,577,1.393,578,1.665,579,1.665,580,1.665,581,1.665,582,1.665,583,1.665,584,2.681,585,2.681,586,2.681,587,1.665,588,1.665,589,2.681,590,2.681]],["title/components/PostListComponent.html",[26,0.566,79,1.019]],["body/components/PostListComponent.html",[2,0.137,3,0.116,4,0.078,7,0.741,8,0.032,10,0.278,19,0.999,22,0.116,23,0.078,24,0.013,25,0.013,26,0.763,27,0.595,28,0.829,29,0.829,30,0.829,32,0.748,33,1.66,34,0.829,35,2.556,36,2.156,38,1.327,40,1.327,42,0.226,43,0.748,44,1.897,45,0.431,47,1.668,48,1.339,50,0.863,51,0.993,52,0.806,53,0.794,55,0.986,56,1.475,57,1.63,59,1.109,62,0.595,63,1.327,64,1.217,65,1.327,66,1.897,67,0.829,68,0.829,69,0.549,70,0.829,71,0.595,72,0.829,73,0.549,74,0.829,75,0.595,76,0.829,77,0.549,78,0.829,79,1.256,80,0.829,81,0.549,82,0.7,83,0.829,149,2.669,151,2.031,156,1.66,173,3.78,180,2.292,193,0.69,196,1.353,210,0.595,212,1.962,213,2.854,214,1.247,248,1.247,251,3.276,256,1.109,284,2.325,287,1.668,288,1.668,302,2.292,358,1.327,404,0.908,406,2.292,410,2,414,2.287,420,2.802,422,2.292,425,1.432,431,2.539,432,2.963,442,1.109,443,1.247,445,2.777,449,1.109,515,3.78,521,1.247,522,3.146,525,1.432,544,1.247,545,1.432,558,2.292,562,1.247,591,1.432,592,2.741,593,2.741,594,3.276,595,3.918,596,3.276,597,3.918,598,3.918,599,2.741,600,2.741,601,2.741,602,1.712,603,1.712,604,2.741,605,3.918,606,1.712,607,1.712,608,2.741,609,1.712,610,3.584,611,1.712,612,1.712,613,2.741,614,3.918,615,2.741,616,1.712,617,1.712,618,1.712,619,1.712,620,1.712,621,1.712,622,1.712,623,1.712,624,3.427,625,3.918,626,1.712,627,1.712,628,1.432,629,1.712,630,1.432,631,1.712,632,1.712,633,1.712,634,2.741,635,1.712,636,1.712,637,1.712,638,1.712,639,1.712,640,2.292,641,2.292,642,2.741]],["title/modules/PostsModule.html",[0,0.8,95,1.855]],["body/modules/PostsModule.html",[0,1.201,1,2.901,2,0.292,3,0.249,4,0.166,7,1.014,8,0.032,9,2.312,10,0.593,21,2.135,22,0.325,23,0.166,24,0.023,25,0.023,57,1.303,62,1.271,77,1.921,79,1.921,85,1.94,86,3.443,87,2.371,88,2.135,95,3.685,98,3.093,99,2.371,100,2.135,112,1.772,127,2.665,169,3.477,171,1.625,173,2.371,174,3.06,175,2.371,176,3.06,240,3.992,241,2.665,440,2.371,643,3.06,644,3.06,645,3.658,646,3.658,647,4.773,648,3.658]],["title/injectables/PostsService.html",[209,1.019,522,1.855]],["body/injectables/PostsService.html",[2,0.162,3,0.138,4,0.233,7,0.83,8,0.032,10,0.328,22,0.138,23,0.092,24,0.015,25,0.015,37,1.181,42,0.268,43,0.854,45,0.509,48,1.257,50,1.235,51,1.137,52,0.751,53,1.137,55,1.419,56,1.438,57,1.583,60,0.762,110,1.181,113,1.073,114,1.311,137,1.561,171,0.899,187,1.311,193,0.787,196,1.848,199,3.728,209,1.225,210,0.703,212,2.091,263,1.693,264,3.593,266,2.614,284,2.377,287,1.086,288,1.086,289,1.908,290,3.194,296,2.475,297,1.474,299,1.474,306,2.614,309,3.194,328,1.693,337,1.474,380,1.693,510,4.108,511,2.277,512,3.85,513,2.277,514,4.108,521,2.277,522,1.825,544,1.474,553,4.634,562,2.277,594,3.194,596,1.693,628,3.593,630,1.693,640,1.693,641,1.693,649,1.474,650,4.296,651,3.126,652,3.126,653,4.296,654,3.126,655,3.126,656,3.126,657,2.024,658,3.126,659,2.024,660,3.126,661,2.024,662,3.126,663,2.024,664,2.024,665,3.126,666,2.024,667,2.024,668,3.126,669,2.024,670,2.024,671,2.024,672,2.024,673,2.024,674,2.024,675,2.024,676,2.024,677,2.024,678,2.024,679,2.024,680,2.024,681,2.024,682,2.024,683,4.909,684,3.82,685,3.126,686,3.126,687,3.126,688,2.024,689,2.024,690,1.693,691,2.024,692,2.024,693,2.024,694,2.024]],["title/components/SignupComponent.html",[26,0.566,81,1.019]],["body/components/SignupComponent.html",[2,0.212,3,0.18,4,0.121,7,0.796,8,0.031,10,0.43,22,0.18,23,0.121,24,0.018,25,0.018,26,0.928,27,0.92,28,1.283,29,1.283,30,1.283,32,1.044,33,2.173,34,1.283,35,2.869,36,2.42,38,1.852,40,1.852,42,0.351,43,1.044,44,2.379,45,0.667,46,1.405,47,1.885,48,1.257,50,0.962,51,1.138,52,0.659,53,0.886,55,1.236,56,1.689,57,1.044,60,0.998,62,0.92,63,1.852,64,1.698,65,1.852,66,2.379,67,1.283,68,1.283,69,0.85,70,1.283,71,0.92,72,1.283,73,0.85,74,1.283,75,0.92,76,1.283,77,0.85,78,1.283,79,0.85,80,1.283,81,1.575,82,1.833,83,1.283,112,1.283,151,1.993,156,1.283,193,0.962,194,2.478,195,2.478,210,0.92,211,1.717,212,1.833,287,0.92,288,0.92,410,2.619,414,2.867,420,2.867,424,2.216,431,3.183,432,3.183,438,4.108,440,1.717,442,1.717,444,1.93,445,2.478,446,2.216,448,2.216,449,1.717,450,3.578,451,3.578,452,3.183,695,2.216,696,3.824,697,3.824,698,3.824,699,3.824,700,2.65,701,2.65,702,3.824,703,2.65,704,2.65,705,2.65,706,3.824,707,3.824]],["title/coverage.html",[708,3.633]],["body/coverage.html",[4,0.143,8,0.031,23,0.224,24,0.021,25,0.021,26,1.066,27,1.095,31,2.637,47,1.095,52,0.463,57,0.861,69,1.011,71,1.095,73,1.011,75,1.095,77,1.011,79,1.011,81,1.011,101,2.297,113,1.671,130,2.297,149,3.827,157,2.297,158,2.637,173,2.043,175,2.043,189,1.701,190,2.043,191,2.043,192,2.637,209,1.581,246,3.148,289,1.4,296,2.8,355,2.637,389,1.671,390,3.096,396,1.671,398,1.671,400,1.527,409,2.637,428,2.637,453,2.297,454,2.637,509,2.637,515,3.195,516,2.637,522,1.84,546,2.297,591,2.637,649,3.148,695,2.637,708,2.637,709,3.153,710,3.153,711,3.153,712,5.304,713,4.281,714,5.877,715,3.153,716,4.93,717,4.93,718,3.153,719,3.153,720,3.153,721,3.153,722,2.637,723,2.637,724,3.153,725,3.153,726,3.153,727,3.153,728,2.637,729,3.614,730,2.637,731,2.637,732,3.153,733,3.153]],["title/dependencies.html",[85,2.027,734,2.65]],["body/dependencies.html",[8,0.032,10,0.588,19,2.118,24,0.023,25,0.023,85,1.924,104,3.971,105,3.077,112,1.757,116,3.035,134,3.035,135,3.035,136,2.644,171,1.612,210,1.26,241,2.644,452,2.351,488,3.459,489,3.971,735,3.629,736,6.247,737,3.629,738,3.629,739,3.629,740,3.629,741,3.629,742,3.629,743,3.629,744,3.629,745,3.629,746,3.629,747,3.629,748,3.629,749,3.629,750,3.629,751,3.629,752,3.629,753,3.629,754,3.629,755,3.629,756,3.629,757,3.629,758,3.629,759,4.748,760,3.629,761,3.629,762,3.035,763,3.629,764,3.629,765,3.629,766,3.629,767,3.629,768,3.629,769,3.629,770,4.748,771,3.629,772,3.629,773,3.629,774,3.629,775,3.629,776,3.629,777,3.629,778,3.629,779,3.629,780,3.629,781,3.629,782,3.629]],["title/index.html",[42,0.351,783,2.65,784,2.65]],["body/index.html",[3,0.259,4,0.174,8,0.023,20,3.19,21,3.164,24,0.023,25,0.023,26,0.966,36,1.558,51,0.884,100,2.226,163,3.19,289,1.694,785,3.814,786,4.904,787,5.721,788,5.42,789,3.814,790,3.814,791,3.814,792,4.904,793,6.162,794,6.162,795,3.814,796,3.814,797,3.814,798,3.814,799,3.814,800,3.814,801,3.814,802,3.814,803,5.42,804,3.814,805,5.919,806,3.814,807,3.814,808,3.814,809,3.814,810,3.814,811,3.814,812,3.19,813,4.904,814,5.919,815,4.904,816,4.904,817,3.814,818,5.721,819,3.814,820,3.814,821,5.42,822,3.814,823,3.814,824,3.814,825,3.814]],["title/modules.html",[0,1.093]],["body/modules.html",[0,1.173,1,2.257,8,0.026,24,0.026,25,0.026,84,3.019,94,2.72,95,2.72,105,3.843,234,3.019,238,2.72,826,5.93,827,5.93,828,6.364,829,5.93,830,5.93]],["title/overview.html",[831,3.633]],["body/overview.html",[0,1.139,1,2.755,8,0.031,22,0.229,23,0.153,24,0.021,25,0.021,26,0.601,27,2.078,62,1.172,69,1.637,71,1.773,73,1.637,75,1.773,77,1.637,79,1.637,81,1.637,84,4.24,85,1.789,86,2.186,87,2.186,88,1.969,89,2.822,90,2.822,91,2.822,92,2.822,93,2.822,94,2.98,95,3.594,96,3.308,97,3.308,98,2.932,99,2.186,100,1.969,170,1.634,189,1.082,197,2.458,209,1.082,234,4.032,235,2.822,236,2.822,237,2.822,238,2.98,610,2.822,643,2.822,644,2.822,831,2.822,832,3.374,833,3.374,834,4.525,835,2.822,836,3.374]],["title/routes.html",[170,2.104]],["body/routes.html",[8,0.028,24,0.028,25,0.028,170,2.489]],["title/miscellaneous/variables.html",[713,2.786,837,2.216]],["body/miscellaneous/variables.html",[4,0.191,8,0.032,24,0.02,25,0.02,42,0.401,52,0.709,55,0.763,57,0.828,101,2.209,113,2.561,130,3.992,136,2.209,137,2.131,138,2.536,139,2.536,140,2.536,141,3.518,142,2.536,143,2.536,144,2.536,145,2.536,146,2.536,147,2.536,148,3.518,149,2.455,150,2.536,151,2.145,156,1.468,196,0.897,207,3.519,208,2.536,230,2.209,246,2.209,287,1.97,288,1.97,289,1.868,296,3.675,297,3.064,298,2.536,488,2.209,515,1.965,546,3.519,577,3.518,649,2.209,690,3.518,713,2.209,722,2.536,723,3.518,728,2.536,729,2.536,730,4.039,731,4.039,762,2.536,812,2.536,835,2.536,837,2.536,838,3.032,839,3.032,840,4.206,841,3.032,842,3.032,843,3.032,844,3.032,845,3.032,846,3.032,847,3.032,848,3.032,849,3.032,850,3.032,851,4.83,852,3.032,853,3.032,854,3.032,855,3.032,856,3.032,857,3.032,858,3.032,859,3.032,860,3.032,861,3.032,862,3.032,863,3.032,864,3.032,865,3.032,866,3.032,867,3.032,868,3.032,869,4.206,870,3.032,871,3.032,872,3.032,873,3.032,874,3.032,875,3.032,876,3.032,877,3.032]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["0.16.3",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["0.48.0",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["0.49.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":610,"title":{},"body":{"components/PostListComponent.html":{},"overview.html":{}}}],["1.18.3",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["1.18.4",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["1.2.5",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["1.8.9",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":615,"title":{},"body":{"components/PostListComponent.html":{}}}],["100",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":613,"title":{},"body":{"components/PostListComponent.html":{}}}],["2.0.1",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":834,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":835,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.16.3",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":614,"title":{},"body":{"components/PostListComponent.html":{}}}],["5.0.0",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["5.2.13",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["532004071803",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":832,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":790,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":833,"title":{},"body":{"overview.html":{}}}],["8.3.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":836,"title":{},"body":{"overview.html":{}}}],["9dd8c",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.appspot.com",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.firebaseapp.com",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dd8c.firebaseio.com",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken\").set",{"_index":493,"title":{},"body":{"injectables/MapService.html":{}}}],["activatedrout",{"_index":526,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["activatedroutesnapshot",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["addpost",{"_index":651,"title":{},"body":{"injectables/PostsService.html":{}}}],["addpost(titl",{"_index":656,"title":{},"body":{"injectables/PostsService.html":{}}}],["aizasya5vblvbtd_gtl9iwgjc1vdgdzf24k9x5c",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasyayglwmxlh_hsdxg0irotkfkyrblx8ayiq",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":21,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"index.html":{}}}],["angular/anim",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["angular/compil",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":10,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/fir",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":19,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/PostListComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/databas",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{}}}],["angularfiredatabas",{"_index":468,"title":{},"body":{"injectables/MapService.html":{}}}],["angularfiredatabasemodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirelist",{"_index":482,"title":{},"body":{"injectables/MapService.html":{}}}],["angularfiremodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["angularmaterialmodul",{"_index":1,"title":{"modules/AngularMaterialModule.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["anim",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["apikey",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["app.compon",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":27,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":157,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":94,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":393,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["artifact",{"_index":806,"title":{},"body":{"index.html":{}}}],["asyncvalid",{"_index":554,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["auth",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.servic",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["auth/auth",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.guard",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.module#authmodul",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.servic",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["authdata",{"_index":190,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdata).subscrib",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":177,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authinform",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettim",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.userid",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":96,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authlistenersub",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authmodul",{"_index":234,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authrequest",{"_index":228,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodul",{"_index":238,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":47,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authstatuslisten",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussub",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["authtoken",{"_index":226,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["autoauthus",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["automat",{"_index":20,"title":{},"body":{"modules/AngularMaterialModule.html":{},"index.html":{}}}],["avail",{"_index":827,"title":{},"body":{"modules.html":{}}}],["backend_url",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":232,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["beta.1",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["black",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["brows",{"_index":828,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":805,"title":{},"body":{"index.html":{}}}],["c.key",{"_index":501,"title":{},"body":{"injectables/MapService.html":{}}}],["canactiv",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(rout",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":379,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":384,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["cg",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":800,"title":{},"body":{"index.html":{}}}],["changes.map(c",{"_index":500,"title":{},"body":{"injectables/MapService.html":{}}}],["check",{"_index":824,"title":{},"body":{"index.html":{}}}],["check').subscribe(respons",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":23,"title":{"classes/AppPage.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{}},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clearauthdata",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentim",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":788,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodul",{"_index":643,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_declar",{"_index":644,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_import",{"_index":645,"title":{},"body":{"modules/PostsModule.html":{}}}],["code",{"_index":801,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["compon",{"_index":26,"title":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('reauthent",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('set",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":508,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log(expirationd",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":367,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(authservic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(coordin",{"_index":401,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["constructor(data",{"_index":360,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(db",{"_index":467,"title":{},"body":{"injectables/MapService.html":{}}}],["constructor(dialog",{"_index":373,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(featur",{"_index":392,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["constructor(http",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["constructor(postsservic",{"_index":525,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["constructor(priv",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["constructor(publ",{"_index":404,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["content",{"_index":510,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["context",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.valu",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coordin",{"_index":397,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{}}}],["cord",{"_index":455,"title":{},"body":{"injectables/MapService.html":{}}}],["cordspath",{"_index":456,"title":{},"body":{"injectables/MapService.html":{}}}],["core",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":708,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostCreateComponent.html":{}}}],["create'},{'nam",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["create.compon",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PostsModule.html":{}}}],["create.component.css",{"_index":517,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.html",{"_index":518,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.t",{"_index":516,"title":{},"body":{"components/PostCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:19",{"_index":538,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:20",{"_index":540,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:21",{"_index":534,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:22",{"_index":539,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:23",{"_index":536,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:24",{"_index":537,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:25",{"_index":527,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:27",{"_index":541,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:29",{"_index":529,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:66",{"_index":532,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:77",{"_index":533,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create.component.ts:98",{"_index":528,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["create/mim",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["create/post",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["createmark",{"_index":460,"title":{},"body":{"injectables/MapService.html":{}}}],["createmarker(data",{"_index":471,"title":{},"body":{"injectables/MapService.html":{}}}],["createus",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(email",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":511,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["currentpag",{"_index":594,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["data",{"_index":359,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{}}}],["data.messag",{"_index":370,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data.model",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.model.t",{"_index":192,"title":{},"body":{"interfaces/AuthData.html":{},"coverage.html":{}}}],["databaseurl",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationd",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":470,"title":{},"body":{"injectables/MapService.html":{}}}],["db.list(this.cordspath",{"_index":503,"title":{},"body":{"injectables/MapService.html":{}}}],["db.list(this.markerpath",{"_index":496,"title":{},"body":{"injectables/MapService.html":{}}}],["declar",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["decor",{"_index":364,"title":{},"body":{"components/ErrorComponent.html":{}}}],["default",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["delet",{"_index":642,"title":{},"body":{"components/PostListComponent.html":{}}}],["deletepost",{"_index":652,"title":{},"body":{"injectables/PostsService.html":{}}}],["deletepost(postid",{"_index":658,"title":{},"body":{"injectables/PostsService.html":{}}}],["depend",{"_index":85,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":796,"title":{},"body":{"index.html":{}}}],["develop",{"_index":791,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":376,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["diplomarbeit",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":804,"title":{},"body":{"index.html":{}}}],["directori",{"_index":809,"title":{},"body":{"index.html":{}}}],["dist",{"_index":808,"title":{},"body":{"index.html":{}}}],["document",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["dotenv",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["durat",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynam",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":819,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":158,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":161,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":558,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["edit/:postid",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["element(by.css('app",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":194,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["end",{"_index":818,"title":{},"body":{"index.html":{}}}],["enter",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["entrycompon",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["environment.mapbox.accesstoken",{"_index":494,"title":{},"body":{"injectables/MapService.html":{}}}],["environments/environ",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["error",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{}}}],["error'},{'nam",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["error.compon",{"_index":382,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.component.css",{"_index":356,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":357,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error.messag",{"_index":386,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/error",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["error/error.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["errorcompon",{"_index":69,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorinterceptor",{"_index":97,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["errormessag",{"_index":385,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":531,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["event.target",{"_index":572,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["execut",{"_index":815,"title":{},"body":{"index.html":{}}}],["expirationd",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostr",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresindur",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":22,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["express",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":391,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["featurecollect",{"_index":389,"title":{"classes/FeatureCollection.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["fgscolor",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fgsposit",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fgssize",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fgstype",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fileread",{"_index":577,"title":{},"body":{"components/PostCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["filereader.addeventlistener('loadend",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebas",{"_index":762,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":811,"title":{},"body":{"index.html":{}}}],["form",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{}}}],["form.invalid",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["form.value.password",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":542,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formcontrol(nul",{"_index":550,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formdata",{"_index":684,"title":{},"body":{"injectables/PostsService.html":{}}}],["formgroup",{"_index":535,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["formsmodul",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["frob",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["further",{"_index":820,"title":{},"body":{"index.html":{}}}],["gener",{"_index":787,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":400,"title":{"classes/GeoJson.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["geojson(coordin",{"_index":507,"title":{},"body":{"injectables/MapService.html":{}}}],["geometri",{"_index":399,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["get",{"_index":783,"title":{"index.html":{}},"body":{}}],["getauthdata",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslisten",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["getcord",{"_index":461,"title":{},"body":{"injectables/MapService.html":{}}}],["getisauth",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["getkey",{"_index":462,"title":{},"body":{"injectables/MapService.html":{}}}],["getmark",{"_index":463,"title":{},"body":{"injectables/MapService.html":{}}}],["getparagraphtext",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["getpost",{"_index":653,"title":{},"body":{"injectables/PostsService.html":{}}}],["getpost(id",{"_index":660,"title":{},"body":{"injectables/PostsService.html":{}}}],["getposts(postsperpag",{"_index":662,"title":{},"body":{"injectables/PostsService.html":{}}}],["getpostupdatelisten",{"_index":628,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["gettoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserid",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["gl",{"_index":489,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["go",{"_index":823,"title":{},"body":{"index.html":{}}}],["googlemapskey",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":826,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":197,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":166,"title":{},"body":{"classes/AppPage.html":{}}}],["handleerror",{"_index":464,"title":{},"body":{"injectables/MapService.html":{}}}],["handleerror(error",{"_index":476,"title":{},"body":{"injectables/MapService.html":{}}}],["hasprogressbar",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":230,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'nam",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["header.component.css",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.compon",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":71,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":821,"title":{},"body":{"index.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["htmlinputelement).files[0",{"_index":573,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["http",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["http://localhost:3000/api",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":798,"title":{},"body":{"index.html":{}}}],["http_interceptor",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["httpclientmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":378,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":222,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":225,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":220,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["https://diplomarbeit",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":512,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["identifi",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["igeojson",{"_index":398,"title":{"interfaces/IGeoJson.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["igeometri",{"_index":396,"title":{"interfaces/IGeometry.html":{}},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["imag",{"_index":553,"title":{},"body":{"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["imagepath",{"_index":513,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["imagepreview",{"_index":519,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["implement",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["inject",{"_index":209,"title":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["intercept",{"_index":217,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":219,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":124,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor.t",{"_index":216,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:15",{"_index":375,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:19",{"_index":377,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:6",{"_index":218,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.ts:9",{"_index":223,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":189,"title":{"interfaces/AuthData.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"interfaces/Post.html":{}},"body":{"interfaces/AuthData.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"interfaces/Post.html":{},"coverage.html":{},"overview.html":{}}}],["isauthent",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["isload",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["isvalid",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":817,"title":{},"body":{"index.html":{}}}],["key",{"_index":457,"title":{},"body":{"injectables/MapService.html":{}}}],["key).remov",{"_index":506,"title":{},"body":{"injectables/MapService.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["list",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostListComponent.html":{}}}],["list'},{'nam",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["list.compon",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PostsModule.html":{}}}],["list.component.css",{"_index":592,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.html",{"_index":593,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.t",{"_index":591,"title":{},"body":{"components/PostListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":617,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:16",{"_index":612,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:17",{"_index":621,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:18",{"_index":618,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:19",{"_index":611,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:20",{"_index":616,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:21",{"_index":623,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:22",{"_index":622,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:23",{"_index":620,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:24",{"_index":601,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:26",{"_index":619,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:28",{"_index":603,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:48",{"_index":606,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:55",{"_index":609,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:64",{"_index":602,"title":{},"body":{"components/PostListComponent.html":{}}}],["list/post",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["liter",{"_index":361,"title":{},"body":{"components/ErrorComponent.html":{}}}],["loadchildren",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem('expir",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('userid",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expir",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('userid",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expir",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('userid",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":244,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["login(email",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincompon",{"_index":73,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["map'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["map(postdata",{"_index":671,"title":{},"body":{"injectables/PostsService.html":{}}}],["map.modul",{"_index":490,"title":{},"body":{"injectables/MapService.html":{}}}],["mapbox",{"_index":488,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":487,"title":{},"body":{"injectables/MapService.html":{}}}],["mapcompon",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maps/map/map.compon",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mapservic",{"_index":453,"title":{"injectables/MapService.html":{}},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["marker",{"_index":459,"title":{},"body":{"injectables/MapService.html":{}}}],["markerpath",{"_index":458,"title":{},"body":{"injectables/MapService.html":{}}}],["mat_dialog_data",{"_index":366,"title":{},"body":{"components/ErrorComponent.html":{}}}],["matbuttonmodul",{"_index":13,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matcardmodul",{"_index":12,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["match",{"_index":25,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":374,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["matdialogmodul",{"_index":18,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["material.modul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["material.module.t",{"_index":6,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matexpansionmodul",{"_index":15,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matinputmodul",{"_index":11,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matpaginatormodul",{"_index":17,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":16,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":14,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["maxpost",{"_index":676,"title":{},"body":{"injectables/PostsService.html":{}}}],["meancours",{"_index":785,"title":{},"body":{"index.html":{}}}],["messag",{"_index":368,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["messagingsenderid",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["mime",{"_index":547,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["mimetyp",{"_index":546,"title":{},"body":{"components/PostCreateComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":837,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":520,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["modul",{"_index":0,"title":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{},"modules.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoos",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":822,"title":{},"body":{"index.html":{}}}],["multer",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["multi",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["navig",{"_index":797,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":160,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":221,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":233,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pip",{"_index":383,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":794,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ngmodul",{"_index":9,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/PostCreateComponent.html":{},"modules/PostsModule.html":{}}}],["ngondestroy",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["ngoninit",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["ngx",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxuiloaderconfig",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxuiloadermodul",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxuiloadermodule.forroot(ngxuiloaderconfig",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemon",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["now.gettim",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["number",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["object",{"_index":690,"title":{},"body":{"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(mapboxgl",{"_index":492,"title":{},"body":{"injectables/MapService.html":{}}}],["observ",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["observable.cr",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["occur",{"_index":369,"title":{},"body":{"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["of(nul",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["okay",{"_index":371,"title":{},"body":{"components/ErrorComponent.html":{}}}],["onchangedpag",{"_index":599,"title":{},"body":{"components/PostListComponent.html":{}}}],["onchangedpage(pagedata",{"_index":604,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondelet",{"_index":600,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondelete(postid",{"_index":608,"title":{},"body":{"components/PostListComponent.html":{}}}],["ondestroy",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["onimagepick",{"_index":523,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["onimagepicked(ev",{"_index":530,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["onlogin",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogin(form",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsavepost",{"_index":524,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["onsignup",{"_index":698,"title":{},"body":{"components/SignupComponent.html":{}}}],["onsignup(form",{"_index":702,"title":{},"body":{"components/SignupComponent.html":{}}}],["option",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["out",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"index.html":{},"overview.html":{}}}],["overlaycolor",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":831,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":734,"title":{"dependencies.html":{}},"body":{}}],["pagedata",{"_index":607,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagedata.pageindex",{"_index":635,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagedata.pages",{"_index":637,"title":{},"body":{"components/PostListComponent.html":{}}}],["pageev",{"_index":605,"title":{},"body":{"components/PostListComponent.html":{}}}],["pagesize=${postsperpage}&page=${currentpag",{"_index":669,"title":{},"body":{"injectables/PostsService.html":{}}}],["pagesizeopt",{"_index":595,"title":{},"body":{"components/PostListComponent.html":{}}}],["paramet",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["parammap",{"_index":543,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parammap.get('postid",{"_index":560,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parammap.has('postid",{"_index":556,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["parsejson",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["parser",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":195,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pb_direct",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["pick",{"_index":589,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["pipe",{"_index":670,"title":{},"body":{"injectables/PostsService.html":{}}}],["pipe(map(chang",{"_index":499,"title":{},"body":{"injectables/MapService.html":{}}}],["pk.eyj1ijoidhdvzmfjzxjlbg9hzgvkiiwiysi6imnqbgpqznf5ddbjbwmzcg43yxnmztu4bg8ifq.pryi64e2nw3v3k7qnwz",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["point",{"_index":403,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["posit",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":57,"title":{"interfaces/Post.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post._id",{"_index":673,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.cont",{"_index":641,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["post.creat",{"_index":675,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.imagepath",{"_index":674,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.model",{"_index":544,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["post.servic",{"_index":545,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["post.titl",{"_index":640,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postcount",{"_index":630,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postcreatecompon",{"_index":77,"title":{"components/PostCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postdata",{"_index":683,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata._id",{"_index":563,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.append('cont",{"_index":686,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('id",{"_index":691,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('imag",{"_index":687,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.append('titl",{"_index":685,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.cont",{"_index":565,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.cr",{"_index":567,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.imagepath",{"_index":566,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postdata.maxpost",{"_index":677,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.post",{"_index":633,"title":{},"body":{"components/PostListComponent.html":{}}}],["postdata.postcount",{"_index":632,"title":{},"body":{"components/PostListComponent.html":{}}}],["postdata.posts.map(post",{"_index":672,"title":{},"body":{"injectables/PostsService.html":{}}}],["postdata.titl",{"_index":564,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["postid",{"_index":521,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postlistcompon",{"_index":79,"title":{"components/PostListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["posts/post",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["posts/post.model",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["posts/posts.modul",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["postsmodul",{"_index":95,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsperpag",{"_index":596,"title":{},"body":{"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["postsservic",{"_index":522,"title":{"injectables/PostsService.html":{}},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["postssub",{"_index":597,"title":{},"body":{"components/PostListComponent.html":{}}}],["postsupd",{"_index":650,"title":{},"body":{"injectables/PostsService.html":{}}}],["privat",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["prod",{"_index":810,"title":{},"body":{"index.html":{}}}],["product",{"_index":812,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":786,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["properti",{"_index":193,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["protractor",{"_index":163,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["providedin",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["public",{"_index":358,"title":{},"body":{"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["put(backend_url",{"_index":692,"title":{},"body":{"injectables/PostsService.html":{}}}],["queryparam",{"_index":668,"title":{},"body":{"injectables/PostsService.html":{}}}],["re",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiv",{"_index":648,"title":{},"body":{"modules/PostsModule.html":{}}}],["reactiveformsmodul",{"_index":647,"title":{},"body":{"modules/PostsModule.html":{}}}],["reader",{"_index":576,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.onload",{"_index":578,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.readasdataurl(fil",{"_index":581,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["reader.result",{"_index":580,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["readm",{"_index":825,"title":{},"body":{"index.html":{}}}],["reload",{"_index":799,"title":{},"body":{"index.html":{}}}],["removemark",{"_index":465,"title":{},"body":{"injectables/MapService.html":{}}}],["removemarker(key",{"_index":478,"title":{},"body":{"injectables/MapService.html":{}}}],["req",{"_index":224,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clon",{"_index":229,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":231,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.messag",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}],["respons",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.expiresin",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.userid",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":24,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(255",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/MapService.html":{},"injectables/PostsService.html":{}}}],["root'},{'nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["rout",{"_index":170,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/PostCreateComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["routermodul",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PostsModule.html":{}}}],["routermodule.forchild(rout",{"_index":245,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module.t",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["run",{"_index":793,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/map",{"_index":491,"title":{},"body":{"injectables/MapService.html":{}}}],["rxjs/oper",{"_index":380,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/PostsService.html":{}}}],["save",{"_index":590,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["saveauthdata",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffold",{"_index":802,"title":{},"body":{"index.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["serv",{"_index":795,"title":{},"body":{"index.html":{}}}],["server",{"_index":792,"title":{},"body":{"index.html":{}}}],["setauthtim",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(dur",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmarkergeojson",{"_index":466,"title":{},"body":{"injectables/MapService.html":{}}}],["setmarkergeojson(coordin",{"_index":480,"title":{},"body":{"injectables/MapService.html":{}}}],["settimeout",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["sign",{"_index":706,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":696,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":697,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcompon",{"_index":81,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snapshotchang",{"_index":498,"title":{},"body":{"injectables/MapService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["squar",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.t",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mime",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post.service.t",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/angular",{"_index":5,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["src/app/app",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth",{"_index":191,"title":{},"body":{"interfaces/AuthData.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.t",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:13",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:16",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:105",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:122",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:128",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:13",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:134",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:14",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:15",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:29",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:37",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:49",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:81",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/signup.component.t",{"_index":695,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:12",{"_index":704,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:13",{"_index":699,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":701,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:23",{"_index":703,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:32",{"_index":700,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/error/error",{"_index":372,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/error/error.component.t",{"_index":355,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":365,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:12",{"_index":363,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:9",{"_index":362,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/header/header.component.t",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:11",{"_index":421,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:12",{"_index":416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":418,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":419,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:27",{"_index":417,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/maps/map.modul.t",{"_index":390,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"coverage.html":{}}}],["src/app/maps/map.modul.ts:13",{"_index":408,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:14",{"_index":405,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:16",{"_index":407,"title":{},"body":{"classes/GeoJson.html":{}}}],["src/app/maps/map.modul.ts:25",{"_index":394,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["src/app/maps/map.modul.ts:26",{"_index":395,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["src/app/maps/map.service.t",{"_index":454,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/maps/map.service.ts:13",{"_index":486,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:14",{"_index":483,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:15",{"_index":484,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:16",{"_index":485,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:17",{"_index":469,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:30",{"_index":475,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:34",{"_index":473,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:38",{"_index":474,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:42",{"_index":472,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:46",{"_index":479,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:50",{"_index":481,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map.service.ts:54",{"_index":477,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/maps/map/map.component.t",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["src/app/posts/post",{"_index":515,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/posts/post.model.t",{"_index":509,"title":{},"body":{"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/posts/post.service.t",{"_index":649,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/posts/post.service.ts:103",{"_index":659,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:14",{"_index":667,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:15",{"_index":655,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:19",{"_index":663,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:50",{"_index":664,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:54",{"_index":661,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:64",{"_index":657,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/post.service.ts:79",{"_index":666,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/app/posts/posts.module.t",{"_index":646,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/environments/environment.t",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":784,"title":{"index.html":{}},"body":{}}],["state",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":807,"title":{},"body":{"index.html":{}}}],["string",{"_index":196,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["subject",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["subscrib",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe((postdata",{"_index":629,"title":{},"body":{"components/PostListComponent.html":{}}}],["subscribe(authstatu",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(isauthent",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["subscribe(respons",{"_index":693,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscribe(responsedata",{"_index":688,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscribe(transformedpostdata",{"_index":678,"title":{},"body":{"injectables/PostsService.html":{}}}],["subscript",{"_index":420,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["support",{"_index":829,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":830,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":814,"title":{},"body":{"index.html":{}}}],["this.authlistenersub",{"_index":423,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authlistenersubs.unsubscrib",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservic",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{}}}],["this.authservice.autoauthus",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.createuser(form.value.email",{"_index":705,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.getauthstatuslisten",{"_index":424,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.getisauth",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["this.authservice.gettoken",{"_index":227,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.getuserid",{"_index":634,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.authservice.login(form.value.email",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authstatuslistener.asobserv",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(fals",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(tru",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussub",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.authstatussub.unsubscrib",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.clearauthdata",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cord",{"_index":502,"title":{},"body":{"injectables/MapService.html":{}}}],["this.currentpag",{"_index":625,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.db.list(this.markerpath).push(data",{"_index":504,"title":{},"body":{"injectables/MapService.html":{}}}],["this.db.object(this.markerpath",{"_index":505,"title":{},"body":{"injectables/MapService.html":{}}}],["this.dialog.open(errorcompon",{"_index":387,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.form",{"_index":549,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.get('image').updatevalueandvalid",{"_index":575,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.invalid",{"_index":582,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.patchvalue({imag",{"_index":574,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.reset",{"_index":588,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.setvalu",{"_index":568,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.cont",{"_index":585,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.imag",{"_index":586,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.form.value.titl",{"_index":584,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.geometri",{"_index":402,"title":{},"body":{"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{}}}],["this.getauthdata",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.http.delete(backend_url",{"_index":694,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.http.get(backend_url",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.http.post(backend_url",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.imagepreview",{"_index":579,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.isauthent",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isload",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["this.key",{"_index":497,"title":{},"body":{"injectables/MapService.html":{}}}],["this.logout",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mark",{"_index":495,"title":{},"body":{"injectables/MapService.html":{}}}],["this.mod",{"_index":557,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post",{"_index":562,"title":{},"body":{"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{}}}],["this.post.cont",{"_index":570,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post.imagepath",{"_index":571,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.post.titl",{"_index":569,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postid",{"_index":559,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsperpag",{"_index":636,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservic",{"_index":627,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.addpost",{"_index":583,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsservice.deletepost(postid).subscrib",{"_index":638,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.getpost(this.postid).subscribe((postdata",{"_index":561,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postsservice.getposts(this.postsperpag",{"_index":624,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsservice.updatepost",{"_index":587,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.postssub",{"_index":626,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postssub.unsubscrib",{"_index":639,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.postsupdated.asobserv",{"_index":682,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postsupdated.next",{"_index":680,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":555,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["this.router.navig",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["this.router.navigate(['/login",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.saveauthdata(token",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresindur",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentim",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.totalpost",{"_index":631,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.userid",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{}}}],["this.userisauthent",{"_index":422,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["throwerror",{"_index":381,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":388,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["titl",{"_index":514,"title":{},"body":{"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentim",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["totalpost",{"_index":598,"title":{},"body":{"components/PostListComponent.html":{}}}],["transformedpostdata.maxpost",{"_index":681,"title":{},"body":{"injectables/PostsService.html":{}}}],["transformedpostdata.post",{"_index":679,"title":{},"body":{"injectables/PostsService.html":{}}}],["tree",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"interfaces/IGeoJson.html":{},"interfaces/IGeometry.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/Post.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.valid",{"_index":548,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["type.validator.t",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":689,"title":{},"body":{"injectables/PostsService.html":{}}}],["typeof(control.valu",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/mapbox",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["types/underscor",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["uint8array(filereader.result).subarray(0",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqu",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":813,"title":{},"body":{"index.html":{}}}],["up",{"_index":707,"title":{},"body":{"components/SignupComponent.html":{}}}],["updatepost",{"_index":654,"title":{},"body":{"injectables/PostsService.html":{}}}],["updatepost(id",{"_index":665,"title":{},"body":{"injectables/PostsService.html":{}}}],["us",{"_index":803,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/PostListComponent.html":{}}}],["userisauthent",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["valid",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["validators.minlength(3",{"_index":552,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["validators.requir",{"_index":551,"title":{},"body":{"components/PostCreateComponent.html":{}}}],["valu",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"classes/FeatureCollection.html":{},"classes/GeoJson.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"components/SignupComponent.html":{}}}],["variabl",{"_index":713,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":789,"title":{},"body":{"index.html":{}}}],["via",{"_index":816,"title":{},"body":{"index.html":{}}}],["void",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/PostCreateComponent.html":{},"components/PostListComponent.html":{},"injectables/PostsService.html":{},"components/SignupComponent.html":{}}}],["work",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["ye",{"_index":406,"title":{},"body":{"classes/GeoJson.html":{},"components/PostListComponent.html":{}}}],["zone.j",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AngularMaterialModule.html":{"url":"modules/AngularMaterialModule.html","title":"module - AngularMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  AngularMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/angular-material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatDialogModule\n} from '@angular/material';\n\n@NgModule({\n  // automatic import by angular\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\nexport class AngularMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Post } from './posts/post.model';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ErrorComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ErrorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                            \n                                     ErrorInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    PostsModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ErrorComponent } from './error/error.component';\nimport { MapComponent } from './maps/map/map.component';\n\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error/error-interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/posts.module';\n\nimport {\n  NgxUiLoaderModule,\n  NgxUiLoaderConfig,\n  SPINNER,\n  POSITION,\n  PB_DIRECTION\n} from 'ngx-ui-loader';\n\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\n  fgsColor: \"black\",\n  fgsPosition: \"center-center\",\n  fgsSize: 100,\n  fgsType: \"square-loader\",\n  overlayColor: \"rgba(255, 255, 255, 0)\",\n  hasProgressBar: false\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    PostsModule,\n    HttpClientModule,\n    FormsModule,\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MapComponent } from './maps/map/map.component';\n\nconst routes: Routes = [\n  { path: 'list', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard]},\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'map', component: MapComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthData {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    const userIsAuthenticated = this.authService.getIsAuth();\n    if (!userIsAuthenticated) {\n      this.router.navigate(['/login']);\n    }\n    return userIsAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-interceptor.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest, next: HttpHandler) {\n      const authToken = this.authService.getToken();\n      const authRequest = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n      });\n      return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAuthModule -->\n\nAngularMaterialModule->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                createUser\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                getUserId\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoAuthUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nautoAuthUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clearAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearAuthData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { token: any; expirationDate: any; userId: any; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthStatusListener\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthStatusListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIsAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIsAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveAuthData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveAuthData(token: string, expirationDate: Date, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationDate\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setAuthTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAuthTimer(duration: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        duration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusListener:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenTimer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthData } from './auth-data.model';\n\nconst BACKEND_URL = environment.apiUrl + '/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http.post(BACKEND_URL + '/signup', authData).subscribe(\n      () => {\n        this.router.navigate(['/']);\n      },\n      error => {\n        this.authStatusListener.next(false);\n      }\n    );\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(\n        BACKEND_URL + '/login',\n        authData\n      )\n      .subscribe(\n        response => {\n          const token = response.token;\n          this.token = token;\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n            this.userId = response.userId;\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            console.log(expirationDate);\n            this.saveAuthData(token, expirationDate, this.userId);\n            this.router.navigate(['/']);\n          }\n        },\n        error => {\n          this.authStatusListener.next(false);\n        }\n      );\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.http.get(BACKEND_URL + '/check').subscribe(response => {\n        const res: any = response;\n        if (res.message === 'Auth worked') {\n          this.authStatusListener.next(true);\n          this.userId = authInformation.userId;\n          this.setAuthTimer(expiresIn / 1000);\n          console.log('Reauthenticated');\n        } else {\n          this.logout();\n        }\n      });\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/']);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log('Setting timer: ' + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         An Error Occured \n\n   {{ data.message }} \n\n\n  Okay\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' An Error Occured    {{ data.message }}   Okay'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/error/error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error-interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/error/error-interceptor.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { ErrorComponent } from './error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) { }\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An error occurred!';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeatureCollection.html":{"url":"classes/FeatureCollection.html","title":"class - FeatureCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeatureCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                features\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(features: Array)\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.modul.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        features\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            features\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        features:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FeatureCollection'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoJson.html":{"url":"classes/GeoJson.html","title":"class - GeoJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IGeoJson\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geometry\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(coordinates: , properties?: )\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.modul.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geometry:     IGeometry\n\n                    \n                \n                    \n                        \n                            Type :     IGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        properties:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Feature'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.modul.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubs\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authListenerSubs:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userIsAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener()\n    .subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  Posts\n  \n  \n    \n      Map\n    \n    \n      New post\n    \n    \n      Login\n    \n    \n      Signup\n    \n    \n      Logout\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Posts              Map              New post              Login              Signup              Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoJson.html":{"url":"interfaces/IGeoJson.html","title":"interface - IGeoJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     IGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGeometry\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeometry.html":{"url":"interfaces/IGeometry.html","title":"interface - IGeometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeometry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.modul.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coordinates\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                    \n                                \n                                \n                                    \n                                        coordinates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGeometry {\n    type: string;\n    coordinates: number[];\n}\n\nexport interface IGeoJson {\n    type: string;\n    geometry: IGeometry;\n    properties?: any;\n}\n\nexport class GeoJson implements IGeoJson {\n  type = 'Feature';\n  geometry: IGeometry;\n\n  constructor(coordinates, public properties?) {\n    this.geometry = {\n      type: 'Point',\n      coordinates: coordinates\n    };\n  }\n}\n\nexport class FeatureCollection {\n  type = 'FeatureCollection';\n  constructor(public features: Array) {}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogin(form: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Please enter valid email\n    \n    \n      \n      Please enter a valid password.\n    \n    Login\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Please enter valid email                    Please enter a valid password.        Login  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/maps/map.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cords\n                            \n                            \n                                    Private\n                                cordsPath\n                            \n                            \n                                keys\n                            \n                            \n                                    Private\n                                markerPath\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMarker\n                            \n                            \n                                getCords\n                            \n                            \n                                getKeys\n                            \n                            \n                                getMarker\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                removeMarker\n                            \n                            \n                                setMarkerGeoJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/maps/map.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMarker(data: GeoJson)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    GeoJson\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCords\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetKeys()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMarker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveMarker(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMarkerGeoJson\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMarkerGeoJson(coordinates: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cords:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cordsPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cordsPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/cords\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/marker\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markers:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/maps/map.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport * as mapboxgl from 'mapbox-gl';\nimport { GeoJson } from './map.modul';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MapService {\n  markers: AngularFireList;\n  cords: AngularFireList;\n  keys: Observable;\n  private markerPath = \"/marker\";\n  private cordsPath = \"/cords\";\n\n  constructor(private db: AngularFireDatabase) {\n    Object.getOwnPropertyDescriptor(mapboxgl, \"accessToken\").set(\n      environment.mapbox.accessToken\n    );\n    this.markers = db.list(this.markerPath);\n    this.keys = this.markers\n      .snapshotChanges()\n      .pipe(map(changes => changes.map(c => ({ key: c.key }))));\n    this.cords = db.list(this.cordsPath);\n  }\n\n  getMarker() {\n    return this.markers;\n  }\n\n  getCords() {\n    return this.cords;\n  }\n\n  getKeys() {\n    return this.keys;\n  }\n\n  createMarker(data: GeoJson) {\n    return this.db.list(this.markerPath).push(data);\n  }\n\n  removeMarker(key: string) {\n    return this.db.object(this.markerPath + \"/\" + key).remove();\n  }\n\n  setMarkerGeoJson(coordinates) {\n    return new GeoJson(coordinates);\n  }\n\n  private handleError(error) {\n    console.log(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/posts/post.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        id\n                                \n                                \n                                        imagePath\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n  id: string;\n  title: string;\n  content: string;\n  imagePath: string;\n  creator: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostCreateComponent.html":{"url":"components/PostCreateComponent.html","title":"component - PostCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/post-create/post-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-create\n            \n\n            \n                styleUrls\n                post-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-create.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                form\n                            \n                            \n                                imagePreview\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                mode\n                            \n                            \n                                post\n                            \n                            \n                                    Private\n                                postId\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImagePicked\n                            \n                            \n                                onSavePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postsService: PostsService, route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post-create/post-create.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsService\n                                                  \n                                                        \n                                                                    PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onImagePicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonImagePicked(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSavePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSavePost()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagePreview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imagePreview:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'create'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     Post\n\n                    \n                \n                    \n                        \n                            Type :     Post\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsService:     PostsService\n\n                    \n                \n                    \n                        \n                            Type :     PostsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-create/post-create.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { mimeType } from './mime-type.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  private mode = 'create';\n  private postId: string;\n  private authStatusSub: Subscription;\n  post: Post;\n  form: FormGroup;\n  isLoading = false;\n  imagePreview;\n\n  constructor(public postsService: PostsService, public route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n    .getAuthStatusListener()\n    .subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.form = new FormGroup({\n      'title': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\n      'content': new FormControl(null, { validators: [Validators.required] }),\n      'image': new FormControl(null, { validators: [Validators.required] , asyncValidators: [mimeType] })\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n        if (paramMap.has('postId')) {\n          this.mode = 'edit';\n          this.postId = paramMap.get('postId');\n          this.isLoading = true;\n          this.postsService.getPost(this.postId).subscribe((postData) => {\n            this.post = {\n              id: postData._id,\n              title: postData.title,\n              content: postData.content,\n              imagePath: postData.imagePath,\n              creator: postData.creator };\n            this.form.setValue({\n              title: this.post.title,\n              content: this.post.content,\n              image: this.post.imagePath\n            });\n            this.isLoading = false;\n          });\n        } else {\n          this.mode = 'create';\n          this.postId = null;\n        }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({image: file});\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n        );\n    }\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      \n        \n          Please enter post title\n      \n      \n        Pick Image\n        \n      \n      \n        \n      \n      \n        \n        Please enter post content\n      \n      Save Post\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Please enter post title                    Pick Image                                                        Please enter post content            Save Post    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostListComponent.html":{"url":"components/PostListComponent.html","title":"component - PostListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posts/post-list/post-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-list\n            \n\n            \n                styleUrls\n                post-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                currentPage\n                            \n                            \n                                isLoading\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                posts\n                            \n                            \n                                postsPerPage\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                    Private\n                                postsSub\n                            \n                            \n                                totalPosts\n                            \n                            \n                                userId\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangedPage\n                            \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postsService: PostsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post-list/post-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsService\n                                                  \n                                                        \n                                                                    PostsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangedPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangedPage(pageData: PageEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageData\n                                                        \n                                                                    PageEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDelete(postId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageSizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 2, 5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postsPerPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsPerPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsService:     PostsService\n\n                    \n                \n                    \n                        \n                            Type :     PostsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalPosts:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userIsAuthenticated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post-list/post-list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 5;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor(public postsService: PostsService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.postsSub = this.postsService\n    .getPostUpdateListener()\n    .subscribe((postData: { posts: Post[], postCount: number }) => {\n      this.isLoading = false;\n      this.totalPosts = postData.postCount;\n      this.posts = postData.posts;\n    });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userId = this.authService.getUserId();\n    this.authStatusSub = this.authService\n    .getAuthStatusListener()\n    .subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n0 && !isLoading\">\n  \n    \n      {{ post.title }}\n    \n    \n      \n    \n    {{ post.content }}\n    \n      EDIT\n      DELETE\n    \n  \n\n0\">\n\n\n  No post yes!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0 && !isLoading\">            {{ post.title }}                      {{ post.content }}          EDIT      DELETE      0\">  No post yes!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n  Modules\n  PostsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nPostCreateComponent\n\nPostCreateComponent\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostCreateComponent->PostsModule\n\n\n\n\n\nPostListComponent\n\nPostListComponent\n\nPostsModule -->\n\nPostListComponent->PostsModule\n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nPostsModule -->\n\nAngularMaterialModule->PostsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/posts/posts.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PostCreateComponent\n                            \n                            \n                                PostListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AngularMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';   // reactive forms\n\n\nimport { PostCreateComponent } from './post-create/post-create.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    PostCreateComponent,\n    PostListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\nexport class PostsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/posts/post.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                posts\n                            \n                            \n                                    Private\n                                postsUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPost\n                            \n                            \n                                deletePost\n                            \n                            \n                                getPost\n                            \n                            \n                                getPosts\n                            \n                            \n                                getPostUpdateListener\n                            \n                            \n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/posts/post.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPost\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPost(title: string, content: string, image: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        image\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePost\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePost(postId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPost\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPost(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPosts(postsPerPage: number, currentPage: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postsPerPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        currentPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPostUpdateListener\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPostUpdateListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePost(id: string, title: string, content: string, image: File | string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        image\n                                                        \n                                                                    File | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postsUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsUpdated:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posts/post.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../environments/environment';\nimport { Post } from './post.model';\n\nconst BACKEND_URL = environment.apiUrl + '/posts/';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    this.http\n      .get(\n        BACKEND_URL + queryParams\n      )\n      .pipe(\n        map(postData => {\n          return {\n            posts: postData.posts.map(post => {\n              return {\n                title: post.title,\n                content: post.content,\n                id: post._id,\n                imagePath: post.imagePath,\n                creator: post.creator\n              };\n            }),\n            maxPosts: postData.maxPosts\n          };\n        })\n      )\n      .subscribe(transformedPostData => {\n        this.posts = transformedPostData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get(BACKEND_URL + id);\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.http\n      .post(\n        BACKEND_URL,\n        postData\n      )\n      .subscribe(responseData => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === 'object') {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSignup\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSignup(form: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatusSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener()\n    .subscribe(authStatus => {\n      this.isLoading = false;\n    });\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Please enter valid email\n    \n    \n      \n      Please enter a valid password.\n    \n    Sign up\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Please enter valid email                    Please enter a valid password.        Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'PostCreateComponent', 'selector': 'app-post-create'},{'name': 'PostListComponent', 'selector': 'app-post-list'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                ngxUiLoaderConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth-data.model.ts\n            \n            \n                interface\n            \n            \n                AuthData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                variable\n            \n            \n                BACKEND_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                class\n            \n            \n                FeatureCollection\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                class\n            \n            \n                GeoJson\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                interface\n            \n            \n                IGeoJson\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/maps/map.modul.ts\n            \n            \n                interface\n            \n            \n                IGeometry\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/maps/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/maps/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                src/app/posts/post-create/mime-type.validator.ts\n            \n            \n                variable\n            \n            \n                mimeType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/posts/post-create/post-create.component.ts\n            \n            \n                component\n            \n            \n                PostCreateComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/posts/post-list/post-list.component.ts\n            \n            \n                component\n            \n            \n                PostListComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/posts/post.model.ts\n            \n            \n                interface\n            \n            \n                Post\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/posts/post.service.ts\n            \n            \n                injectable\n            \n            \n                PostsService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/posts/post.service.ts\n            \n            \n                variable\n            \n            \n                BACKEND_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/fire : ^5.0.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @types/mapbox-gl : ^0.48.0\n        \n            @types/underscore : ^1.8.9\n        \n            angularfire2 : ^5.0.1\n        \n            bcrypt : ^3.0.1\n        \n            body-parser : ^1.18.3\n        \n            core-js : ^2.5.4\n        \n            dotenv : ^6.0.0\n        \n            express : ^4.16.3\n        \n            firebase : ^5.4.2\n        \n            jsonwebtoken : ^8.3.0\n        \n            mapbox-animation : ^0.16.3\n        \n            mapbox-gl : ^0.49.0-beta.1\n        \n            mongoose : ^5.2.13\n        \n            mongoose-unique-validator : ^2.0.1\n        \n            multer : ^1.3.1\n        \n            ngx-ui-loader : ^1.2.5\n        \n            nodemon : ^1.18.4\n        \n            parsejson : 0.0.3\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeanCourse\nThis project was generated with Angular CLI version 6.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nAngularMaterialModule->PostsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAngularMaterialModule->AuthModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nPostCreateComponent\n\nPostCreateComponent\n\nPostsModule -->\n\nPostCreateComponent->PostsModule\n\n\n\n\n\nPostListComponent\n\nPostListComponent\n\nPostsModule -->\n\nPostListComponent->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BACKEND_URL   (src/.../auth.service.ts)\n                        \n                        \n                            BACKEND_URL   (src/.../post.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mimeType   (src/.../mime-type.validator.ts)\n                        \n                        \n                            ngxUiLoaderConfig   (src/.../app.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BACKEND_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user'\n                        \n                    \n\n\n            \n        \n\n    src/app/posts/post.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BACKEND_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/posts/'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api',\n\n  firebase: {\n    apiKey: 'AIzaSyA5VBlvbTD_Gtl9IwgJc1vdGDZF24K9X5c',\n    authDomain: 'diplomarbeit-9dd8c.firebaseapp.com',\n    databaseURL: 'https://diplomarbeit-9dd8c.firebaseio.com',\n    projectId: 'diplomarbeit-9dd8c',\n    storageBucket: 'diplomarbeit-9dd8c.appspot.com',\n    messagingSenderId: '532004071803'\n  },\n\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoidHdvZmFjZXJlbG9hZGVkIiwiYSI6ImNqbGpqZnF5dDBjbWMzcG43YXNmZTU4bG8ifQ.PrYi64e2Nw3V3K7qNWz-Cg'\n  },\n\n  googleMapsKey: 'AIzaSyAYgLWmXlH_hSdXG0irotKfKyRblx8ayiQ'\n\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/posts/post-create/mime-type.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     \n\n                    \n                \n                    \n                        \n                            Default value : (\n  control: AbstractControl\n): Promise | Observable => {\n  if (!control.value || typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer) => {\n      fileReader.addEventListener('loadend', () => {\n        const arr = new Uint8Array(fileReader.result).subarray(0, 4);\n        let header = '';\n        let isValid = false;\n        for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxUiLoaderConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ngxUiLoaderConfig:     NgxUiLoaderConfig\n\n                    \n                \n                    \n                        \n                            Type :     NgxUiLoaderConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  fgsColor: \"black\",\n  fgsPosition: \"center-center\",\n  fgsSize: 100,\n  fgsType: \"square-loader\",\n  overlayColor: \"rgba(255, 255, 255, 0)\",\n  hasProgressBar: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
